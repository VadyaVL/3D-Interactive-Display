<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AForge.Imaging.2.2.4.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.BurkesColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.#ctor(AForge.Imaging.ColorReduction.BurkesColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.Constructor">
            <summary>Sets the shim of BurkesColorDithering.BurkesColorDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimBurkesColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors">
            <summary>Shim type of AForge.Imaging.ColorReduction.ColorErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.#ctor(AForge.Imaging.ColorReduction.ColorErrorDiffusionToAdjacentNeighbors)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.CoefficientsGet">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.get_Coefficients()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.CoefficientsSetInt32ArrayArray">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.set_Coefficients(Int32[][] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.ConstructorInt32ArrayArray">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.ColorErrorDiffusionToAdjacentNeighbors(Int32[][] coefficients)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.AllInstances.CalculateCoefficientsSum">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.AllInstances.CoefficientsGet">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.get_Coefficients()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorErrorDiffusionToAdjacentNeighbors.AllInstances.CoefficientsSetInt32ArrayArray">
            <summary>Sets the shim of ColorErrorDiffusionToAdjacentNeighbors.set_Coefficients(Int32[][] value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer">
            <summary>Shim type of AForge.Imaging.ColorReduction.ColorImageQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.#ctor(AForge.Imaging.ColorReduction.ColorImageQuantizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.CalculatePaletteBitmapInt32">
            <summary>Sets the shim of ColorImageQuantizer.CalculatePalette(Bitmap image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.CalculatePaletteUnmanagedImageInt32">
            <summary>Sets the shim of ColorImageQuantizer.CalculatePalette(UnmanagedImage image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.ConstructorIColorQuantizer">
            <summary>Sets the shim of ColorImageQuantizer.ColorImageQuantizer(IColorQuantizer quantizer)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.GetClosestColorInt32Int32Int32">
            <summary>Sets the shim of ColorImageQuantizer.GetClosestColor(Int32 red, Int32 green, Int32 blue)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.QuantizerGet">
            <summary>Sets the shim of ColorImageQuantizer.get_Quantizer()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.QuantizerSetIColorQuantizer">
            <summary>Sets the shim of ColorImageQuantizer.set_Quantizer(IColorQuantizer value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.ReduceColorsBitmapColorArray">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(Bitmap image, Color[] palette)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.ReduceColorsBitmapInt32">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(Bitmap image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.ReduceColorsUnmanagedImageColorArray">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(UnmanagedImage image, Color[] palette)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.ReduceColorsUnmanagedImageInt32">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(UnmanagedImage image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.UseCachingGet">
            <summary>Sets the shim of ColorImageQuantizer.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.UseCachingSetBoolean">
            <summary>Sets the shim of ColorImageQuantizer.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.CalculatePaletteBitmapInt32">
            <summary>Sets the shim of ColorImageQuantizer.CalculatePalette(Bitmap image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.CalculatePaletteUnmanagedImageInt32">
            <summary>Sets the shim of ColorImageQuantizer.CalculatePalette(UnmanagedImage image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.GetClosestColorInt32Int32Int32">
            <summary>Sets the shim of ColorImageQuantizer.GetClosestColor(Int32 red, Int32 green, Int32 blue)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.QuantizerGet">
            <summary>Sets the shim of ColorImageQuantizer.get_Quantizer()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.QuantizerSetIColorQuantizer">
            <summary>Sets the shim of ColorImageQuantizer.set_Quantizer(IColorQuantizer value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.ReduceColorsBitmapColorArray">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(Bitmap image, Color[] palette)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.ReduceColorsBitmapInt32">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(Bitmap image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.ReduceColorsUnmanagedImageColorArray">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(UnmanagedImage image, Color[] palette)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.ReduceColorsUnmanagedImageInt32">
            <summary>Sets the shim of ColorImageQuantizer.ReduceColors(UnmanagedImage image, Int32 paletteSize)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.UseCachingGet">
            <summary>Sets the shim of ColorImageQuantizer.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimColorImageQuantizer.AllInstances.UseCachingSetBoolean">
            <summary>Sets the shim of ColorImageQuantizer.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.ErrorDiffusionColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.#ctor(AForge.Imaging.ColorReduction.ErrorDiffusionColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.ApplyBitmap">
            <summary>Sets the shim of ErrorDiffusionColorDithering.Apply(Bitmap sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.ApplyUnmanagedImage">
            <summary>Sets the shim of ErrorDiffusionColorDithering.Apply(UnmanagedImage sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.ColorTableGet">
            <summary>Sets the shim of ErrorDiffusionColorDithering.get_ColorTable()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.ColorTableSetColorArray">
            <summary>Sets the shim of ErrorDiffusionColorDithering.set_ColorTable(Color[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.Constructor">
            <summary>Sets the shim of ErrorDiffusionColorDithering.ErrorDiffusionColorDithering()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.GetClosestColorInt32Int32Int32ByteOut">
            <summary>Sets the shim of ErrorDiffusionColorDithering.GetClosestColor(Int32 red, Int32 green, Int32 blue, Byte&amp; colorIndex)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.UseCachingGet">
            <summary>Sets the shim of ErrorDiffusionColorDithering.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.UseCachingSetBoolean">
            <summary>Sets the shim of ErrorDiffusionColorDithering.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.ApplyBitmap">
            <summary>Sets the shim of ErrorDiffusionColorDithering.Apply(Bitmap sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of ErrorDiffusionColorDithering.Apply(UnmanagedImage sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.ColorTableGet">
            <summary>Sets the shim of ErrorDiffusionColorDithering.get_ColorTable()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.ColorTableSetColorArray">
            <summary>Sets the shim of ErrorDiffusionColorDithering.set_ColorTable(Color[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.GetClosestColorInt32Int32Int32ByteOut">
            <summary>Sets the shim of ErrorDiffusionColorDithering.GetClosestColor(Int32 red, Int32 green, Int32 blue, Byte&amp; colorIndex)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.UseCachingGet">
            <summary>Sets the shim of ErrorDiffusionColorDithering.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimErrorDiffusionColorDithering.AllInstances.UseCachingSetBoolean">
            <summary>Sets the shim of ErrorDiffusionColorDithering.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.FloydSteinbergColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.#ctor(AForge.Imaging.ColorReduction.FloydSteinbergColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.Constructor">
            <summary>Sets the shim of FloydSteinbergColorDithering.FloydSteinbergColorDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimFloydSteinbergColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.JarvisJudiceNinkeColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.#ctor(AForge.Imaging.ColorReduction.JarvisJudiceNinkeColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.Constructor">
            <summary>Sets the shim of JarvisJudiceNinkeColorDithering.JarvisJudiceNinkeColorDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimJarvisJudiceNinkeColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer">
            <summary>Shim type of AForge.Imaging.ColorReduction.MedianCutQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.#ctor(AForge.Imaging.ColorReduction.MedianCutQuantizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.Bind(AForge.Imaging.ColorReduction.IColorQuantizer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.AddColorColor">
            <summary>Sets the shim of MedianCutQuantizer.AddColor(Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.Clear">
            <summary>Sets the shim of MedianCutQuantizer.Clear()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.Constructor">
            <summary>Sets the shim of MedianCutQuantizer.MedianCutQuantizer()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.GetPaletteInt32">
            <summary>Sets the shim of MedianCutQuantizer.GetPalette(Int32 colorCount)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.AllInstances.AddColorColor">
            <summary>Sets the shim of MedianCutQuantizer.AddColor(Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.AllInstances.Clear">
            <summary>Sets the shim of MedianCutQuantizer.Clear()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimMedianCutQuantizer.AllInstances.GetPaletteInt32">
            <summary>Sets the shim of MedianCutQuantizer.GetPalette(Int32 colorCount)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.OrderedColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.#ctor(AForge.Imaging.ColorReduction.OrderedColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ApplyBitmap">
            <summary>Sets the shim of OrderedColorDithering.Apply(Bitmap sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ApplyUnmanagedImage">
            <summary>Sets the shim of OrderedColorDithering.Apply(UnmanagedImage sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ColorTableGet">
            <summary>Sets the shim of OrderedColorDithering.get_ColorTable()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ColorTableSetColorArray">
            <summary>Sets the shim of OrderedColorDithering.set_ColorTable(Color[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.Constructor">
            <summary>Sets the shim of OrderedColorDithering.OrderedColorDithering()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ConstructorByteMdArray2">
            <summary>Sets the shim of OrderedColorDithering.OrderedColorDithering(Byte[,] matrix)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.GetClosestColorInt32Int32Int32ByteOut">
            <summary>Sets the shim of OrderedColorDithering.GetClosestColor(Int32 red, Int32 green, Int32 blue, Byte&amp; colorIndex)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ThresholdMatrixGet">
            <summary>Sets the shim of OrderedColorDithering.get_ThresholdMatrix()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.ThresholdMatrixSetByteMdArray2">
            <summary>Sets the shim of OrderedColorDithering.set_ThresholdMatrix(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.UseCachingGet">
            <summary>Sets the shim of OrderedColorDithering.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.UseCachingSetBoolean">
            <summary>Sets the shim of OrderedColorDithering.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ApplyBitmap">
            <summary>Sets the shim of OrderedColorDithering.Apply(Bitmap sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of OrderedColorDithering.Apply(UnmanagedImage sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ColorTableGet">
            <summary>Sets the shim of OrderedColorDithering.get_ColorTable()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ColorTableSetColorArray">
            <summary>Sets the shim of OrderedColorDithering.set_ColorTable(Color[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.GetClosestColorInt32Int32Int32ByteOut">
            <summary>Sets the shim of OrderedColorDithering.GetClosestColor(Int32 red, Int32 green, Int32 blue, Byte&amp; colorIndex)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ThresholdMatrixGet">
            <summary>Sets the shim of OrderedColorDithering.get_ThresholdMatrix()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.ThresholdMatrixSetByteMdArray2">
            <summary>Sets the shim of OrderedColorDithering.set_ThresholdMatrix(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.UseCachingGet">
            <summary>Sets the shim of OrderedColorDithering.get_UseCaching()</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimOrderedColorDithering.AllInstances.UseCachingSetBoolean">
            <summary>Sets the shim of OrderedColorDithering.set_UseCaching(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.SierraColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.#ctor(AForge.Imaging.ColorReduction.SierraColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.Constructor">
            <summary>Sets the shim of SierraColorDithering.SierraColorDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimSierraColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering">
            <summary>Shim type of AForge.Imaging.ColorReduction.StuckiColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.#ctor(AForge.Imaging.ColorReduction.StuckiColorDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.Constructor">
            <summary>Sets the shim of StuckiColorDithering.StuckiColorDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.ShimStuckiColorDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors">
            <summary>Stub type of AForge.Imaging.ColorReduction.ColorErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.#ctor(System.Int32[][])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.Diffuse(System.Int32,System.Int32,System.Int32,System.Byte*)">
            <summary>Sets the stub of ColorErrorDiffusionToAdjacentNeighbors.Diffuse(Int32 rError, Int32 gError, Int32 bError, Byte* ptr)</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.InitializeStub">
            <summary>Initializes a new instance of type StubColorErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorErrorDiffusionToAdjacentNeighbors.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer">
            <summary>Stub type of AForge.Imaging.ColorReduction.ColorImageQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer.#ctor(AForge.Imaging.ColorReduction.IColorQuantizer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer.InitializeStub">
            <summary>Initializes a new instance of type StubColorImageQuantizer</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubColorImageQuantizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering">
            <summary>Stub type of AForge.Imaging.ColorReduction.ErrorDiffusionColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.Diffuse(System.Int32,System.Int32,System.Int32,System.Byte*)">
            <summary>Sets the stub of ErrorDiffusionColorDithering.Diffuse(Int32 rError, Int32 gError, Int32 bError, Byte* ptr)</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.InitializeStub">
            <summary>Initializes a new instance of type StubErrorDiffusionColorDithering</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubErrorDiffusionColorDithering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer">
            <summary>Stub type of AForge.Imaging.ColorReduction.IColorQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.#ctor">
            <summary>Initializes a new instance of type StubIColorQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.afi::AForge#Imaging#ColorReduction#IColorQuantizer#AddColor(System.Drawing.Color)">
            <summary>Sets the stub of IColorQuantizer.AddColor(Color color)</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.afi::AForge#Imaging#ColorReduction#IColorQuantizer#Clear">
            <summary>Sets the stub of IColorQuantizer.Clear()</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.afi::AForge#Imaging#ColorReduction#IColorQuantizer#GetPalette(System.Int32)">
            <summary>Sets the stub of IColorQuantizer.GetPalette(Int32 colorCount)</summary>
        </member>
        <member name="F:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.AddColorColor">
            <summary>Sets the stub of IColorQuantizer.AddColor(Color color)</summary>
        </member>
        <member name="F:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.Clear">
            <summary>Sets the stub of IColorQuantizer.Clear()</summary>
        </member>
        <member name="F:AForge.Imaging.ColorReduction.Fakes.StubIColorQuantizer.GetPaletteInt32">
            <summary>Sets the stub of IColorQuantizer.GetPalette(Int32 colorCount)</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer">
            <summary>Stub type of AForge.Imaging.ColorReduction.MedianCutQuantizer</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer.InitializeStub">
            <summary>Initializes a new instance of type StubMedianCutQuantizer</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubMedianCutQuantizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering">
            <summary>Stub type of AForge.Imaging.ColorReduction.OrderedColorDithering</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.#ctor(System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.InitializeStub">
            <summary>Initializes a new instance of type StubOrderedColorDithering</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ColorReduction.Fakes.StubOrderedColorDithering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter">
            <summary>Shim type of AForge.Imaging.ComplexFilters.FrequencyFilter</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.#ctor(AForge.Imaging.ComplexFilters.FrequencyFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.Bind(AForge.Imaging.ComplexFilters.IComplexFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.ApplyComplexImage">
            <summary>Sets the shim of FrequencyFilter.Apply(ComplexImage complexImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.Constructor">
            <summary>Sets the shim of FrequencyFilter.FrequencyFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.ConstructorIntRange">
            <summary>Sets the shim of FrequencyFilter.FrequencyFilter(IntRange frequencyRange)</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.FrequencyRangeGet">
            <summary>Sets the shim of FrequencyFilter.get_FrequencyRange()</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.FrequencyRangeSetIntRange">
            <summary>Sets the shim of FrequencyFilter.set_FrequencyRange(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.AllInstances.ApplyComplexImage">
            <summary>Sets the shim of FrequencyFilter.Apply(ComplexImage complexImage)</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.AllInstances.FrequencyRangeGet">
            <summary>Sets the shim of FrequencyFilter.get_FrequencyRange()</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.ShimFrequencyFilter.AllInstances.FrequencyRangeSetIntRange">
            <summary>Sets the shim of FrequencyFilter.set_FrequencyRange(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter">
            <summary>Stub type of AForge.Imaging.ComplexFilters.FrequencyFilter</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.#ctor(AForge.IntRange)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.InitializeStub">
            <summary>Initializes a new instance of type StubFrequencyFilter</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.ComplexFilters.Fakes.StubFrequencyFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.ComplexFilters.Fakes.StubIComplexFilter">
            <summary>Stub type of AForge.Imaging.ComplexFilters.IComplexFilter</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.StubIComplexFilter.#ctor">
            <summary>Initializes a new instance of type StubIComplexFilter</summary>
        </member>
        <member name="M:AForge.Imaging.ComplexFilters.Fakes.StubIComplexFilter.afi::AForge#Imaging#ComplexFilters#IComplexFilter#Apply(AForge.Imaging.ComplexImage)">
            <summary>Sets the stub of IComplexFilter.Apply(ComplexImage complexImage)</summary>
        </member>
        <member name="F:AForge.Imaging.ComplexFilters.Fakes.StubIComplexFilter.ApplyComplexImage">
            <summary>Sets the stub of IComplexFilter.Apply(ComplexImage complexImage)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlob">
            <summary>Shim type of AForge.Imaging.Blob</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlob.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlob.#ctor(AForge.Imaging.Blob)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlob.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlob.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AreaGet">
            <summary>Sets the shim of Blob.get_Area()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AreaSetInt32">
            <summary>Sets the shim of Blob.set_Area(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.CenterOfGravityGet">
            <summary>Sets the shim of Blob.get_CenterOfGravity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.CenterOfGravitySetPoint">
            <summary>Sets the shim of Blob.set_CenterOfGravity(Point value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ColorMeanGet">
            <summary>Sets the shim of Blob.get_ColorMean()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ColorMeanSetColor">
            <summary>Sets the shim of Blob.set_ColorMean(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ColorStdDevGet">
            <summary>Sets the shim of Blob.get_ColorStdDev()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ColorStdDevSetColor">
            <summary>Sets the shim of Blob.set_ColorStdDev(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ConstructorBlob">
            <summary>Sets the shim of Blob.Blob(Blob source)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ConstructorInt32Rectangle">
            <summary>Sets the shim of Blob.Blob(Int32 id, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.FullnessGet">
            <summary>Sets the shim of Blob.get_Fullness()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.FullnessSetDouble">
            <summary>Sets the shim of Blob.set_Fullness(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.IDGet">
            <summary>Sets the shim of Blob.get_ID()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.IDSetInt32">
            <summary>Sets the shim of Blob.set_ID(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ImageGet">
            <summary>Sets the shim of Blob.get_Image()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.ImageSetUnmanagedImage">
            <summary>Sets the shim of Blob.set_Image(UnmanagedImage value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.OriginalSizeGet">
            <summary>Sets the shim of Blob.get_OriginalSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.OriginalSizeSetBoolean">
            <summary>Sets the shim of Blob.set_OriginalSize(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.RectangleGet">
            <summary>Sets the shim of Blob.get_Rectangle()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlob.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.AreaGet">
            <summary>Sets the shim of Blob.get_Area()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.AreaSetInt32">
            <summary>Sets the shim of Blob.set_Area(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.CenterOfGravityGet">
            <summary>Sets the shim of Blob.get_CenterOfGravity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.CenterOfGravitySetPoint">
            <summary>Sets the shim of Blob.set_CenterOfGravity(Point value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ColorMeanGet">
            <summary>Sets the shim of Blob.get_ColorMean()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ColorMeanSetColor">
            <summary>Sets the shim of Blob.set_ColorMean(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ColorStdDevGet">
            <summary>Sets the shim of Blob.get_ColorStdDev()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ColorStdDevSetColor">
            <summary>Sets the shim of Blob.set_ColorStdDev(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.FullnessGet">
            <summary>Sets the shim of Blob.get_Fullness()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.FullnessSetDouble">
            <summary>Sets the shim of Blob.set_Fullness(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.IDGet">
            <summary>Sets the shim of Blob.get_ID()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.IDSetInt32">
            <summary>Sets the shim of Blob.set_ID(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ImageGet">
            <summary>Sets the shim of Blob.get_Image()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.ImageSetUnmanagedImage">
            <summary>Sets the shim of Blob.set_Image(UnmanagedImage value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.OriginalSizeGet">
            <summary>Sets the shim of Blob.get_OriginalSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.OriginalSizeSetBoolean">
            <summary>Sets the shim of Blob.set_OriginalSize(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlob.AllInstances.RectangleGet">
            <summary>Sets the shim of Blob.get_Rectangle()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlobCounter">
            <summary>Shim type of AForge.Imaging.BlobCounter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounter.#ctor(AForge.Imaging.BlobCounter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.BackgroundThresholdGet">
            <summary>Sets the shim of BlobCounter.get_BackgroundThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.BackgroundThresholdSetColor">
            <summary>Sets the shim of BlobCounter.set_BackgroundThreshold(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.BuildObjectsMapUnmanagedImage">
            <summary>Sets the shim of BlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.Constructor">
            <summary>Sets the shim of BlobCounter.BlobCounter()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.ConstructorBitmap">
            <summary>Sets the shim of BlobCounter.BlobCounter(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.ConstructorBitmapData">
            <summary>Sets the shim of BlobCounter.BlobCounter(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.ConstructorUnmanagedImage">
            <summary>Sets the shim of BlobCounter.BlobCounter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlobCounter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.AllInstances.BackgroundThresholdGet">
            <summary>Sets the shim of BlobCounter.get_BackgroundThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.AllInstances.BackgroundThresholdSetColor">
            <summary>Sets the shim of BlobCounter.set_BackgroundThreshold(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounter.AllInstances.BuildObjectsMapUnmanagedImage">
            <summary>Sets the shim of BlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlobCounterBase">
            <summary>Shim type of AForge.Imaging.BlobCounterBase</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounterBase.#ctor(AForge.Imaging.BlobCounterBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounterBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlobCounterBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.BlobsFilterGet">
            <summary>Sets the shim of BlobCounterBase.get_BlobsFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.BlobsFilterSetIBlobsFilter">
            <summary>Sets the shim of BlobCounterBase.set_BlobsFilter(IBlobsFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.CollectObjectsInfoUnmanagedImage">
            <summary>Sets the shim of BlobCounterBase.CollectObjectsInfo(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.Constructor">
            <summary>Sets the shim of BlobCounterBase.BlobCounterBase()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ConstructorBitmap">
            <summary>Sets the shim of BlobCounterBase.BlobCounterBase(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ConstructorBitmapData">
            <summary>Sets the shim of BlobCounterBase.BlobCounterBase(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ConstructorUnmanagedImage">
            <summary>Sets the shim of BlobCounterBase.BlobCounterBase(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.CoupledSizeFilteringGet">
            <summary>Sets the shim of BlobCounterBase.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of BlobCounterBase.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ExtractBlobsImageBitmapBlobBoolean">
            <summary>Sets the shim of BlobCounterBase.ExtractBlobsImage(Bitmap image, Blob blob, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ExtractBlobsImageUnmanagedImageBlobBoolean">
            <summary>Sets the shim of BlobCounterBase.ExtractBlobsImage(UnmanagedImage image, Blob blob, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.FilterBlobsGet">
            <summary>Sets the shim of BlobCounterBase.get_FilterBlobs()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.FilterBlobsSetBoolean">
            <summary>Sets the shim of BlobCounterBase.set_FilterBlobs(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetBlobsEdgePointsBlob">
            <summary>Sets the shim of BlobCounterBase.GetBlobsEdgePoints(Blob blob)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetBlobsLeftAndRightEdgesBlobListOfIntPointOutListOfIntPointOut">
            <summary>Sets the shim of BlobCounterBase.GetBlobsLeftAndRightEdges(Blob blob, List`1&lt;IntPoint&gt;&amp; leftEdge, List`1&lt;IntPoint&gt;&amp; rightEdge)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetBlobsTopAndBottomEdgesBlobListOfIntPointOutListOfIntPointOut">
            <summary>Sets the shim of BlobCounterBase.GetBlobsTopAndBottomEdges(Blob blob, List`1&lt;IntPoint&gt;&amp; topEdge, List`1&lt;IntPoint&gt;&amp; bottomEdge)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetObjectsBitmapBoolean">
            <summary>Sets the shim of BlobCounterBase.GetObjects(Bitmap image, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetObjectsInformation">
            <summary>Sets the shim of BlobCounterBase.GetObjectsInformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetObjectsRectangles">
            <summary>Sets the shim of BlobCounterBase.GetObjectsRectangles()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.GetObjectsUnmanagedImageBoolean">
            <summary>Sets the shim of BlobCounterBase.GetObjects(UnmanagedImage image, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MaxHeightGet">
            <summary>Sets the shim of BlobCounterBase.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MaxHeightSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MaxWidthGet">
            <summary>Sets the shim of BlobCounterBase.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MaxWidthSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MinHeightGet">
            <summary>Sets the shim of BlobCounterBase.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MinHeightSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MinWidthGet">
            <summary>Sets the shim of BlobCounterBase.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.MinWidthSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ObjectLabelsGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectLabels()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ObjectsCountGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ObjectsOrderGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectsOrder()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ObjectsOrderSetObjectsOrder">
            <summary>Sets the shim of BlobCounterBase.set_ObjectsOrder(ObjectsOrder value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ProcessImageBitmap">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ProcessImageBitmapData">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.ProcessImageUnmanagedImage">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.BlobsFilterGet">
            <summary>Sets the shim of BlobCounterBase.get_BlobsFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.BlobsFilterSetIBlobsFilter">
            <summary>Sets the shim of BlobCounterBase.set_BlobsFilter(IBlobsFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.CollectObjectsInfoUnmanagedImage">
            <summary>Sets the shim of BlobCounterBase.CollectObjectsInfo(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.CoupledSizeFilteringGet">
            <summary>Sets the shim of BlobCounterBase.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of BlobCounterBase.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ExtractBlobsImageBitmapBlobBoolean">
            <summary>Sets the shim of BlobCounterBase.ExtractBlobsImage(Bitmap image, Blob blob, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ExtractBlobsImageUnmanagedImageBlobBoolean">
            <summary>Sets the shim of BlobCounterBase.ExtractBlobsImage(UnmanagedImage image, Blob blob, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.FilterBlobsGet">
            <summary>Sets the shim of BlobCounterBase.get_FilterBlobs()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.FilterBlobsSetBoolean">
            <summary>Sets the shim of BlobCounterBase.set_FilterBlobs(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetBlobsEdgePointsBlob">
            <summary>Sets the shim of BlobCounterBase.GetBlobsEdgePoints(Blob blob)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetBlobsLeftAndRightEdgesBlobListOfIntPointOutListOfIntPointOut">
            <summary>Sets the shim of BlobCounterBase.GetBlobsLeftAndRightEdges(Blob blob, List`1&lt;IntPoint&gt;&amp; leftEdge, List`1&lt;IntPoint&gt;&amp; rightEdge)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetBlobsTopAndBottomEdgesBlobListOfIntPointOutListOfIntPointOut">
            <summary>Sets the shim of BlobCounterBase.GetBlobsTopAndBottomEdges(Blob blob, List`1&lt;IntPoint&gt;&amp; topEdge, List`1&lt;IntPoint&gt;&amp; bottomEdge)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetObjectsBitmapBoolean">
            <summary>Sets the shim of BlobCounterBase.GetObjects(Bitmap image, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetObjectsInformation">
            <summary>Sets the shim of BlobCounterBase.GetObjectsInformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetObjectsRectangles">
            <summary>Sets the shim of BlobCounterBase.GetObjectsRectangles()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.GetObjectsUnmanagedImageBoolean">
            <summary>Sets the shim of BlobCounterBase.GetObjects(UnmanagedImage image, Boolean extractInOriginalSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MaxHeightGet">
            <summary>Sets the shim of BlobCounterBase.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MaxHeightSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MaxWidthGet">
            <summary>Sets the shim of BlobCounterBase.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MaxWidthSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MinHeightGet">
            <summary>Sets the shim of BlobCounterBase.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MinHeightSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MinWidthGet">
            <summary>Sets the shim of BlobCounterBase.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.MinWidthSetInt32">
            <summary>Sets the shim of BlobCounterBase.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ObjectLabelsGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectLabels()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ObjectsCountGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ObjectsOrderGet">
            <summary>Sets the shim of BlobCounterBase.get_ObjectsOrder()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ObjectsOrderSetObjectsOrder">
            <summary>Sets the shim of BlobCounterBase.set_ObjectsOrder(ObjectsOrder value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlobCounterBase.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of BlobCounterBase.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlockMatch">
            <summary>Shim type of AForge.Imaging.BlockMatch</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlockMatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlockMatch.#ctor(AForge.Imaging.BlockMatch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlockMatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimBlockMatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.ConstructorIntPointIntPointSingle">
            <summary>Sets the shim of BlockMatch.BlockMatch(IntPoint sourcePoint, IntPoint matchPoint, Single similarity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.MatchPointGet">
            <summary>Sets the shim of BlockMatch.get_MatchPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.SimilarityGet">
            <summary>Sets the shim of BlockMatch.get_Similarity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.SourcePointGet">
            <summary>Sets the shim of BlockMatch.get_SourcePoint()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimBlockMatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.AllInstances.MatchPointGet">
            <summary>Sets the shim of BlockMatch.get_MatchPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.AllInstances.SimilarityGet">
            <summary>Sets the shim of BlockMatch.get_Similarity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimBlockMatch.AllInstances.SourcePointGet">
            <summary>Sets the shim of BlockMatch.get_SourcePoint()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimComplexImage">
            <summary>Shim type of AForge.Imaging.ComplexImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimComplexImage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimComplexImage.#ctor(AForge.Imaging.ComplexImage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimComplexImage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimComplexImage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimComplexImage.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.BackwardFourierTransform">
            <summary>Sets the shim of ComplexImage.BackwardFourierTransform()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.Clone">
            <summary>Sets the shim of ComplexImage.Clone()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.ConstructorInt32Int32">
            <summary>Sets the shim of ComplexImage.ComplexImage(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.DataGet">
            <summary>Sets the shim of ComplexImage.get_Data()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.ForwardFourierTransform">
            <summary>Sets the shim of ComplexImage.ForwardFourierTransform()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.FourierTransformedGet">
            <summary>Sets the shim of ComplexImage.get_FourierTransformed()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.FromBitmapBitmap">
            <summary>Sets the shim of ComplexImage.FromBitmap(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.FromBitmapBitmapData">
            <summary>Sets the shim of ComplexImage.FromBitmap(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.HeightGet">
            <summary>Sets the shim of ComplexImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.ToBitmap">
            <summary>Sets the shim of ComplexImage.ToBitmap()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.WidthGet">
            <summary>Sets the shim of ComplexImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimComplexImage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.BackwardFourierTransform">
            <summary>Sets the shim of ComplexImage.BackwardFourierTransform()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.Clone">
            <summary>Sets the shim of ComplexImage.Clone()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.DataGet">
            <summary>Sets the shim of ComplexImage.get_Data()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.ForwardFourierTransform">
            <summary>Sets the shim of ComplexImage.ForwardFourierTransform()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.FourierTransformedGet">
            <summary>Sets the shim of ComplexImage.get_FourierTransformed()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.HeightGet">
            <summary>Sets the shim of ComplexImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.ToBitmap">
            <summary>Sets the shim of ComplexImage.ToBitmap()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimComplexImage.AllInstances.WidthGet">
            <summary>Sets the shim of ComplexImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimDocumentSkewChecker">
            <summary>Shim type of AForge.Imaging.DocumentSkewChecker</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDocumentSkewChecker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDocumentSkewChecker.#ctor(AForge.Imaging.DocumentSkewChecker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDocumentSkewChecker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDocumentSkewChecker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.CollectLinesInt16">
            <summary>Sets the shim of DocumentSkewChecker.CollectLines(Int16 minLineIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.Constructor">
            <summary>Sets the shim of DocumentSkewChecker.DocumentSkewChecker()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetMostIntensiveLinesInt32">
            <summary>Sets the shim of DocumentSkewChecker.GetMostIntensiveLines(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleBitmap">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleBitmapData">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleBitmapDataRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleBitmapRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleUnmanagedImage">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.GetSkewAngleUnmanagedImageRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.InitHoughMap">
            <summary>Sets the shim of DocumentSkewChecker.InitHoughMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.LocalPeakRadiusGet">
            <summary>Sets the shim of DocumentSkewChecker.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of DocumentSkewChecker.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MaxBetaGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MaxBeta()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MaxBetaSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MaxBeta(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MaxSkewToDetectGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MaxSkewToDetect()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MaxSkewToDetectSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MaxSkewToDetect(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MinBetaGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MinBeta()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.MinBetaSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MinBeta(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.StepsPerDegreeGet">
            <summary>Sets the shim of DocumentSkewChecker.get_StepsPerDegree()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.StepsPerDegreeSetInt32">
            <summary>Sets the shim of DocumentSkewChecker.set_StepsPerDegree(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.CollectLinesInt16">
            <summary>Sets the shim of DocumentSkewChecker.CollectLines(Int16 minLineIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetMostIntensiveLinesInt32">
            <summary>Sets the shim of DocumentSkewChecker.GetMostIntensiveLines(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleBitmap">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleBitmapData">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleBitmapDataRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleBitmapRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleUnmanagedImage">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.GetSkewAngleUnmanagedImageRectangle">
            <summary>Sets the shim of DocumentSkewChecker.GetSkewAngle(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.InitHoughMap">
            <summary>Sets the shim of DocumentSkewChecker.InitHoughMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.LocalPeakRadiusGet">
            <summary>Sets the shim of DocumentSkewChecker.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of DocumentSkewChecker.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MaxBetaGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MaxBeta()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MaxBetaSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MaxBeta(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MaxSkewToDetectGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MaxSkewToDetect()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MaxSkewToDetectSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MaxSkewToDetect(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MinBetaGet">
            <summary>Sets the shim of DocumentSkewChecker.get_MinBeta()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.MinBetaSetDouble">
            <summary>Sets the shim of DocumentSkewChecker.set_MinBeta(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.StepsPerDegreeGet">
            <summary>Sets the shim of DocumentSkewChecker.get_StepsPerDegree()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDocumentSkewChecker.AllInstances.StepsPerDegreeSetInt32">
            <summary>Sets the shim of DocumentSkewChecker.set_StepsPerDegree(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimDrawing">
            <summary>Shim type of AForge.Imaging.Drawing</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDrawing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDrawing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimDrawing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.CheckEndPointInt32Int32IntPointIntPointRef">
            <summary>Sets the shim of Drawing.CheckEndPoint(Int32 width, Int32 height, IntPoint start, IntPoint&amp; end)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.CheckPixelFormatPixelFormat">
            <summary>Sets the shim of Drawing.CheckPixelFormat(PixelFormat format)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.FillRectangleBitmapDataRectangleColor">
            <summary>Sets the shim of Drawing.FillRectangle(BitmapData imageData, Rectangle rectangle, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.FillRectangleUnmanagedImageRectangleColor">
            <summary>Sets the shim of Drawing.FillRectangle(UnmanagedImage image, Rectangle rectangle, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.LineBitmapDataIntPointIntPointColor">
            <summary>Sets the shim of Drawing.Line(BitmapData imageData, IntPoint point1, IntPoint point2, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.LineUnmanagedImageIntPointIntPointColor">
            <summary>Sets the shim of Drawing.Line(UnmanagedImage image, IntPoint point1, IntPoint point2, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.PolygonBitmapDataListOfIntPointColor">
            <summary>Sets the shim of Drawing.Polygon(BitmapData imageData, List`1&lt;IntPoint&gt; points, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.PolygonUnmanagedImageListOfIntPointColor">
            <summary>Sets the shim of Drawing.Polygon(UnmanagedImage image, List`1&lt;IntPoint&gt; points, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.PolylineBitmapDataListOfIntPointColor">
            <summary>Sets the shim of Drawing.Polyline(BitmapData imageData, List`1&lt;IntPoint&gt; points, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.PolylineUnmanagedImageListOfIntPointColor">
            <summary>Sets the shim of Drawing.Polyline(UnmanagedImage image, List`1&lt;IntPoint&gt; points, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.RectangleBitmapDataRectangleColor">
            <summary>Sets the shim of Drawing.Rectangle(BitmapData imageData, Rectangle rectangle, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimDrawing.RectangleUnmanagedImageRectangleColor">
            <summary>Sets the shim of Drawing.Rectangle(UnmanagedImage image, Rectangle rectangle, Color color)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching">
            <summary>Shim type of AForge.Imaging.ExhaustiveBlockMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.#ctor(AForge.Imaging.ExhaustiveBlockMatching)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.Bind(AForge.Imaging.IBlockMatching)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.BlockSizeGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_BlockSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.BlockSizeSetInt32">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_BlockSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.Constructor">
            <summary>Sets the shim of ExhaustiveBlockMatching.ExhaustiveBlockMatching()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.ConstructorInt32Int32">
            <summary>Sets the shim of ExhaustiveBlockMatching.ExhaustiveBlockMatching(Int32 blockSize, Int32 searchRadius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.ProcessImageBitmapDataListOfIntPointBitmapData">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(BitmapData sourceImageData, List`1&lt;IntPoint&gt; coordinates, BitmapData searchImageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.ProcessImageBitmapListOfIntPointBitmap">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(Bitmap sourceImage, List`1&lt;IntPoint&gt; coordinates, Bitmap searchImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.ProcessImageUnmanagedImageListOfIntPointUnmanagedImage">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(UnmanagedImage sourceImage, List`1&lt;IntPoint&gt; coordinates, UnmanagedImage searchImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.SearchRadiusGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_SearchRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.SearchRadiusSetInt32">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_SearchRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.SimilarityThresholdGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_SimilarityThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.SimilarityThresholdSetSingle">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_SimilarityThreshold(Single value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.BlockSizeGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_BlockSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.BlockSizeSetInt32">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_BlockSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.ProcessImageBitmapDataListOfIntPointBitmapData">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(BitmapData sourceImageData, List`1&lt;IntPoint&gt; coordinates, BitmapData searchImageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.ProcessImageBitmapListOfIntPointBitmap">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(Bitmap sourceImage, List`1&lt;IntPoint&gt; coordinates, Bitmap searchImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.ProcessImageUnmanagedImageListOfIntPointUnmanagedImage">
            <summary>Sets the shim of ExhaustiveBlockMatching.ProcessImage(UnmanagedImage sourceImage, List`1&lt;IntPoint&gt; coordinates, UnmanagedImage searchImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.SearchRadiusGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_SearchRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.SearchRadiusSetInt32">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_SearchRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.SimilarityThresholdGet">
            <summary>Sets the shim of ExhaustiveBlockMatching.get_SimilarityThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveBlockMatching.AllInstances.SimilarityThresholdSetSingle">
            <summary>Sets the shim of ExhaustiveBlockMatching.set_SimilarityThreshold(Single value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching">
            <summary>Shim type of AForge.Imaging.ExhaustiveTemplateMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.#ctor(AForge.Imaging.ExhaustiveTemplateMatching)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.Bind(AForge.Imaging.ITemplateMatching)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.Constructor">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ExhaustiveTemplateMatching()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ConstructorSingle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ExhaustiveTemplateMatching(Single similarityThreshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageBitmapBitmap">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(Bitmap image, Bitmap template)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageBitmapBitmapRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(Bitmap image, Bitmap template, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageBitmapDataBitmapData">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageBitmapDataBitmapDataRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.ProcessImageUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.SimilarityThresholdGet">
            <summary>Sets the shim of ExhaustiveTemplateMatching.get_SimilarityThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.SimilarityThresholdSetSingle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.set_SimilarityThreshold(Single value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageBitmapBitmap">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(Bitmap image, Bitmap template)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageBitmapBitmapRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(Bitmap image, Bitmap template, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageBitmapDataBitmapData">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageBitmapDataBitmapDataRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.ProcessImageUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template, Rectangle searchZone)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.SimilarityThresholdGet">
            <summary>Sets the shim of ExhaustiveTemplateMatching.get_SimilarityThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimExhaustiveTemplateMatching.AllInstances.SimilarityThresholdSetSingle">
            <summary>Sets the shim of ExhaustiveTemplateMatching.set_SimilarityThreshold(Single value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHSL">
            <summary>Shim type of AForge.Imaging.HSL</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHSL.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHSL.#ctor(AForge.Imaging.HSL)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHSL.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHSL.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.Constructor">
            <summary>Sets the shim of HSL.HSL()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.ConstructorInt32SingleSingle">
            <summary>Sets the shim of HSL.HSL(Int32 hue, Single saturation, Single luminance)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.FromRGBRGB">
            <summary>Sets the shim of HSL.FromRGB(RGB rgb)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.FromRGBRGBHSL">
            <summary>Sets the shim of HSL.FromRGB(RGB rgb, HSL hsl)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.Hue_2_RGBSingleSingleSingle">
            <summary>Sets the shim of HSL.Hue_2_RGB(Single v1, Single v2, Single vH)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.ToRGB">
            <summary>Sets the shim of HSL.ToRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.ToRGBHSLRGB">
            <summary>Sets the shim of HSL.ToRGB(HSL hsl, RGB rgb)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHSL.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHSL.AllInstances.ToRGB">
            <summary>Sets the shim of HSL.ToRGB()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics">
            <summary>Shim type of AForge.Imaging.HorizontalIntensityStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.#ctor(AForge.Imaging.HorizontalIntensityStatistics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.BlueGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.ConstructorBitmap">
            <summary>Sets the shim of HorizontalIntensityStatistics.HorizontalIntensityStatistics(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.ConstructorBitmapData">
            <summary>Sets the shim of HorizontalIntensityStatistics.HorizontalIntensityStatistics(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.ConstructorUnmanagedImage">
            <summary>Sets the shim of HorizontalIntensityStatistics.HorizontalIntensityStatistics(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.GrayGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.GreenGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.IsGrayscaleGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HorizontalIntensityStatistics.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.RedGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Red()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.BlueGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.GrayGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.GreenGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.IsGrayscaleGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HorizontalIntensityStatistics.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHorizontalIntensityStatistics.AllInstances.RedGet">
            <summary>Sets the shim of HorizontalIntensityStatistics.get_Red()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughCircle">
            <summary>Shim type of AForge.Imaging.HoughCircle</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircle.#ctor(AForge.Imaging.HoughCircle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircle.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircle.CompareToObject">
            <summary>Sets the shim of HoughCircle.CompareTo(Object value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircle.ConstructorInt32Int32Int32Int16Double">
            <summary>Sets the shim of HoughCircle.HoughCircle(Int32 x, Int32 y, Int32 radius, Int16 intensity, Double relativeIntensity)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughCircle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircle.AllInstances.CompareToObject">
            <summary>Sets the shim of HoughCircle.CompareTo(Object value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughCircleTransformation">
            <summary>Shim type of AForge.Imaging.HoughCircleTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircleTransformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircleTransformation.#ctor(AForge.Imaging.HoughCircleTransformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircleTransformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughCircleTransformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.CirclesCountGet">
            <summary>Sets the shim of HoughCircleTransformation.get_CirclesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.CollectCircles">
            <summary>Sets the shim of HoughCircleTransformation.CollectCircles()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.ConstructorInt32">
            <summary>Sets the shim of HoughCircleTransformation.HoughCircleTransformation(Int32 radiusToDetect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.DrawHoughCircleInt32Int32">
            <summary>Sets the shim of HoughCircleTransformation.DrawHoughCircle(Int32 xCenter, Int32 yCenter)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.GetCirclesByRelativeIntensityDouble">
            <summary>Sets the shim of HoughCircleTransformation.GetCirclesByRelativeIntensity(Double minRelativeIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.GetMostIntensiveCirclesInt32">
            <summary>Sets the shim of HoughCircleTransformation.GetMostIntensiveCircles(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.LocalPeakRadiusGet">
            <summary>Sets the shim of HoughCircleTransformation.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of HoughCircleTransformation.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.MaxIntensityGet">
            <summary>Sets the shim of HoughCircleTransformation.get_MaxIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.MinCircleIntensityGet">
            <summary>Sets the shim of HoughCircleTransformation.get_MinCircleIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.MinCircleIntensitySetInt16">
            <summary>Sets the shim of HoughCircleTransformation.set_MinCircleIntensity(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.ProcessImageBitmap">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.ProcessImageBitmapData">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.SetHoughCirclePointsInt32Int32Int32Int32">
            <summary>Sets the shim of HoughCircleTransformation.SetHoughCirclePoints(Int32 cx, Int32 cy, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.SetHoughPointInt32Int32">
            <summary>Sets the shim of HoughCircleTransformation.SetHoughPoint(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.ToBitmap">
            <summary>Sets the shim of HoughCircleTransformation.ToBitmap()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.CirclesCountGet">
            <summary>Sets the shim of HoughCircleTransformation.get_CirclesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.CollectCircles">
            <summary>Sets the shim of HoughCircleTransformation.CollectCircles()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.DrawHoughCircleInt32Int32">
            <summary>Sets the shim of HoughCircleTransformation.DrawHoughCircle(Int32 xCenter, Int32 yCenter)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.GetCirclesByRelativeIntensityDouble">
            <summary>Sets the shim of HoughCircleTransformation.GetCirclesByRelativeIntensity(Double minRelativeIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.GetMostIntensiveCirclesInt32">
            <summary>Sets the shim of HoughCircleTransformation.GetMostIntensiveCircles(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.LocalPeakRadiusGet">
            <summary>Sets the shim of HoughCircleTransformation.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of HoughCircleTransformation.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.MaxIntensityGet">
            <summary>Sets the shim of HoughCircleTransformation.get_MaxIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.MinCircleIntensityGet">
            <summary>Sets the shim of HoughCircleTransformation.get_MinCircleIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.MinCircleIntensitySetInt16">
            <summary>Sets the shim of HoughCircleTransformation.set_MinCircleIntensity(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HoughCircleTransformation.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.SetHoughCirclePointsInt32Int32Int32Int32">
            <summary>Sets the shim of HoughCircleTransformation.SetHoughCirclePoints(Int32 cx, Int32 cy, Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.SetHoughPointInt32Int32">
            <summary>Sets the shim of HoughCircleTransformation.SetHoughPoint(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughCircleTransformation.AllInstances.ToBitmap">
            <summary>Sets the shim of HoughCircleTransformation.ToBitmap()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughLine">
            <summary>Shim type of AForge.Imaging.HoughLine</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLine.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLine.#ctor(AForge.Imaging.HoughLine)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLine.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLine.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLine.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLine.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLine.CompareToObject">
            <summary>Sets the shim of HoughLine.CompareTo(Object value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLine.ConstructorDoubleInt16Int16Double">
            <summary>Sets the shim of HoughLine.HoughLine(Double theta, Int16 radius, Int16 intensity, Double relativeIntensity)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughLine.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLine.AllInstances.CompareToObject">
            <summary>Sets the shim of HoughLine.CompareTo(Object value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughLineTransformation">
            <summary>Shim type of AForge.Imaging.HoughLineTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLineTransformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLineTransformation.#ctor(AForge.Imaging.HoughLineTransformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLineTransformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimHoughLineTransformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.CollectLines">
            <summary>Sets the shim of HoughLineTransformation.CollectLines()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.Constructor">
            <summary>Sets the shim of HoughLineTransformation.HoughLineTransformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.GetLinesByRelativeIntensityDouble">
            <summary>Sets the shim of HoughLineTransformation.GetLinesByRelativeIntensity(Double minRelativeIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.GetMostIntensiveLinesInt32">
            <summary>Sets the shim of HoughLineTransformation.GetMostIntensiveLines(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.LinesCountGet">
            <summary>Sets the shim of HoughLineTransformation.get_LinesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.LocalPeakRadiusGet">
            <summary>Sets the shim of HoughLineTransformation.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of HoughLineTransformation.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.MaxIntensityGet">
            <summary>Sets the shim of HoughLineTransformation.get_MaxIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.MinLineIntensityGet">
            <summary>Sets the shim of HoughLineTransformation.get_MinLineIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.MinLineIntensitySetInt16">
            <summary>Sets the shim of HoughLineTransformation.set_MinLineIntensity(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageBitmap">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageBitmapData">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageBitmapDataRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageBitmapRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ProcessImageUnmanagedImageRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.StepsPerDegreeGet">
            <summary>Sets the shim of HoughLineTransformation.get_StepsPerDegree()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.StepsPerDegreeSetInt32">
            <summary>Sets the shim of HoughLineTransformation.set_StepsPerDegree(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.ToBitmap">
            <summary>Sets the shim of HoughLineTransformation.ToBitmap()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.CollectLines">
            <summary>Sets the shim of HoughLineTransformation.CollectLines()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.GetLinesByRelativeIntensityDouble">
            <summary>Sets the shim of HoughLineTransformation.GetLinesByRelativeIntensity(Double minRelativeIntensity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.GetMostIntensiveLinesInt32">
            <summary>Sets the shim of HoughLineTransformation.GetMostIntensiveLines(Int32 count)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.LinesCountGet">
            <summary>Sets the shim of HoughLineTransformation.get_LinesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.LocalPeakRadiusGet">
            <summary>Sets the shim of HoughLineTransformation.get_LocalPeakRadius()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.LocalPeakRadiusSetInt32">
            <summary>Sets the shim of HoughLineTransformation.set_LocalPeakRadius(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.MaxIntensityGet">
            <summary>Sets the shim of HoughLineTransformation.get_MaxIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.MinLineIntensityGet">
            <summary>Sets the shim of HoughLineTransformation.get_MinLineIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.MinLineIntensitySetInt16">
            <summary>Sets the shim of HoughLineTransformation.set_MinLineIntensity(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageBitmapDataRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageBitmapRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ProcessImageUnmanagedImageRectangle">
            <summary>Sets the shim of HoughLineTransformation.ProcessImage(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.StepsPerDegreeGet">
            <summary>Sets the shim of HoughLineTransformation.get_StepsPerDegree()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.StepsPerDegreeSetInt32">
            <summary>Sets the shim of HoughLineTransformation.set_StepsPerDegree(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimHoughLineTransformation.AllInstances.ToBitmap">
            <summary>Sets the shim of HoughLineTransformation.ToBitmap()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImage">
            <summary>Shim type of AForge.Imaging.Image</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.CloneBitmap">
            <summary>Sets the shim of Image.Clone(Bitmap source)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.CloneBitmapData">
            <summary>Sets the shim of Image.Clone(BitmapData sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.CloneBitmapPixelFormat">
            <summary>Sets the shim of Image.Clone(Bitmap source, PixelFormat format)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.Convert16bppTo8bppBitmap">
            <summary>Sets the shim of Image.Convert16bppTo8bpp(Bitmap bimap)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.Convert8bppTo16bppBitmap">
            <summary>Sets the shim of Image.Convert8bppTo16bpp(Bitmap bimap)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.CreateGrayscaleImageInt32Int32">
            <summary>Sets the shim of Image.CreateGrayscaleImage(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.FormatImageBitmapRef">
            <summary>Sets the shim of Image.FormatImage(Bitmap&amp; image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.FromFileString">
            <summary>Sets the shim of Image.FromFile(String fileName)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.IsGrayscaleBitmap">
            <summary>Sets the shim of Image.IsGrayscale(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImage.SetGrayscalePaletteBitmap">
            <summary>Sets the shim of Image.SetGrayscalePalette(Bitmap image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatistics">
            <summary>Shim type of AForge.Imaging.ImageStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatistics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatistics.#ctor(AForge.Imaging.ImageStatistics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatistics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatistics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.BlueGet">
            <summary>Sets the shim of ImageStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.BlueWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_BlueWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatistics.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatistics.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorBitmap">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorBitmapBitmap">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(Bitmap image, Bitmap mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorBitmapByteMdArray2">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(Bitmap image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorUnmanagedImage">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorUnmanagedImageByteMdArray2">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(UnmanagedImage image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.ConstructorUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ImageStatistics.ImageStatistics(UnmanagedImage image, UnmanagedImage mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.GrayGet">
            <summary>Sets the shim of ImageStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.GrayWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_GrayWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.GreenGet">
            <summary>Sets the shim of ImageStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.GreenWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_GreenWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.IsGrayscaleGet">
            <summary>Sets the shim of ImageStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.PixelsCountGet">
            <summary>Sets the shim of ImageStatistics.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.RedGet">
            <summary>Sets the shim of ImageStatistics.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.RedWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_RedWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.BlueGet">
            <summary>Sets the shim of ImageStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.BlueWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_BlueWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatistics.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatistics.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.GrayGet">
            <summary>Sets the shim of ImageStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.GrayWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_GrayWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.GreenGet">
            <summary>Sets the shim of ImageStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.GreenWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_GreenWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.IsGrayscaleGet">
            <summary>Sets the shim of ImageStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.PixelsCountGet">
            <summary>Sets the shim of ImageStatistics.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.RedGet">
            <summary>Sets the shim of ImageStatistics.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatistics.AllInstances.RedWithoutBlackGet">
            <summary>Sets the shim of ImageStatistics.get_RedWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatisticsHSL">
            <summary>Shim type of AForge.Imaging.ImageStatisticsHSL</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsHSL.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsHSL.#ctor(AForge.Imaging.ImageStatisticsHSL)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsHSL.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsHSL.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatisticsHSL.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatisticsHSL.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorBitmap">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorBitmapBitmap">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(Bitmap image, Bitmap mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorBitmapByteMdArray2">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(Bitmap image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorUnmanagedImage">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorUnmanagedImageByteMdArray2">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(UnmanagedImage image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.ConstructorUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ImageStatisticsHSL.ImageStatisticsHSL(UnmanagedImage image, UnmanagedImage mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.LuminanceGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_Luminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.LuminanceWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_LuminanceWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.PixelsCountGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.SaturationGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_Saturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.SaturationWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_SaturationWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatisticsHSL.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatisticsHSL.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.LuminanceGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_Luminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.LuminanceWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_LuminanceWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.PixelsCountGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.SaturationGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_Saturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsHSL.AllInstances.SaturationWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsHSL.get_SaturationWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr">
            <summary>Shim type of AForge.Imaging.ImageStatisticsYCbCr</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.#ctor(AForge.Imaging.ImageStatisticsYCbCr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CbGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Cb()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CbWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_CbWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatisticsYCbCr.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatisticsYCbCr.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorBitmap">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorBitmapBitmap">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(Bitmap image, Bitmap mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorBitmapByteMdArray2">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(Bitmap image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorUnmanagedImage">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorUnmanagedImageByteMdArray2">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(UnmanagedImage image, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.ConstructorUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ImageStatisticsYCbCr.ImageStatisticsYCbCr(UnmanagedImage image, UnmanagedImage mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CrGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Cr()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.CrWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_CrWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.PixelsCountGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.YGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Y()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.YWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_YWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CbGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Cb()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CbWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_CbWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CheckMaskPropertiesPixelFormatSizeSize">
            <summary>Sets the shim of ImageStatisticsYCbCr.CheckMaskProperties(PixelFormat maskFormat, Size maskSize, Size sourceImageSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of ImageStatisticsYCbCr.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CrGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Cr()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.CrWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_CrWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.PixelsCountGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_PixelsCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.PixelsCountWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_PixelsCountWithoutBlack()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.YGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_Y()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimImageStatisticsYCbCr.AllInstances.YWithoutBlackGet">
            <summary>Sets the shim of ImageStatisticsYCbCr.get_YWithoutBlack()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimIntegralImage">
            <summary>Shim type of AForge.Imaging.IntegralImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimIntegralImage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimIntegralImage.#ctor(AForge.Imaging.IntegralImage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimIntegralImage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimIntegralImage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.ConstructorInt32Int32">
            <summary>Sets the shim of IntegralImage.IntegralImage(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.FromBitmapBitmap">
            <summary>Sets the shim of IntegralImage.FromBitmap(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.FromBitmapBitmapData">
            <summary>Sets the shim of IntegralImage.FromBitmap(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.FromBitmapUnmanagedImage">
            <summary>Sets the shim of IntegralImage.FromBitmap(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetHaarXWaveletInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetHaarXWavelet(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetHaarYWaveletInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetHaarYWavelet(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleMeanInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMean(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleMeanInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMean(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleMeanUnsafeInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMeanUnsafe(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleMeanUnsafeInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMeanUnsafe(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleSumInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSum(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleSumInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSum(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleSumUnsafeInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSumUnsafe(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.GetRectangleSumUnsafeInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSumUnsafe(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.HeightGet">
            <summary>Sets the shim of IntegralImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.InternalDataGet">
            <summary>Sets the shim of IntegralImage.get_InternalData()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.WidthGet">
            <summary>Sets the shim of IntegralImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetHaarXWaveletInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetHaarXWavelet(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetHaarYWaveletInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetHaarYWavelet(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleMeanInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMean(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleMeanInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMean(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleMeanUnsafeInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMeanUnsafe(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleMeanUnsafeInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleMeanUnsafe(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleSumInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSum(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleSumInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSum(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleSumUnsafeInt32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSumUnsafe(Int32 x, Int32 y, Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.GetRectangleSumUnsafeInt32Int32Int32Int32">
            <summary>Sets the shim of IntegralImage.GetRectangleSumUnsafe(Int32 x1, Int32 y1, Int32 x2, Int32 y2)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.HeightGet">
            <summary>Sets the shim of IntegralImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.InternalDataGet">
            <summary>Sets the shim of IntegralImage.get_InternalData()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimIntegralImage.AllInstances.WidthGet">
            <summary>Sets the shim of IntegralImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException">
            <summary>Shim type of AForge.Imaging.InvalidImagePropertiesException</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.#ctor(AForge.Imaging.InvalidImagePropertiesException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.Constructor">
            <summary>Sets the shim of InvalidImagePropertiesException.InvalidImagePropertiesException()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.ConstructorString">
            <summary>Sets the shim of InvalidImagePropertiesException.InvalidImagePropertiesException(String message)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.ConstructorStringString">
            <summary>Sets the shim of InvalidImagePropertiesException.InvalidImagePropertiesException(String message, String paramName)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimInvalidImagePropertiesException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimMemoryManager">
            <summary>Shim type of AForge.Imaging.MemoryManager</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMemoryManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMemoryManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMemoryManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.AllocInt32">
            <summary>Sets the shim of MemoryManager.Alloc(Int32 size)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.BusyMemoryBlocksGet">
            <summary>Sets the shim of MemoryManager.get_BusyMemoryBlocks()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.CachedMemoryGet">
            <summary>Sets the shim of MemoryManager.get_CachedMemory()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.CurrentCacheSizeGet">
            <summary>Sets the shim of MemoryManager.get_CurrentCacheSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.FreeIntPtr">
            <summary>Sets the shim of MemoryManager.Free(IntPtr pointer)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.FreeMemoryBlocksGet">
            <summary>Sets the shim of MemoryManager.get_FreeMemoryBlocks()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.FreeUnusedMemory">
            <summary>Sets the shim of MemoryManager.FreeUnusedMemory()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MaxSizeToCacheGet">
            <summary>Sets the shim of MemoryManager.get_MaxSizeToCache()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MaxSizeToCacheSetInt32">
            <summary>Sets the shim of MemoryManager.set_MaxSizeToCache(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MaximumCacheSizeGet">
            <summary>Sets the shim of MemoryManager.get_MaximumCacheSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MaximumCacheSizeSetInt32">
            <summary>Sets the shim of MemoryManager.set_MaximumCacheSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MinSizeToCacheGet">
            <summary>Sets the shim of MemoryManager.get_MinSizeToCache()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.MinSizeToCacheSetInt32">
            <summary>Sets the shim of MemoryManager.set_MinSizeToCache(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMemoryManager.StaticConstructor">
            <summary>Sets the shim of MemoryManager.MemoryManager()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimMoravecCornersDetector">
            <summary>Shim type of AForge.Imaging.MoravecCornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMoravecCornersDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMoravecCornersDetector.#ctor(AForge.Imaging.MoravecCornersDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMoravecCornersDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMoravecCornersDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimMoravecCornersDetector.Bind(AForge.Imaging.ICornersDetector)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.Constructor">
            <summary>Sets the shim of MoravecCornersDetector.MoravecCornersDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ConstructorInt32">
            <summary>Sets the shim of MoravecCornersDetector.MoravecCornersDetector(Int32 threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ConstructorInt32Int32">
            <summary>Sets the shim of MoravecCornersDetector.MoravecCornersDetector(Int32 threshold, Int32 windowSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ProcessImageBitmap">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ProcessImageBitmapData">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ProcessImageUnmanagedImage">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.StaticConstructor">
            <summary>Sets the shim of MoravecCornersDetector.MoravecCornersDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ThresholdGet">
            <summary>Sets the shim of MoravecCornersDetector.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.ThresholdSetInt32">
            <summary>Sets the shim of MoravecCornersDetector.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.WindowSizeGet">
            <summary>Sets the shim of MoravecCornersDetector.get_WindowSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.WindowSizeSetInt32">
            <summary>Sets the shim of MoravecCornersDetector.set_WindowSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of MoravecCornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.ThresholdGet">
            <summary>Sets the shim of MoravecCornersDetector.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.ThresholdSetInt32">
            <summary>Sets the shim of MoravecCornersDetector.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.WindowSizeGet">
            <summary>Sets the shim of MoravecCornersDetector.get_WindowSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimMoravecCornersDetector.AllInstances.WindowSizeSetInt32">
            <summary>Sets the shim of MoravecCornersDetector.set_WindowSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimQuadrilateralFinder">
            <summary>Shim type of AForge.Imaging.QuadrilateralFinder</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimQuadrilateralFinder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimQuadrilateralFinder.#ctor(AForge.Imaging.QuadrilateralFinder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimQuadrilateralFinder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimQuadrilateralFinder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.CheckPixelFormatPixelFormat">
            <summary>Sets the shim of QuadrilateralFinder.CheckPixelFormat(PixelFormat format)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.Constructor">
            <summary>Sets the shim of QuadrilateralFinder.QuadrilateralFinder()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.ProcessImageBitmap">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.ProcessImageBitmapData">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.ProcessImageUnmanagedImage">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimQuadrilateralFinder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.AllInstances.CheckPixelFormatPixelFormat">
            <summary>Sets the shim of QuadrilateralFinder.CheckPixelFormat(PixelFormat format)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimQuadrilateralFinder.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of QuadrilateralFinder.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimRGB">
            <summary>Shim type of AForge.Imaging.RGB</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRGB.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRGB.#ctor(AForge.Imaging.RGB)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRGB.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRGB.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.ColorGet">
            <summary>Sets the shim of RGB.get_Color()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.ColorSetColor">
            <summary>Sets the shim of RGB.set_Color(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.Constructor">
            <summary>Sets the shim of RGB.RGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.ConstructorByteByteByte">
            <summary>Sets the shim of RGB.RGB(Byte red, Byte green, Byte blue)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.ConstructorByteByteByteByte">
            <summary>Sets the shim of RGB.RGB(Byte red, Byte green, Byte blue, Byte alpha)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.ConstructorColor">
            <summary>Sets the shim of RGB.RGB(Color color)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimRGB.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.AllInstances.ColorGet">
            <summary>Sets the shim of RGB.get_Color()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRGB.AllInstances.ColorSetColor">
            <summary>Sets the shim of RGB.set_Color(Color value)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimRecursiveBlobCounter">
            <summary>Shim type of AForge.Imaging.RecursiveBlobCounter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.#ctor(AForge.Imaging.RecursiveBlobCounter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.BackgroundThresholdGet">
            <summary>Sets the shim of RecursiveBlobCounter.get_BackgroundThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.BackgroundThresholdSetColor">
            <summary>Sets the shim of RecursiveBlobCounter.set_BackgroundThreshold(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.BuildObjectsMapUnmanagedImage">
            <summary>Sets the shim of RecursiveBlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.Constructor">
            <summary>Sets the shim of RecursiveBlobCounter.RecursiveBlobCounter()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.ConstructorBitmap">
            <summary>Sets the shim of RecursiveBlobCounter.RecursiveBlobCounter(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.ConstructorBitmapData">
            <summary>Sets the shim of RecursiveBlobCounter.RecursiveBlobCounter(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.ConstructorUnmanagedImage">
            <summary>Sets the shim of RecursiveBlobCounter.RecursiveBlobCounter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.AllInstances.BackgroundThresholdGet">
            <summary>Sets the shim of RecursiveBlobCounter.get_BackgroundThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.AllInstances.BackgroundThresholdSetColor">
            <summary>Sets the shim of RecursiveBlobCounter.set_BackgroundThreshold(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimRecursiveBlobCounter.AllInstances.BuildObjectsMapUnmanagedImage">
            <summary>Sets the shim of RecursiveBlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimSusanCornersDetector">
            <summary>Shim type of AForge.Imaging.SusanCornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimSusanCornersDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimSusanCornersDetector.#ctor(AForge.Imaging.SusanCornersDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimSusanCornersDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimSusanCornersDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimSusanCornersDetector.Bind(AForge.Imaging.ICornersDetector)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.Constructor">
            <summary>Sets the shim of SusanCornersDetector.SusanCornersDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.ConstructorInt32Int32">
            <summary>Sets the shim of SusanCornersDetector.SusanCornersDetector(Int32 differenceThreshold, Int32 geometricalThreshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.DifferenceThresholdGet">
            <summary>Sets the shim of SusanCornersDetector.get_DifferenceThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.DifferenceThresholdSetInt32">
            <summary>Sets the shim of SusanCornersDetector.set_DifferenceThreshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.GeometricalThresholdGet">
            <summary>Sets the shim of SusanCornersDetector.get_GeometricalThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.GeometricalThresholdSetInt32">
            <summary>Sets the shim of SusanCornersDetector.set_GeometricalThreshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.ProcessImageBitmap">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.ProcessImageBitmapData">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.ProcessImageUnmanagedImage">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.StaticConstructor">
            <summary>Sets the shim of SusanCornersDetector.SusanCornersDetector()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.DifferenceThresholdGet">
            <summary>Sets the shim of SusanCornersDetector.get_DifferenceThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.DifferenceThresholdSetInt32">
            <summary>Sets the shim of SusanCornersDetector.set_DifferenceThreshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.GeometricalThresholdGet">
            <summary>Sets the shim of SusanCornersDetector.get_GeometricalThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.GeometricalThresholdSetInt32">
            <summary>Sets the shim of SusanCornersDetector.set_GeometricalThreshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.ProcessImageBitmap">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.ProcessImageBitmapData">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimSusanCornersDetector.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of SusanCornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimTemplateMatch">
            <summary>Shim type of AForge.Imaging.TemplateMatch</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimTemplateMatch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimTemplateMatch.#ctor(AForge.Imaging.TemplateMatch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimTemplateMatch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimTemplateMatch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.ConstructorRectangleSingle">
            <summary>Sets the shim of TemplateMatch.TemplateMatch(Rectangle rect, Single similarity)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.RectangleGet">
            <summary>Sets the shim of TemplateMatch.get_Rectangle()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.SimilarityGet">
            <summary>Sets the shim of TemplateMatch.get_Similarity()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimTemplateMatch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.AllInstances.RectangleGet">
            <summary>Sets the shim of TemplateMatch.get_Rectangle()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimTemplateMatch.AllInstances.SimilarityGet">
            <summary>Sets the shim of TemplateMatch.get_Similarity()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimUnmanagedImage">
            <summary>Shim type of AForge.Imaging.UnmanagedImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnmanagedImage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnmanagedImage.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnmanagedImage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnmanagedImage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnmanagedImage.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.Clone">
            <summary>Sets the shim of UnmanagedImage.Clone()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.Collect16bppPixelValuesListOfIntPoint">
            <summary>Sets the shim of UnmanagedImage.Collect16bppPixelValues(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.Collect8bppPixelValuesListOfIntPoint">
            <summary>Sets the shim of UnmanagedImage.Collect8bppPixelValues(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.CollectActivePixels">
            <summary>Sets the shim of UnmanagedImage.CollectActivePixels()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.CollectActivePixelsRectangle">
            <summary>Sets the shim of UnmanagedImage.CollectActivePixels(Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.ConstructorBitmapData">
            <summary>Sets the shim of UnmanagedImage.UnmanagedImage(BitmapData bitmapData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.ConstructorIntPtrInt32Int32Int32PixelFormat">
            <summary>Sets the shim of UnmanagedImage.UnmanagedImage(IntPtr imageData, Int32 width, Int32 height, Int32 stride, PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.CopyUnmanagedImage">
            <summary>Sets the shim of UnmanagedImage.Copy(UnmanagedImage destImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.CreateInt32Int32PixelFormat">
            <summary>Sets the shim of UnmanagedImage.Create(Int32 width, Int32 height, PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.Dispose">
            <summary>Sets the shim of UnmanagedImage.Dispose()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.DisposeBoolean">
            <summary>Sets the shim of UnmanagedImage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.FromManagedImageBitmap">
            <summary>Sets the shim of UnmanagedImage.FromManagedImage(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.FromManagedImageBitmapData">
            <summary>Sets the shim of UnmanagedImage.FromManagedImage(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.GetPixelInt32Int32">
            <summary>Sets the shim of UnmanagedImage.GetPixel(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.GetPixelIntPoint">
            <summary>Sets the shim of UnmanagedImage.GetPixel(IntPoint point)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.HeightGet">
            <summary>Sets the shim of UnmanagedImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.ImageDataGet">
            <summary>Sets the shim of UnmanagedImage.get_ImageData()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.PixelFormatGet">
            <summary>Sets the shim of UnmanagedImage.get_PixelFormat()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.SetPixelInt32Int32Byte">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.SetPixelInt32Int32ByteByteByteByte">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Byte r, Byte g, Byte b, Byte a)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.SetPixelInt32Int32Color">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.SetPixelIntPointColor">
            <summary>Sets the shim of UnmanagedImage.SetPixel(IntPoint point, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.SetPixelsListOfIntPointColor">
            <summary>Sets the shim of UnmanagedImage.SetPixels(List`1&lt;IntPoint&gt; coordinates, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.StrideGet">
            <summary>Sets the shim of UnmanagedImage.get_Stride()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.ToManagedImage">
            <summary>Sets the shim of UnmanagedImage.ToManagedImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.ToManagedImageBoolean">
            <summary>Sets the shim of UnmanagedImage.ToManagedImage(Boolean makeCopy)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.WidthGet">
            <summary>Sets the shim of UnmanagedImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.Clone">
            <summary>Sets the shim of UnmanagedImage.Clone()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.Collect16bppPixelValuesListOfIntPoint">
            <summary>Sets the shim of UnmanagedImage.Collect16bppPixelValues(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.Collect8bppPixelValuesListOfIntPoint">
            <summary>Sets the shim of UnmanagedImage.Collect8bppPixelValues(List`1&lt;IntPoint&gt; points)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.CollectActivePixels">
            <summary>Sets the shim of UnmanagedImage.CollectActivePixels()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.CollectActivePixelsRectangle">
            <summary>Sets the shim of UnmanagedImage.CollectActivePixels(Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.CopyUnmanagedImage">
            <summary>Sets the shim of UnmanagedImage.Copy(UnmanagedImage destImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.Dispose">
            <summary>Sets the shim of UnmanagedImage.Dispose()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UnmanagedImage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.GetPixelInt32Int32">
            <summary>Sets the shim of UnmanagedImage.GetPixel(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.GetPixelIntPoint">
            <summary>Sets the shim of UnmanagedImage.GetPixel(IntPoint point)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.HeightGet">
            <summary>Sets the shim of UnmanagedImage.get_Height()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.ImageDataGet">
            <summary>Sets the shim of UnmanagedImage.get_ImageData()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.PixelFormatGet">
            <summary>Sets the shim of UnmanagedImage.get_PixelFormat()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.SetPixelInt32Int32Byte">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.SetPixelInt32Int32ByteByteByteByte">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Byte r, Byte g, Byte b, Byte a)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.SetPixelInt32Int32Color">
            <summary>Sets the shim of UnmanagedImage.SetPixel(Int32 x, Int32 y, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.SetPixelIntPointColor">
            <summary>Sets the shim of UnmanagedImage.SetPixel(IntPoint point, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.SetPixelsListOfIntPointColor">
            <summary>Sets the shim of UnmanagedImage.SetPixels(List`1&lt;IntPoint&gt; coordinates, Color color)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.StrideGet">
            <summary>Sets the shim of UnmanagedImage.get_Stride()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.ToManagedImage">
            <summary>Sets the shim of UnmanagedImage.ToManagedImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.ToManagedImageBoolean">
            <summary>Sets the shim of UnmanagedImage.ToManagedImage(Boolean makeCopy)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnmanagedImage.AllInstances.WidthGet">
            <summary>Sets the shim of UnmanagedImage.get_Width()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException">
            <summary>Shim type of AForge.Imaging.UnsupportedImageFormatException</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.#ctor(AForge.Imaging.UnsupportedImageFormatException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.Constructor">
            <summary>Sets the shim of UnsupportedImageFormatException.UnsupportedImageFormatException()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.ConstructorString">
            <summary>Sets the shim of UnsupportedImageFormatException.UnsupportedImageFormatException(String message)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.ConstructorStringString">
            <summary>Sets the shim of UnsupportedImageFormatException.UnsupportedImageFormatException(String message, String paramName)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimUnsupportedImageFormatException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics">
            <summary>Shim type of AForge.Imaging.VerticalIntensityStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.#ctor(AForge.Imaging.VerticalIntensityStatistics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.BlueGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.ConstructorBitmap">
            <summary>Sets the shim of VerticalIntensityStatistics.VerticalIntensityStatistics(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.ConstructorBitmapData">
            <summary>Sets the shim of VerticalIntensityStatistics.VerticalIntensityStatistics(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.ConstructorUnmanagedImage">
            <summary>Sets the shim of VerticalIntensityStatistics.VerticalIntensityStatistics(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.GrayGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.GreenGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.IsGrayscaleGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.ProcessImageUnmanagedImage">
            <summary>Sets the shim of VerticalIntensityStatistics.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.RedGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Red()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.BlueGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.GrayGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Gray()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.GreenGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.IsGrayscaleGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_IsGrayscale()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.ProcessImageUnmanagedImage">
            <summary>Sets the shim of VerticalIntensityStatistics.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimVerticalIntensityStatistics.AllInstances.RedGet">
            <summary>Sets the shim of VerticalIntensityStatistics.get_Red()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimYCbCr">
            <summary>Shim type of AForge.Imaging.YCbCr</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimYCbCr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimYCbCr.#ctor(AForge.Imaging.YCbCr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimYCbCr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.ShimYCbCr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.Constructor">
            <summary>Sets the shim of YCbCr.YCbCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.ConstructorSingleSingleSingle">
            <summary>Sets the shim of YCbCr.YCbCr(Single y, Single cb, Single cr)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.FromRGBRGB">
            <summary>Sets the shim of YCbCr.FromRGB(RGB rgb)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.FromRGBRGBYCbCr">
            <summary>Sets the shim of YCbCr.FromRGB(RGB rgb, YCbCr ycbcr)</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.ToRGB">
            <summary>Sets the shim of YCbCr.ToRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.ToRGBYCbCrRGB">
            <summary>Sets the shim of YCbCr.ToRGB(YCbCr ycbcr, RGB rgb)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.ShimYCbCr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.ShimYCbCr.AllInstances.ToRGB">
            <summary>Sets the shim of YCbCr.ToRGB()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubBlob">
            <summary>Stub type of AForge.Imaging.Blob</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlob.#ctor(AForge.Imaging.Blob)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlob.#ctor(System.Int32,System.Drawing.Rectangle)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlob.InitializeStub">
            <summary>Initializes a new instance of type StubBlob</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlob.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlob.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlob.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubBlobCounter">
            <summary>Stub type of AForge.Imaging.BlobCounter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.BuildObjectsMap(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubBlobCounter.BuildObjectsMapUnmanagedImage">
            <summary>Sets the stub of BlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounter.InitializeStub">
            <summary>Initializes a new instance of type StubBlobCounter</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubBlobCounterBase">
            <summary>Stub type of AForge.Imaging.BlobCounterBase</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.BuildObjectsMap(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BlobCounterBase.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubBlobCounterBase.BuildObjectsMapUnmanagedImage">
            <summary>Sets the stub of BlobCounterBase.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlobCounterBase.InitializeStub">
            <summary>Initializes a new instance of type StubBlobCounterBase</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounterBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounterBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlobCounterBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubBlockMatch">
            <summary>Stub type of AForge.Imaging.BlockMatch</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlockMatch.#ctor(AForge.IntPoint,AForge.IntPoint,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubBlockMatch.InitializeStub">
            <summary>Initializes a new instance of type StubBlockMatch</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlockMatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlockMatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubBlockMatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubComplexImage">
            <summary>Stub type of AForge.Imaging.ComplexImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubComplexImage.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubComplexImage.InitializeStub">
            <summary>Initializes a new instance of type StubComplexImage</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubComplexImage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubComplexImage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubComplexImage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubDocumentSkewChecker">
            <summary>Stub type of AForge.Imaging.DocumentSkewChecker</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubDocumentSkewChecker.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubDocumentSkewChecker.InitializeStub">
            <summary>Initializes a new instance of type StubDocumentSkewChecker</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubDocumentSkewChecker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubDocumentSkewChecker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubDocumentSkewChecker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubExhaustiveBlockMatching">
            <summary>Stub type of AForge.Imaging.ExhaustiveBlockMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.InitializeStub">
            <summary>Initializes a new instance of type StubExhaustiveBlockMatching</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveBlockMatching.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching">
            <summary>Stub type of AForge.Imaging.ExhaustiveTemplateMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.#ctor(System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.InitializeStub">
            <summary>Initializes a new instance of type StubExhaustiveTemplateMatching</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubExhaustiveTemplateMatching.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHSL">
            <summary>Stub type of AForge.Imaging.HSL</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHSL.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHSL.#ctor(System.Int32,System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHSL.InitializeStub">
            <summary>Initializes a new instance of type StubHSL</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHSL.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHSL.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHSL.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics">
            <summary>Stub type of AForge.Imaging.HorizontalIntensityStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.InitializeStub">
            <summary>Initializes a new instance of type StubHorizontalIntensityStatistics</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHorizontalIntensityStatistics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHoughCircle">
            <summary>Stub type of AForge.Imaging.HoughCircle</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughCircle.#ctor(System.Int32,System.Int32,System.Int32,System.Int16,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughCircle.InitializeStub">
            <summary>Initializes a new instance of type StubHoughCircle</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHoughCircleTransformation">
            <summary>Stub type of AForge.Imaging.HoughCircleTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughCircleTransformation.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughCircleTransformation.InitializeStub">
            <summary>Initializes a new instance of type StubHoughCircleTransformation</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircleTransformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircleTransformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughCircleTransformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHoughLine">
            <summary>Stub type of AForge.Imaging.HoughLine</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughLine.#ctor(System.Double,System.Int16,System.Int16,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughLine.InitializeStub">
            <summary>Initializes a new instance of type StubHoughLine</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLine.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLine.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLine.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubHoughLineTransformation">
            <summary>Stub type of AForge.Imaging.HoughLineTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughLineTransformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubHoughLineTransformation.InitializeStub">
            <summary>Initializes a new instance of type StubHoughLineTransformation</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLineTransformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLineTransformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubHoughLineTransformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubIBlobsFilter">
            <summary>Stub type of AForge.Imaging.IBlobsFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlobsFilter.#ctor">
            <summary>Initializes a new instance of type StubIBlobsFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlobsFilter.afi::AForge#Imaging#IBlobsFilter#Check(AForge.Imaging.Blob)">
            <summary>Sets the stub of IBlobsFilter.Check(Blob blob)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubIBlobsFilter.CheckBlob">
            <summary>Sets the stub of IBlobsFilter.Check(Blob blob)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubIBlockMatching">
            <summary>Stub type of AForge.Imaging.IBlockMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlockMatching.#ctor">
            <summary>Initializes a new instance of type StubIBlockMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlockMatching.afi::AForge#Imaging#IBlockMatching#ProcessImage(AForge.Imaging.UnmanagedImage,System.Collections.Generic.List{AForge.IntPoint},AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of IBlockMatching.ProcessImage(UnmanagedImage sourceImage, List`1&lt;IntPoint&gt; coordinates, UnmanagedImage searchImage)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlockMatching.afi::AForge#Imaging#IBlockMatching#ProcessImage(System.Drawing.Bitmap,System.Collections.Generic.List{AForge.IntPoint},System.Drawing.Bitmap)">
            <summary>Sets the stub of IBlockMatching.ProcessImage(Bitmap sourceImage, List`1&lt;IntPoint&gt; coordinates, Bitmap searchImage)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIBlockMatching.afi::AForge#Imaging#IBlockMatching#ProcessImage(System.Drawing.Imaging.BitmapData,System.Collections.Generic.List{AForge.IntPoint},System.Drawing.Imaging.BitmapData)">
            <summary>Sets the stub of IBlockMatching.ProcessImage(BitmapData sourceImageData, List`1&lt;IntPoint&gt; coordinates, BitmapData searchImageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubIBlockMatching.ProcessImageBitmapDataListOfIntPointBitmapData">
            <summary>Sets the stub of IBlockMatching.ProcessImage(BitmapData sourceImageData, List`1&lt;IntPoint&gt; coordinates, BitmapData searchImageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubIBlockMatching.ProcessImageBitmapListOfIntPointBitmap">
            <summary>Sets the stub of IBlockMatching.ProcessImage(Bitmap sourceImage, List`1&lt;IntPoint&gt; coordinates, Bitmap searchImage)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubIBlockMatching.ProcessImageUnmanagedImageListOfIntPointUnmanagedImage">
            <summary>Sets the stub of IBlockMatching.ProcessImage(UnmanagedImage sourceImage, List`1&lt;IntPoint&gt; coordinates, UnmanagedImage searchImage)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubICornersDetector">
            <summary>Stub type of AForge.Imaging.ICornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubICornersDetector.#ctor">
            <summary>Initializes a new instance of type StubICornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubICornersDetector.afi::AForge#Imaging#ICornersDetector#ProcessImage(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ICornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubICornersDetector.afi::AForge#Imaging#ICornersDetector#ProcessImage(System.Drawing.Bitmap)">
            <summary>Sets the stub of ICornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubICornersDetector.afi::AForge#Imaging#ICornersDetector#ProcessImage(System.Drawing.Imaging.BitmapData)">
            <summary>Sets the stub of ICornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubICornersDetector.ProcessImageBitmap">
            <summary>Sets the stub of ICornersDetector.ProcessImage(Bitmap image)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubICornersDetector.ProcessImageBitmapData">
            <summary>Sets the stub of ICornersDetector.ProcessImage(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubICornersDetector.ProcessImageUnmanagedImage">
            <summary>Sets the stub of ICornersDetector.ProcessImage(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubITemplateMatching">
            <summary>Stub type of AForge.Imaging.ITemplateMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubITemplateMatching.#ctor">
            <summary>Initializes a new instance of type StubITemplateMatching</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubITemplateMatching.afi::AForge#Imaging#ITemplateMatching#ProcessImage(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template, Rectangle searchZone)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubITemplateMatching.afi::AForge#Imaging#ITemplateMatching#ProcessImage(System.Drawing.Bitmap,System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(Bitmap image, Bitmap template, Rectangle searchZone)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubITemplateMatching.afi::AForge#Imaging#ITemplateMatching#ProcessImage(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData, Rectangle searchZone)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubITemplateMatching.ProcessImageBitmapBitmapRectangle">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(Bitmap image, Bitmap template, Rectangle searchZone)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubITemplateMatching.ProcessImageBitmapDataBitmapDataRectangle">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(BitmapData imageData, BitmapData templateData, Rectangle searchZone)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubITemplateMatching.ProcessImageUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of ITemplateMatching.ProcessImage(UnmanagedImage image, UnmanagedImage template, Rectangle searchZone)</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubImageStatistics">
            <summary>Stub type of AForge.Imaging.ImageStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(AForge.Imaging.UnmanagedImage,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.#ctor(System.Drawing.Bitmap,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatistics.InitializeStub">
            <summary>Initializes a new instance of type StubImageStatistics</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatistics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatistics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatistics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubImageStatisticsHSL">
            <summary>Stub type of AForge.Imaging.ImageStatisticsHSL</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(AForge.Imaging.UnmanagedImage,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.#ctor(System.Drawing.Bitmap,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsHSL.InitializeStub">
            <summary>Initializes a new instance of type StubImageStatisticsHSL</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsHSL.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsHSL.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsHSL.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubImageStatisticsYCbCr">
            <summary>Stub type of AForge.Imaging.ImageStatisticsYCbCr</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(AForge.Imaging.UnmanagedImage,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.#ctor(System.Drawing.Bitmap,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.InitializeStub">
            <summary>Initializes a new instance of type StubImageStatisticsYCbCr</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubImageStatisticsYCbCr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubIntegralImage">
            <summary>Stub type of AForge.Imaging.IntegralImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIntegralImage.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubIntegralImage.InitializeStub">
            <summary>Initializes a new instance of type StubIntegralImage</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubIntegralImage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubIntegralImage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubIntegralImage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubInvalidImagePropertiesException">
            <summary>Stub type of AForge.Imaging.InvalidImagePropertiesException</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidImagePropertiesException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidImagePropertiesException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidImagePropertiesException</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.MessageGet">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.ParamNameGet">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.Message">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.ParamName">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubInvalidImagePropertiesException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubMoravecCornersDetector">
            <summary>Stub type of AForge.Imaging.MoravecCornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubMoravecCornersDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubMoravecCornersDetector.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubMoravecCornersDetector.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubMoravecCornersDetector.InitializeStub">
            <summary>Initializes a new instance of type StubMoravecCornersDetector</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubMoravecCornersDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubMoravecCornersDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubMoravecCornersDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubQuadrilateralFinder">
            <summary>Stub type of AForge.Imaging.QuadrilateralFinder</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubQuadrilateralFinder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubQuadrilateralFinder.InitializeStub">
            <summary>Initializes a new instance of type StubQuadrilateralFinder</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubQuadrilateralFinder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubQuadrilateralFinder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubQuadrilateralFinder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubRGB">
            <summary>Stub type of AForge.Imaging.RGB</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRGB.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRGB.#ctor(System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRGB.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRGB.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRGB.InitializeStub">
            <summary>Initializes a new instance of type StubRGB</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRGB.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRGB.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRGB.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubRecursiveBlobCounter">
            <summary>Stub type of AForge.Imaging.RecursiveBlobCounter</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.BuildObjectsMap(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of RecursiveBlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubRecursiveBlobCounter.BuildObjectsMapUnmanagedImage">
            <summary>Sets the stub of RecursiveBlobCounter.BuildObjectsMap(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubRecursiveBlobCounter.InitializeStub">
            <summary>Initializes a new instance of type StubRecursiveBlobCounter</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRecursiveBlobCounter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRecursiveBlobCounter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubRecursiveBlobCounter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubSusanCornersDetector">
            <summary>Stub type of AForge.Imaging.SusanCornersDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubSusanCornersDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubSusanCornersDetector.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubSusanCornersDetector.InitializeStub">
            <summary>Initializes a new instance of type StubSusanCornersDetector</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubSusanCornersDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubSusanCornersDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubSusanCornersDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubTemplateMatch">
            <summary>Stub type of AForge.Imaging.TemplateMatch</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubTemplateMatch.#ctor(System.Drawing.Rectangle,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubTemplateMatch.InitializeStub">
            <summary>Initializes a new instance of type StubTemplateMatch</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubTemplateMatch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubTemplateMatch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubTemplateMatch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubUnmanagedImage">
            <summary>Stub type of AForge.Imaging.UnmanagedImage</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnmanagedImage.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnmanagedImage.#ctor(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnmanagedImage.Dispose(System.Boolean)">
            <summary>Sets the stub of UnmanagedImage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnmanagedImage.DisposeBoolean">
            <summary>Sets the stub of UnmanagedImage.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnmanagedImage.InitializeStub">
            <summary>Initializes a new instance of type StubUnmanagedImage</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnmanagedImage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnmanagedImage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnmanagedImage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubUnsupportedImageFormatException">
            <summary>Stub type of AForge.Imaging.UnsupportedImageFormatException</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubUnsupportedImageFormatException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubUnsupportedImageFormatException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.InitializeStub">
            <summary>Initializes a new instance of type StubUnsupportedImageFormatException</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.MessageGet">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.ParamNameGet">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.Message">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.ParamName">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubUnsupportedImageFormatException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubVerticalIntensityStatistics">
            <summary>Stub type of AForge.Imaging.VerticalIntensityStatistics</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.#ctor(System.Drawing.Imaging.BitmapData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.InitializeStub">
            <summary>Initializes a new instance of type StubVerticalIntensityStatistics</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubVerticalIntensityStatistics.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Fakes.StubYCbCr">
            <summary>Stub type of AForge.Imaging.YCbCr</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubYCbCr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubYCbCr.#ctor(System.Single,System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Fakes.StubYCbCr.InitializeStub">
            <summary>Initializes a new instance of type StubYCbCr</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubYCbCr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubYCbCr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Fakes.StubYCbCr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing">
            <summary>Shim type of AForge.Imaging.Filters.AdaptiveSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.#ctor(AForge.Imaging.Filters.AdaptiveSmoothing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.Constructor">
            <summary>Sets the shim of AdaptiveSmoothing.AdaptiveSmoothing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.ConstructorDouble">
            <summary>Sets the shim of AdaptiveSmoothing.AdaptiveSmoothing(Double factor)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.FactorGet">
            <summary>Sets the shim of AdaptiveSmoothing.get_Factor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.FactorSetDouble">
            <summary>Sets the shim of AdaptiveSmoothing.set_Factor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.FormatTranslationsGet">
            <summary>Sets the shim of AdaptiveSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of AdaptiveSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.AllInstances.FactorGet">
            <summary>Sets the shim of AdaptiveSmoothing.get_Factor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.AllInstances.FactorSetDouble">
            <summary>Sets the shim of AdaptiveSmoothing.set_Factor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of AdaptiveSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdaptiveSmoothing.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of AdaptiveSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdd">
            <summary>Shim type of AForge.Imaging.Filters.Add</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.#ctor(AForge.Imaging.Filters.Add)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdd.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.Constructor">
            <summary>Sets the shim of Add.Add()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.ConstructorBitmap">
            <summary>Sets the shim of Add.Add(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.ConstructorUnmanagedImage">
            <summary>Sets the shim of Add.Add(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.FormatTranslationsGet">
            <summary>Sets the shim of Add.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.InitFormatTranslations">
            <summary>Sets the shim of Add.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Add.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdd.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Add.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Add.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdd.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Add.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise">
            <summary>Shim type of AForge.Imaging.Filters.AdditiveNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.#ctor(AForge.Imaging.Filters.AdditiveNoise)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.Constructor">
            <summary>Sets the shim of AdditiveNoise.AdditiveNoise()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.ConstructorIRandomNumberGenerator">
            <summary>Sets the shim of AdditiveNoise.AdditiveNoise(IRandomNumberGenerator generator)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.FormatTranslationsGet">
            <summary>Sets the shim of AdditiveNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.GeneratorGet">
            <summary>Sets the shim of AdditiveNoise.get_Generator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.GeneratorSetIRandomNumberGenerator">
            <summary>Sets the shim of AdditiveNoise.set_Generator(IRandomNumberGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of AdditiveNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of AdditiveNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.AllInstances.GeneratorGet">
            <summary>Sets the shim of AdditiveNoise.get_Generator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.AllInstances.GeneratorSetIRandomNumberGenerator">
            <summary>Sets the shim of AdditiveNoise.set_Generator(IRandomNumberGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimAdditiveNoise.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of AdditiveNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimApplyMask">
            <summary>Shim type of AForge.Imaging.Filters.ApplyMask</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.#ctor(AForge.Imaging.Filters.ApplyMask)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimApplyMask.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.Constructor">
            <summary>Sets the shim of ApplyMask.ApplyMask()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.ConstructorBitmap">
            <summary>Sets the shim of ApplyMask.ApplyMask(Bitmap maskImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.ConstructorByteMdArray2">
            <summary>Sets the shim of ApplyMask.ApplyMask(Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.ConstructorUnmanagedImage">
            <summary>Sets the shim of ApplyMask.ApplyMask(UnmanagedImage unmanagedMaskImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.FormatTranslationsGet">
            <summary>Sets the shim of ApplyMask.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.MaskGet">
            <summary>Sets the shim of ApplyMask.get_Mask()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.MaskImageGet">
            <summary>Sets the shim of ApplyMask.get_MaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.MaskImageSetBitmap">
            <summary>Sets the shim of ApplyMask.set_MaskImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.MaskSetByteMdArray2">
            <summary>Sets the shim of ApplyMask.set_Mask(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ApplyMask.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.UnmanagedMaskImageGet">
            <summary>Sets the shim of ApplyMask.get_UnmanagedMaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.UnmanagedMaskImageSetUnmanagedImage">
            <summary>Sets the shim of ApplyMask.set_UnmanagedMaskImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ApplyMask.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.MaskGet">
            <summary>Sets the shim of ApplyMask.get_Mask()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.MaskImageGet">
            <summary>Sets the shim of ApplyMask.get_MaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.MaskImageSetBitmap">
            <summary>Sets the shim of ApplyMask.set_MaskImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.MaskSetByteMdArray2">
            <summary>Sets the shim of ApplyMask.set_Mask(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ApplyMask.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.UnmanagedMaskImageGet">
            <summary>Sets the shim of ApplyMask.get_UnmanagedMaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimApplyMask.AllInstances.UnmanagedMaskImageSetUnmanagedImage">
            <summary>Sets the shim of ApplyMask.set_UnmanagedMaskImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation">
            <summary>Shim type of AForge.Imaging.Filters.BackwardQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.#ctor(AForge.Imaging.Filters.BackwardQuadrilateralTransformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.Constructor">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.BackwardQuadrilateralTransformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ConstructorBitmap">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.BackwardQuadrilateralTransformation(Bitmap sourceImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ConstructorBitmapListOfIntPoint">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.BackwardQuadrilateralTransformation(Bitmap sourceImage, List`1&lt;IntPoint&gt; destinationQuadrilateral)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ConstructorUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.BackwardQuadrilateralTransformation(UnmanagedImage sourceUnmanagedImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ConstructorUnmanagedImageListOfIntPoint">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.BackwardQuadrilateralTransformation(UnmanagedImage sourceUnmanagedImage, List`1&lt;IntPoint&gt; destinationQuadrilateral)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.DestinationQuadrilateralGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_DestinationQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.DestinationQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_DestinationQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage dstImage, UnmanagedImage srcImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.SourceImageGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_SourceImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.SourceImageSetBitmap">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_SourceImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.SourceUnmanagedImageGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_SourceUnmanagedImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.SourceUnmanagedImageSetUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_SourceUnmanagedImage(UnmanagedImage value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.UseInterpolationGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.UseInterpolationSetBoolean">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.DestinationQuadrilateralGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_DestinationQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.DestinationQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_DestinationQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage dstImage, UnmanagedImage srcImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.SourceImageGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_SourceImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.SourceImageSetBitmap">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_SourceImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.SourceUnmanagedImageGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_SourceUnmanagedImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.SourceUnmanagedImageSetUnmanagedImage">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_SourceUnmanagedImage(UnmanagedImage value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.UseInterpolationGet">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBackwardQuadrilateralTransformation.AllInstances.UseInterpolationSetBoolean">
            <summary>Sets the shim of BackwardQuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter.#ctor(AForge.Imaging.Filters.BaseFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.ApplyBitmap">
            <summary>Sets the shim of BaseFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.ApplyBitmapData">
            <summary>Sets the shim of BaseFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.Constructor">
            <summary>Sets the shim of BaseFilter.BaseFilter()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances.ApplyBitmap">
            <summary>Sets the shim of BaseFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of BaseFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseFilter2">
            <summary>Shim type of AForge.Imaging.Filters.BaseFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.#ctor(AForge.Imaging.Filters.BaseFilter2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.Constructor">
            <summary>Sets the shim of BaseFilter2.BaseFilter2()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.ConstructorBitmap">
            <summary>Sets the shim of BaseFilter2.BaseFilter2(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.ConstructorUnmanagedImage">
            <summary>Sets the shim of BaseFilter2.BaseFilter2(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.OverlayImageGet">
            <summary>Sets the shim of BaseFilter2.get_OverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.OverlayImageSetBitmap">
            <summary>Sets the shim of BaseFilter2.set_OverlayImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.UnmanagedOverlayImageGet">
            <summary>Sets the shim of BaseFilter2.get_UnmanagedOverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.UnmanagedOverlayImageSetUnmanagedImage">
            <summary>Sets the shim of BaseFilter2.set_UnmanagedOverlayImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances.OverlayImageGet">
            <summary>Sets the shim of BaseFilter2.get_OverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances.OverlayImageSetBitmap">
            <summary>Sets the shim of BaseFilter2.set_OverlayImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances.UnmanagedOverlayImageGet">
            <summary>Sets the shim of BaseFilter2.get_UnmanagedOverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseFilter2.AllInstances.UnmanagedOverlayImageSetUnmanagedImage">
            <summary>Sets the shim of BaseFilter2.set_UnmanagedOverlayImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseInPlaceFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.#ctor(AForge.Imaging.Filters.BaseInPlaceFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyBitmap">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyBitmapData">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseInPlaceFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.Constructor">
            <summary>Sets the shim of BaseInPlaceFilter.BaseInPlaceFilter()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyBitmap">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseInPlaceFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2">
            <summary>Shim type of AForge.Imaging.Filters.BaseInPlaceFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.#ctor(AForge.Imaging.Filters.BaseInPlaceFilter2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.Constructor">
            <summary>Sets the shim of BaseInPlaceFilter2.BaseInPlaceFilter2()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.ConstructorBitmap">
            <summary>Sets the shim of BaseInPlaceFilter2.BaseInPlaceFilter2(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.ConstructorUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter2.BaseInPlaceFilter2(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.OverlayImageGet">
            <summary>Sets the shim of BaseInPlaceFilter2.get_OverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.OverlayImageSetBitmap">
            <summary>Sets the shim of BaseInPlaceFilter2.set_OverlayImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.UnmanagedOverlayImageGet">
            <summary>Sets the shim of BaseInPlaceFilter2.get_UnmanagedOverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.UnmanagedOverlayImageSetUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter2.set_UnmanagedOverlayImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances.OverlayImageGet">
            <summary>Sets the shim of BaseInPlaceFilter2.get_OverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances.OverlayImageSetBitmap">
            <summary>Sets the shim of BaseInPlaceFilter2.set_OverlayImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances.UnmanagedOverlayImageGet">
            <summary>Sets the shim of BaseInPlaceFilter2.get_UnmanagedOverlayImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlaceFilter2.AllInstances.UnmanagedOverlayImageSetUnmanagedImage">
            <summary>Sets the shim of BaseInPlaceFilter2.set_UnmanagedOverlayImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseInPlacePartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.#ctor(AForge.Imaging.Filters.BaseInPlacePartialFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyBitmap">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyBitmapData">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseInPlacePartialFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.Constructor">
            <summary>Sets the shim of BaseInPlacePartialFilter.BaseInPlacePartialFilter()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyBitmap">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of BaseInPlacePartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseInPlacePartialFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseInPlacePartialFilter.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseInPlacePartialFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseResizeFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.#ctor(AForge.Imaging.Filters.BaseResizeFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.ConstructorInt32Int32">
            <summary>Sets the shim of BaseResizeFilter.BaseResizeFilter(Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.NewHeightGet">
            <summary>Sets the shim of BaseResizeFilter.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.NewHeightSetInt32">
            <summary>Sets the shim of BaseResizeFilter.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.NewWidthGet">
            <summary>Sets the shim of BaseResizeFilter.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.NewWidthSetInt32">
            <summary>Sets the shim of BaseResizeFilter.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances.NewHeightGet">
            <summary>Sets the shim of BaseResizeFilter.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances.NewHeightSetInt32">
            <summary>Sets the shim of BaseResizeFilter.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances.NewWidthGet">
            <summary>Sets the shim of BaseResizeFilter.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseResizeFilter.AllInstances.NewWidthSetInt32">
            <summary>Sets the shim of BaseResizeFilter.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseRotateFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.#ctor(AForge.Imaging.Filters.BaseRotateFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AngleGet">
            <summary>Sets the shim of BaseRotateFilter.get_Angle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AngleSetDouble">
            <summary>Sets the shim of BaseRotateFilter.set_Angle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.ConstructorDouble">
            <summary>Sets the shim of BaseRotateFilter.BaseRotateFilter(Double angle)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.ConstructorDoubleBoolean">
            <summary>Sets the shim of BaseRotateFilter.BaseRotateFilter(Double angle, Boolean keepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.FillColorGet">
            <summary>Sets the shim of BaseRotateFilter.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.FillColorSetColor">
            <summary>Sets the shim of BaseRotateFilter.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.KeepSizeGet">
            <summary>Sets the shim of BaseRotateFilter.get_KeepSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.KeepSizeSetBoolean">
            <summary>Sets the shim of BaseRotateFilter.set_KeepSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.AngleGet">
            <summary>Sets the shim of BaseRotateFilter.get_Angle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.AngleSetDouble">
            <summary>Sets the shim of BaseRotateFilter.set_Angle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.FillColorGet">
            <summary>Sets the shim of BaseRotateFilter.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.FillColorSetColor">
            <summary>Sets the shim of BaseRotateFilter.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.KeepSizeGet">
            <summary>Sets the shim of BaseRotateFilter.get_KeepSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseRotateFilter.AllInstances.KeepSizeSetBoolean">
            <summary>Sets the shim of BaseRotateFilter.set_KeepSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseTransformationFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.#ctor(AForge.Imaging.Filters.BaseTransformationFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.ApplyBitmap">
            <summary>Sets the shim of BaseTransformationFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.ApplyBitmapData">
            <summary>Sets the shim of BaseTransformationFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseTransformationFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseTransformationFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseTransformationFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.Constructor">
            <summary>Sets the shim of BaseTransformationFilter.BaseTransformationFilter()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances.ApplyBitmap">
            <summary>Sets the shim of BaseTransformationFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of BaseTransformationFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseTransformationFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseTransformationFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseTransformationFilter.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseTransformationFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter">
            <summary>Shim type of AForge.Imaging.Filters.BaseUsingCopyPartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.#ctor(AForge.Imaging.Filters.BaseUsingCopyPartialFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyBitmap">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyBitmapData">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.Constructor">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.BaseUsingCopyPartialFilter()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyBitmap">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceBitmap">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceBitmapData">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBaseUsingCopyPartialFilter.AllInstances.CheckSourceFormatPixelFormat">
            <summary>Sets the shim of BaseUsingCopyPartialFilter.CheckSourceFormat(PixelFormat pixelFormat)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerDithering">
            <summary>Shim type of AForge.Imaging.Filters.BayerDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.#ctor(AForge.Imaging.Filters.BayerDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerDithering.Constructor">
            <summary>Sets the shim of BayerDithering.BayerDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerFilter">
            <summary>Shim type of AForge.Imaging.Filters.BayerFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.#ctor(AForge.Imaging.Filters.BayerFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.BayerPatternGet">
            <summary>Sets the shim of BayerFilter.get_BayerPattern()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.BayerPatternSetInt32MdArray2">
            <summary>Sets the shim of BayerFilter.set_BayerPattern(Int32[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.Constructor">
            <summary>Sets the shim of BayerFilter.BayerFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.FormatTranslationsGet">
            <summary>Sets the shim of BayerFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.PerformDemosaicingGet">
            <summary>Sets the shim of BayerFilter.get_PerformDemosaicing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.PerformDemosaicingSetBoolean">
            <summary>Sets the shim of BayerFilter.set_PerformDemosaicing(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.BayerPatternGet">
            <summary>Sets the shim of BayerFilter.get_BayerPattern()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.BayerPatternSetInt32MdArray2">
            <summary>Sets the shim of BayerFilter.set_BayerPattern(Int32[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BayerFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.PerformDemosaicingGet">
            <summary>Sets the shim of BayerFilter.get_PerformDemosaicing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.PerformDemosaicingSetBoolean">
            <summary>Sets the shim of BayerFilter.set_PerformDemosaicing(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilter.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized">
            <summary>Shim type of AForge.Imaging.Filters.BayerFilterOptimized</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.#ctor(AForge.Imaging.Filters.BayerFilterOptimized)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.ApplyBGGRUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ApplyBGGR(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.ApplyGRBGUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ApplyGRBG(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.Constructor">
            <summary>Sets the shim of BayerFilterOptimized.BayerFilterOptimized()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.FormatTranslationsGet">
            <summary>Sets the shim of BayerFilterOptimized.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.PatternGet">
            <summary>Sets the shim of BayerFilterOptimized.get_Pattern()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.PatternSetBayerPattern">
            <summary>Sets the shim of BayerFilterOptimized.set_Pattern(BayerPattern value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.ApplyBGGRUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ApplyBGGR(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.ApplyGRBGUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ApplyGRBG(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BayerFilterOptimized.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.PatternGet">
            <summary>Sets the shim of BayerFilterOptimized.get_Pattern()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.PatternSetBayerPattern">
            <summary>Sets the shim of BayerFilterOptimized.set_Pattern(BayerPattern value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBayerFilterOptimized.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of BayerFilterOptimized.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing">
            <summary>Shim type of AForge.Imaging.Filters.BilateralSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.#ctor(AForge.Imaging.Filters.BilateralSmoothing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ColorFactorGet">
            <summary>Sets the shim of BilateralSmoothing.get_ColorFactor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ColorFactorSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_ColorFactor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ColorPowerGet">
            <summary>Sets the shim of BilateralSmoothing.get_ColorPower()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ColorPowerSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_ColorPower(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.Constructor">
            <summary>Sets the shim of BilateralSmoothing.BilateralSmoothing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.EnableParallelProcessingGet">
            <summary>Sets the shim of BilateralSmoothing.get_EnableParallelProcessing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.EnableParallelProcessingSetBoolean">
            <summary>Sets the shim of BilateralSmoothing.set_EnableParallelProcessing(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.FormatTranslationsGet">
            <summary>Sets the shim of BilateralSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.InitColorFunc">
            <summary>Sets the shim of BilateralSmoothing.InitColorFunc()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.InitFilter">
            <summary>Sets the shim of BilateralSmoothing.InitFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.InitSpatialFunc">
            <summary>Sets the shim of BilateralSmoothing.InitSpatialFunc()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.KernelSizeGet">
            <summary>Sets the shim of BilateralSmoothing.get_KernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.KernelSizeSetInt32">
            <summary>Sets the shim of BilateralSmoothing.set_KernelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.LimitKernelSizeGet">
            <summary>Sets the shim of BilateralSmoothing.get_LimitKernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.LimitKernelSizeSetBoolean">
            <summary>Sets the shim of BilateralSmoothing.set_LimitKernelSize(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ProcessWithEdgeChecksUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithEdgeChecks(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ProcessWithoutChecksParallelUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithoutChecksParallel(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.ProcessWithoutChecksUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithoutChecks(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.SpatialFactorGet">
            <summary>Sets the shim of BilateralSmoothing.get_SpatialFactor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.SpatialFactorSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_SpatialFactor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.SpatialPowerGet">
            <summary>Sets the shim of BilateralSmoothing.get_SpatialPower()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.SpatialPowerSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_SpatialPower(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ColorFactorGet">
            <summary>Sets the shim of BilateralSmoothing.get_ColorFactor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ColorFactorSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_ColorFactor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ColorPowerGet">
            <summary>Sets the shim of BilateralSmoothing.get_ColorPower()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ColorPowerSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_ColorPower(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.EnableParallelProcessingGet">
            <summary>Sets the shim of BilateralSmoothing.get_EnableParallelProcessing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.EnableParallelProcessingSetBoolean">
            <summary>Sets the shim of BilateralSmoothing.set_EnableParallelProcessing(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BilateralSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.InitColorFunc">
            <summary>Sets the shim of BilateralSmoothing.InitColorFunc()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.InitFilter">
            <summary>Sets the shim of BilateralSmoothing.InitFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.InitSpatialFunc">
            <summary>Sets the shim of BilateralSmoothing.InitSpatialFunc()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.KernelSizeGet">
            <summary>Sets the shim of BilateralSmoothing.get_KernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.KernelSizeSetInt32">
            <summary>Sets the shim of BilateralSmoothing.set_KernelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.LimitKernelSizeGet">
            <summary>Sets the shim of BilateralSmoothing.get_LimitKernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.LimitKernelSizeSetBoolean">
            <summary>Sets the shim of BilateralSmoothing.set_LimitKernelSize(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ProcessWithEdgeChecksUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithEdgeChecks(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ProcessWithoutChecksParallelUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithoutChecksParallel(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.ProcessWithoutChecksUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BilateralSmoothing.ProcessWithoutChecks(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.SpatialFactorGet">
            <summary>Sets the shim of BilateralSmoothing.get_SpatialFactor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.SpatialFactorSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_SpatialFactor(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.SpatialPowerGet">
            <summary>Sets the shim of BilateralSmoothing.get_SpatialPower()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBilateralSmoothing.AllInstances.SpatialPowerSetDouble">
            <summary>Sets the shim of BilateralSmoothing.set_SpatialPower(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3">
            <summary>Shim type of AForge.Imaging.Filters.BinaryDilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.#ctor(AForge.Imaging.Filters.BinaryDilatation3x3)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.Constructor">
            <summary>Sets the shim of BinaryDilatation3x3.BinaryDilatation3x3()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.FormatTranslationsGet">
            <summary>Sets the shim of BinaryDilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BinaryDilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BinaryDilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryDilatation3x3.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BinaryDilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3">
            <summary>Shim type of AForge.Imaging.Filters.BinaryErosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.#ctor(AForge.Imaging.Filters.BinaryErosion3x3)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.Constructor">
            <summary>Sets the shim of BinaryErosion3x3.BinaryErosion3x3()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.FormatTranslationsGet">
            <summary>Sets the shim of BinaryErosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BinaryErosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BinaryErosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBinaryErosion3x3.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of BinaryErosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering">
            <summary>Shim type of AForge.Imaging.Filters.BlobsFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.#ctor(AForge.Imaging.Filters.BlobsFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.BlobsFilterGet">
            <summary>Sets the shim of BlobsFiltering.get_BlobsFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.BlobsFilterSetIBlobsFilter">
            <summary>Sets the shim of BlobsFiltering.set_BlobsFilter(IBlobsFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.Constructor">
            <summary>Sets the shim of BlobsFiltering.BlobsFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.ConstructorIBlobsFilter">
            <summary>Sets the shim of BlobsFiltering.BlobsFiltering(IBlobsFilter blobsFilter)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.ConstructorInt32Int32Int32Int32">
            <summary>Sets the shim of BlobsFiltering.BlobsFiltering(Int32 minWidth, Int32 minHeight, Int32 maxWidth, Int32 maxHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.ConstructorInt32Int32Int32Int32Boolean">
            <summary>Sets the shim of BlobsFiltering.BlobsFiltering(Int32 minWidth, Int32 minHeight, Int32 maxWidth, Int32 maxHeight, Boolean coupledSizeFiltering)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.CoupledSizeFilteringGet">
            <summary>Sets the shim of BlobsFiltering.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of BlobsFiltering.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.FormatTranslationsGet">
            <summary>Sets the shim of BlobsFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MaxHeightGet">
            <summary>Sets the shim of BlobsFiltering.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MaxHeightSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MaxWidthGet">
            <summary>Sets the shim of BlobsFiltering.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MaxWidthSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MinHeightGet">
            <summary>Sets the shim of BlobsFiltering.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MinHeightSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MinWidthGet">
            <summary>Sets the shim of BlobsFiltering.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.MinWidthSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BlobsFiltering.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.BlobsFilterGet">
            <summary>Sets the shim of BlobsFiltering.get_BlobsFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.BlobsFilterSetIBlobsFilter">
            <summary>Sets the shim of BlobsFiltering.set_BlobsFilter(IBlobsFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.CoupledSizeFilteringGet">
            <summary>Sets the shim of BlobsFiltering.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of BlobsFiltering.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BlobsFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MaxHeightGet">
            <summary>Sets the shim of BlobsFiltering.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MaxHeightSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MaxWidthGet">
            <summary>Sets the shim of BlobsFiltering.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MaxWidthSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MinHeightGet">
            <summary>Sets the shim of BlobsFiltering.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MinHeightSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MinWidthGet">
            <summary>Sets the shim of BlobsFiltering.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.MinWidthSetInt32">
            <summary>Sets the shim of BlobsFiltering.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlobsFiltering.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BlobsFiltering.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBlur">
            <summary>Shim type of AForge.Imaging.Filters.Blur</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.#ctor(AForge.Imaging.Filters.Blur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBlur.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBlur.Constructor">
            <summary>Sets the shim of Blur.Blur()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBlur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBottomHat">
            <summary>Shim type of AForge.Imaging.Filters.BottomHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.#ctor(AForge.Imaging.Filters.BottomHat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBottomHat.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.Constructor">
            <summary>Sets the shim of BottomHat.BottomHat()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.ConstructorInt16MdArray2">
            <summary>Sets the shim of BottomHat.BottomHat(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.FormatTranslationsGet">
            <summary>Sets the shim of BottomHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BottomHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBottomHat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BottomHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBottomHat.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BottomHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding">
            <summary>Shim type of AForge.Imaging.Filters.BradleyLocalThresholding</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.#ctor(AForge.Imaging.Filters.BradleyLocalThresholding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.Constructor">
            <summary>Sets the shim of BradleyLocalThresholding.BradleyLocalThresholding()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.FormatTranslationsGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.PixelBrightnessDifferenceLimitGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_PixelBrightnessDifferenceLimit()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.PixelBrightnessDifferenceLimitSetSingle">
            <summary>Sets the shim of BradleyLocalThresholding.set_PixelBrightnessDifferenceLimit(Single value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BradleyLocalThresholding.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.WindowSizeGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_WindowSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.WindowSizeSetInt32">
            <summary>Sets the shim of BradleyLocalThresholding.set_WindowSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.PixelBrightnessDifferenceLimitGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_PixelBrightnessDifferenceLimit()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.PixelBrightnessDifferenceLimitSetSingle">
            <summary>Sets the shim of BradleyLocalThresholding.set_PixelBrightnessDifferenceLimit(Single value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of BradleyLocalThresholding.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.WindowSizeGet">
            <summary>Sets the shim of BradleyLocalThresholding.get_WindowSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBradleyLocalThresholding.AllInstances.WindowSizeSetInt32">
            <summary>Sets the shim of BradleyLocalThresholding.set_WindowSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection">
            <summary>Shim type of AForge.Imaging.Filters.BrightnessCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.#ctor(AForge.Imaging.Filters.BrightnessCorrection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AdjustValueGet">
            <summary>Sets the shim of BrightnessCorrection.get_AdjustValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AdjustValueSetInt32">
            <summary>Sets the shim of BrightnessCorrection.set_AdjustValue(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.Constructor">
            <summary>Sets the shim of BrightnessCorrection.BrightnessCorrection()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.ConstructorInt32">
            <summary>Sets the shim of BrightnessCorrection.BrightnessCorrection(Int32 adjustValue)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.FormatTranslationsGet">
            <summary>Sets the shim of BrightnessCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of BrightnessCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AllInstances.AdjustValueGet">
            <summary>Sets the shim of BrightnessCorrection.get_AdjustValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AllInstances.AdjustValueSetInt32">
            <summary>Sets the shim of BrightnessCorrection.set_AdjustValue(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of BrightnessCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBrightnessCorrection.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of BrightnessCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBurkesDithering">
            <summary>Shim type of AForge.Imaging.Filters.BurkesDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.#ctor(AForge.Imaging.Filters.BurkesDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.Constructor">
            <summary>Sets the shim of BurkesDithering.BurkesDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimBurkesDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector">
            <summary>Shim type of AForge.Imaging.Filters.CannyEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.#ctor(AForge.Imaging.Filters.CannyEdgeDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.Constructor">
            <summary>Sets the shim of CannyEdgeDetector.CannyEdgeDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.ConstructorByteByte">
            <summary>Sets the shim of CannyEdgeDetector.CannyEdgeDetector(Byte lowThreshold, Byte highThreshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.ConstructorByteByteDouble">
            <summary>Sets the shim of CannyEdgeDetector.CannyEdgeDetector(Byte lowThreshold, Byte highThreshold, Double sigma)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.FormatTranslationsGet">
            <summary>Sets the shim of CannyEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.GaussianSigmaGet">
            <summary>Sets the shim of CannyEdgeDetector.get_GaussianSigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.GaussianSigmaSetDouble">
            <summary>Sets the shim of CannyEdgeDetector.set_GaussianSigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.GaussianSizeGet">
            <summary>Sets the shim of CannyEdgeDetector.get_GaussianSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.GaussianSizeSetInt32">
            <summary>Sets the shim of CannyEdgeDetector.set_GaussianSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.HighThresholdGet">
            <summary>Sets the shim of CannyEdgeDetector.get_HighThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.HighThresholdSetByte">
            <summary>Sets the shim of CannyEdgeDetector.set_HighThreshold(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.LowThresholdGet">
            <summary>Sets the shim of CannyEdgeDetector.get_LowThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.LowThresholdSetByte">
            <summary>Sets the shim of CannyEdgeDetector.set_LowThreshold(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of CannyEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of CannyEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.GaussianSigmaGet">
            <summary>Sets the shim of CannyEdgeDetector.get_GaussianSigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.GaussianSigmaSetDouble">
            <summary>Sets the shim of CannyEdgeDetector.set_GaussianSigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.GaussianSizeGet">
            <summary>Sets the shim of CannyEdgeDetector.get_GaussianSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.GaussianSizeSetInt32">
            <summary>Sets the shim of CannyEdgeDetector.set_GaussianSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.HighThresholdGet">
            <summary>Sets the shim of CannyEdgeDetector.get_HighThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.HighThresholdSetByte">
            <summary>Sets the shim of CannyEdgeDetector.set_HighThreshold(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.LowThresholdGet">
            <summary>Sets the shim of CannyEdgeDetector.get_LowThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.LowThresholdSetByte">
            <summary>Sets the shim of CannyEdgeDetector.set_LowThreshold(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCannyEdgeDetector.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of CannyEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasCrop">
            <summary>Shim type of AForge.Imaging.Filters.CanvasCrop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.#ctor(AForge.Imaging.Filters.CanvasCrop)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.Constructor">
            <summary>Sets the shim of CanvasCrop.CanvasCrop()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.ConstructorRectangle">
            <summary>Sets the shim of CanvasCrop.CanvasCrop(Rectangle region)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.ConstructorRectangleByte">
            <summary>Sets the shim of CanvasCrop.CanvasCrop(Rectangle region, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.ConstructorRectangleColor">
            <summary>Sets the shim of CanvasCrop.CanvasCrop(Rectangle region, Color fillColorRGB)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.ConstructorRectangleColorByte">
            <summary>Sets the shim of CanvasCrop.CanvasCrop(Rectangle region, Color fillColorRGB, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.FillColorGrayGet">
            <summary>Sets the shim of CanvasCrop.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.FillColorGraySetByte">
            <summary>Sets the shim of CanvasCrop.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.FillColorRGBGet">
            <summary>Sets the shim of CanvasCrop.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasCrop.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.FormatTranslationsGet">
            <summary>Sets the shim of CanvasCrop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasCrop.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.RegionGet">
            <summary>Sets the shim of CanvasCrop.get_Region()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.RegionSetRectangle">
            <summary>Sets the shim of CanvasCrop.set_Region(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.FillColorGrayGet">
            <summary>Sets the shim of CanvasCrop.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.FillColorGraySetByte">
            <summary>Sets the shim of CanvasCrop.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.FillColorRGBGet">
            <summary>Sets the shim of CanvasCrop.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasCrop.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of CanvasCrop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasCrop.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.RegionGet">
            <summary>Sets the shim of CanvasCrop.get_Region()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasCrop.AllInstances.RegionSetRectangle">
            <summary>Sets the shim of CanvasCrop.set_Region(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasFill">
            <summary>Shim type of AForge.Imaging.Filters.CanvasFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.#ctor(AForge.Imaging.Filters.CanvasFill)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasFill.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.Constructor">
            <summary>Sets the shim of CanvasFill.CanvasFill()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.ConstructorRectangle">
            <summary>Sets the shim of CanvasFill.CanvasFill(Rectangle region)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.ConstructorRectangleByte">
            <summary>Sets the shim of CanvasFill.CanvasFill(Rectangle region, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.ConstructorRectangleColor">
            <summary>Sets the shim of CanvasFill.CanvasFill(Rectangle region, Color fillColorRGB)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.ConstructorRectangleColorByte">
            <summary>Sets the shim of CanvasFill.CanvasFill(Rectangle region, Color fillColorRGB, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.FillColorGrayGet">
            <summary>Sets the shim of CanvasFill.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.FillColorGraySetByte">
            <summary>Sets the shim of CanvasFill.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.FillColorRGBGet">
            <summary>Sets the shim of CanvasFill.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasFill.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.FormatTranslationsGet">
            <summary>Sets the shim of CanvasFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasFill.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.RegionGet">
            <summary>Sets the shim of CanvasFill.get_Region()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.RegionSetRectangle">
            <summary>Sets the shim of CanvasFill.set_Region(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.FillColorGrayGet">
            <summary>Sets the shim of CanvasFill.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.FillColorGraySetByte">
            <summary>Sets the shim of CanvasFill.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.FillColorRGBGet">
            <summary>Sets the shim of CanvasFill.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasFill.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of CanvasFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasFill.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.RegionGet">
            <summary>Sets the shim of CanvasFill.get_Region()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasFill.AllInstances.RegionSetRectangle">
            <summary>Sets the shim of CanvasFill.set_Region(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasMove">
            <summary>Shim type of AForge.Imaging.Filters.CanvasMove</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.#ctor(AForge.Imaging.Filters.CanvasMove)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCanvasMove.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.Constructor">
            <summary>Sets the shim of CanvasMove.CanvasMove()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ConstructorIntPoint">
            <summary>Sets the shim of CanvasMove.CanvasMove(IntPoint movePoint)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ConstructorIntPointByte">
            <summary>Sets the shim of CanvasMove.CanvasMove(IntPoint movePoint, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ConstructorIntPointColor">
            <summary>Sets the shim of CanvasMove.CanvasMove(IntPoint movePoint, Color fillColorRGB)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ConstructorIntPointColorByte">
            <summary>Sets the shim of CanvasMove.CanvasMove(IntPoint movePoint, Color fillColorRGB, Byte fillColorGray)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.FillColorGrayGet">
            <summary>Sets the shim of CanvasMove.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.FillColorGraySetByte">
            <summary>Sets the shim of CanvasMove.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.FillColorRGBGet">
            <summary>Sets the shim of CanvasMove.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasMove.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.FormatTranslationsGet">
            <summary>Sets the shim of CanvasMove.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.MovePointGet">
            <summary>Sets the shim of CanvasMove.get_MovePoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.MovePointSetIntPoint">
            <summary>Sets the shim of CanvasMove.set_MovePoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ProcessFilter16bpcUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter16bpc(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ProcessFilter8bpcUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter8bpc(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.FillColorGrayGet">
            <summary>Sets the shim of CanvasMove.get_FillColorGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.FillColorGraySetByte">
            <summary>Sets the shim of CanvasMove.set_FillColorGray(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.FillColorRGBGet">
            <summary>Sets the shim of CanvasMove.get_FillColorRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.FillColorRGBSetColor">
            <summary>Sets the shim of CanvasMove.set_FillColorRGB(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of CanvasMove.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.MovePointGet">
            <summary>Sets the shim of CanvasMove.get_MovePoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.MovePointSetIntPoint">
            <summary>Sets the shim of CanvasMove.set_MovePoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.ProcessFilter16bpcUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter16bpc(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.ProcessFilter8bpcUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter8bpc(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCanvasMove.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CanvasMove.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimChannelFiltering">
            <summary>Shim type of AForge.Imaging.Filters.ChannelFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.#ctor(AForge.Imaging.Filters.ChannelFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BlueFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_BlueFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BlueFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_BlueFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BlueGet">
            <summary>Sets the shim of ChannelFiltering.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.BlueSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Blue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.CalculateMapIntRangeByteBooleanByteArray">
            <summary>Sets the shim of ChannelFiltering.CalculateMap(IntRange range, Byte fill, Boolean fillOutsideRange, Byte[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.Constructor">
            <summary>Sets the shim of ChannelFiltering.ChannelFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.ConstructorIntRangeIntRangeIntRange">
            <summary>Sets the shim of ChannelFiltering.ChannelFiltering(IntRange red, IntRange green, IntRange blue)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillBlueGet">
            <summary>Sets the shim of ChannelFiltering.get_FillBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillBlueSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillBlue(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillGreenGet">
            <summary>Sets the shim of ChannelFiltering.get_FillGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillGreenSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillGreen(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillRedGet">
            <summary>Sets the shim of ChannelFiltering.get_FillRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FillRedSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillRed(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.FormatTranslationsGet">
            <summary>Sets the shim of ChannelFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.GreenFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_GreenFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.GreenFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_GreenFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.GreenGet">
            <summary>Sets the shim of ChannelFiltering.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.GreenSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Green(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ChannelFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.RedFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_RedFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.RedFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_RedFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.RedGet">
            <summary>Sets the shim of ChannelFiltering.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.RedSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Red(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.BlueFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_BlueFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.BlueFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_BlueFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.BlueGet">
            <summary>Sets the shim of ChannelFiltering.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.BlueSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Blue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.CalculateMapIntRangeByteBooleanByteArray">
            <summary>Sets the shim of ChannelFiltering.CalculateMap(IntRange range, Byte fill, Boolean fillOutsideRange, Byte[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillBlueGet">
            <summary>Sets the shim of ChannelFiltering.get_FillBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillBlueSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillBlue(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillGreenGet">
            <summary>Sets the shim of ChannelFiltering.get_FillGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillGreenSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillGreen(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillRedGet">
            <summary>Sets the shim of ChannelFiltering.get_FillRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FillRedSetByte">
            <summary>Sets the shim of ChannelFiltering.set_FillRed(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ChannelFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.GreenFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_GreenFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.GreenFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_GreenFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.GreenGet">
            <summary>Sets the shim of ChannelFiltering.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.GreenSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Green(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ChannelFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.RedFillOutsideRangeGet">
            <summary>Sets the shim of ChannelFiltering.get_RedFillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.RedFillOutsideRangeSetBoolean">
            <summary>Sets the shim of ChannelFiltering.set_RedFillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.RedGet">
            <summary>Sets the shim of ChannelFiltering.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimChannelFiltering.AllInstances.RedSetIntRange">
            <summary>Sets the shim of ChannelFiltering.set_Red(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimClosing">
            <summary>Shim type of AForge.Imaging.Filters.Closing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.#ctor(AForge.Imaging.Filters.Closing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimClosing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyBitmap">
            <summary>Sets the shim of Closing.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyBitmapData">
            <summary>Sets the shim of Closing.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceBitmap">
            <summary>Sets the shim of Closing.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceBitmapData">
            <summary>Sets the shim of Closing.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of Closing.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyUnmanagedImage">
            <summary>Sets the shim of Closing.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Closing.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.Constructor">
            <summary>Sets the shim of Closing.Closing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.ConstructorInt16MdArray2">
            <summary>Sets the shim of Closing.Closing(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.FormatTranslationsGet">
            <summary>Sets the shim of Closing.get_FormatTranslations()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyBitmap">
            <summary>Sets the shim of Closing.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of Closing.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceBitmap">
            <summary>Sets the shim of Closing.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceBitmapData">
            <summary>Sets the shim of Closing.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of Closing.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of Closing.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of Closing.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Closing.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimClosing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Closing.get_FormatTranslations()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimColorFiltering">
            <summary>Shim type of AForge.Imaging.Filters.ColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.#ctor(AForge.Imaging.Filters.ColorFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.BlueGet">
            <summary>Sets the shim of ColorFiltering.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.BlueSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Blue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.Constructor">
            <summary>Sets the shim of ColorFiltering.ColorFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.ConstructorIntRangeIntRangeIntRange">
            <summary>Sets the shim of ColorFiltering.ColorFiltering(IntRange red, IntRange green, IntRange blue)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.FillColorGet">
            <summary>Sets the shim of ColorFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.FillColorSetRGB">
            <summary>Sets the shim of ColorFiltering.set_FillColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.FillOutsideRangeGet">
            <summary>Sets the shim of ColorFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of ColorFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.FormatTranslationsGet">
            <summary>Sets the shim of ColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.GreenGet">
            <summary>Sets the shim of ColorFiltering.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.GreenSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Green(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.RedGet">
            <summary>Sets the shim of ColorFiltering.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.RedSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Red(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.BlueGet">
            <summary>Sets the shim of ColorFiltering.get_Blue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.BlueSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Blue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.FillColorGet">
            <summary>Sets the shim of ColorFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.FillColorSetRGB">
            <summary>Sets the shim of ColorFiltering.set_FillColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.FillOutsideRangeGet">
            <summary>Sets the shim of ColorFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of ColorFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.GreenGet">
            <summary>Sets the shim of ColorFiltering.get_Green()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.GreenSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Green(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.RedGet">
            <summary>Sets the shim of ColorFiltering.get_Red()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorFiltering.AllInstances.RedSetIntRange">
            <summary>Sets the shim of ColorFiltering.set_Red(IntRange value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimColorRemapping">
            <summary>Shim type of AForge.Imaging.Filters.ColorRemapping</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.#ctor(AForge.Imaging.Filters.ColorRemapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.BlueMapGet">
            <summary>Sets the shim of ColorRemapping.get_BlueMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.BlueMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_BlueMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.Constructor">
            <summary>Sets the shim of ColorRemapping.ColorRemapping()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.ConstructorByteArray">
            <summary>Sets the shim of ColorRemapping.ColorRemapping(Byte[] grayMap)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.ConstructorByteArrayByteArrayByteArray">
            <summary>Sets the shim of ColorRemapping.ColorRemapping(Byte[] redMap, Byte[] greenMap, Byte[] blueMap)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.FormatTranslationsGet">
            <summary>Sets the shim of ColorRemapping.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.GrayMapGet">
            <summary>Sets the shim of ColorRemapping.get_GrayMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.GrayMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_GrayMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.GreenMapGet">
            <summary>Sets the shim of ColorRemapping.get_GreenMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.GreenMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_GreenMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ColorRemapping.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.RedMapGet">
            <summary>Sets the shim of ColorRemapping.get_RedMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.RedMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_RedMap(Byte[] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.BlueMapGet">
            <summary>Sets the shim of ColorRemapping.get_BlueMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.BlueMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_BlueMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ColorRemapping.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.GrayMapGet">
            <summary>Sets the shim of ColorRemapping.get_GrayMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.GrayMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_GrayMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.GreenMapGet">
            <summary>Sets the shim of ColorRemapping.get_GreenMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.GreenMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_GreenMap(Byte[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ColorRemapping.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.RedMapGet">
            <summary>Sets the shim of ColorRemapping.get_RedMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimColorRemapping.AllInstances.RedMapSetByteArray">
            <summary>Sets the shim of ColorRemapping.set_RedMap(Byte[] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling">
            <summary>Shim type of AForge.Imaging.Filters.ConnectedComponentsLabeling</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.#ctor(AForge.Imaging.Filters.ConnectedComponentsLabeling)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.BlobCounterGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_BlobCounter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.BlobCounterSetBlobCounterBase">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_BlobCounter(BlobCounterBase value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.ColorTableGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_ColorTable()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.ColorTableSetColorArray">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_ColorTable(Color[] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.Constructor">
            <summary>Sets the shim of ConnectedComponentsLabeling.ConnectedComponentsLabeling()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.CoupledSizeFilteringGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.FilterBlobsGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_FilterBlobs()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.FilterBlobsSetBoolean">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_FilterBlobs(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.FormatTranslationsGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MaxHeightGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MaxHeightSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MaxWidthGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MaxWidthSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MinHeightGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MinHeightSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MinWidthGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.MinWidthSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.ObjectCountGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_ObjectCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ConnectedComponentsLabeling.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.StaticConstructor">
            <summary>Sets the shim of ConnectedComponentsLabeling.ConnectedComponentsLabeling()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.BlobCounterGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_BlobCounter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.BlobCounterSetBlobCounterBase">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_BlobCounter(BlobCounterBase value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.CoupledSizeFilteringGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.FilterBlobsGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_FilterBlobs()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.FilterBlobsSetBoolean">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_FilterBlobs(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MaxHeightGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MaxHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MaxHeightSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MaxHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MaxWidthGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MaxWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MaxWidthSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MaxWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MinHeightGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MinHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MinHeightSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MinHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MinWidthGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_MinWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.MinWidthSetInt32">
            <summary>Sets the shim of ConnectedComponentsLabeling.set_MinWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.ObjectCountGet">
            <summary>Sets the shim of ConnectedComponentsLabeling.get_ObjectCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConnectedComponentsLabeling.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ConnectedComponentsLabeling.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing">
            <summary>Shim type of AForge.Imaging.Filters.ConservativeSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.#ctor(AForge.Imaging.Filters.ConservativeSmoothing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.Constructor">
            <summary>Sets the shim of ConservativeSmoothing.ConservativeSmoothing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.ConstructorInt32">
            <summary>Sets the shim of ConservativeSmoothing.ConservativeSmoothing(Int32 size)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.FormatTranslationsGet">
            <summary>Sets the shim of ConservativeSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.KernelSizeGet">
            <summary>Sets the shim of ConservativeSmoothing.get_KernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.KernelSizeSetInt32">
            <summary>Sets the shim of ConservativeSmoothing.set_KernelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of ConservativeSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ConservativeSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.AllInstances.KernelSizeGet">
            <summary>Sets the shim of ConservativeSmoothing.get_KernelSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.AllInstances.KernelSizeSetInt32">
            <summary>Sets the shim of ConservativeSmoothing.set_KernelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConservativeSmoothing.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of ConservativeSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimContrastCorrection">
            <summary>Shim type of AForge.Imaging.Filters.ContrastCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.#ctor(AForge.Imaging.Filters.ContrastCorrection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.Constructor">
            <summary>Sets the shim of ContrastCorrection.ContrastCorrection()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.ConstructorInt32">
            <summary>Sets the shim of ContrastCorrection.ContrastCorrection(Int32 factor)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.FactorGet">
            <summary>Sets the shim of ContrastCorrection.get_Factor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.FactorSetInt32">
            <summary>Sets the shim of ContrastCorrection.set_Factor(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.FormatTranslationsGet">
            <summary>Sets the shim of ContrastCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ContrastCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.AllInstances.FactorGet">
            <summary>Sets the shim of ContrastCorrection.get_Factor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.AllInstances.FactorSetInt32">
            <summary>Sets the shim of ContrastCorrection.set_Factor(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ContrastCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastCorrection.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ContrastCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimContrastStretch">
            <summary>Shim type of AForge.Imaging.Filters.ContrastStretch</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.#ctor(AForge.Imaging.Filters.ContrastStretch)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.Constructor">
            <summary>Sets the shim of ContrastStretch.ContrastStretch()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.FormatTranslationsGet">
            <summary>Sets the shim of ContrastStretch.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ContrastStretch.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimContrastStretch.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ContrastStretch.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimContrastStretch.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ContrastStretch.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConvolution">
            <summary>Shim type of AForge.Imaging.Filters.Convolution</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.#ctor(AForge.Imaging.Filters.Convolution)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimConvolution.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.Constructor">
            <summary>Sets the shim of Convolution.Convolution()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ConstructorInt32MdArray2">
            <summary>Sets the shim of Convolution.Convolution(Int32[,] kernel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ConstructorInt32MdArray2Int32">
            <summary>Sets the shim of Convolution.Convolution(Int32[,] kernel, Int32 divisor)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.DivisorGet">
            <summary>Sets the shim of Convolution.get_Divisor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.DivisorSetInt32">
            <summary>Sets the shim of Convolution.set_Divisor(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.DynamicDivisorForEdgesGet">
            <summary>Sets the shim of Convolution.get_DynamicDivisorForEdges()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.DynamicDivisorForEdgesSetBoolean">
            <summary>Sets the shim of Convolution.set_DynamicDivisorForEdges(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.FormatTranslationsGet">
            <summary>Sets the shim of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.KernelGet">
            <summary>Sets the shim of Convolution.get_Kernel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.KernelSetInt32MdArray2">
            <summary>Sets the shim of Convolution.set_Kernel(Int32[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ProcessAlphaGet">
            <summary>Sets the shim of Convolution.get_ProcessAlpha()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ProcessAlphaSetBoolean">
            <summary>Sets the shim of Convolution.set_ProcessAlpha(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ThresholdGet">
            <summary>Sets the shim of Convolution.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.ThresholdSetInt32">
            <summary>Sets the shim of Convolution.set_Threshold(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.DivisorGet">
            <summary>Sets the shim of Convolution.get_Divisor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.DivisorSetInt32">
            <summary>Sets the shim of Convolution.set_Divisor(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.DynamicDivisorForEdgesGet">
            <summary>Sets the shim of Convolution.get_DynamicDivisorForEdges()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.DynamicDivisorForEdgesSetBoolean">
            <summary>Sets the shim of Convolution.set_DynamicDivisorForEdges(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.KernelGet">
            <summary>Sets the shim of Convolution.get_Kernel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.KernelSetInt32MdArray2">
            <summary>Sets the shim of Convolution.set_Kernel(Int32[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.ProcessAlphaGet">
            <summary>Sets the shim of Convolution.get_ProcessAlpha()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.ProcessAlphaSetBoolean">
            <summary>Sets the shim of Convolution.set_ProcessAlpha(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.ThresholdGet">
            <summary>Sets the shim of Convolution.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimConvolution.AllInstances.ThresholdSetInt32">
            <summary>Sets the shim of Convolution.set_Threshold(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCornersMarker">
            <summary>Shim type of AForge.Imaging.Filters.CornersMarker</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.#ctor(AForge.Imaging.Filters.CornersMarker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCornersMarker.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.ConstructorICornersDetector">
            <summary>Sets the shim of CornersMarker.CornersMarker(ICornersDetector detector)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.ConstructorICornersDetectorColor">
            <summary>Sets the shim of CornersMarker.CornersMarker(ICornersDetector detector, Color markerColor)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.DetectorGet">
            <summary>Sets the shim of CornersMarker.get_Detector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.DetectorSetICornersDetector">
            <summary>Sets the shim of CornersMarker.set_Detector(ICornersDetector value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.FormatTranslationsGet">
            <summary>Sets the shim of CornersMarker.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.MarkerColorGet">
            <summary>Sets the shim of CornersMarker.get_MarkerColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.MarkerColorSetColor">
            <summary>Sets the shim of CornersMarker.set_MarkerColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CornersMarker.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.DetectorGet">
            <summary>Sets the shim of CornersMarker.get_Detector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.DetectorSetICornersDetector">
            <summary>Sets the shim of CornersMarker.set_Detector(ICornersDetector value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of CornersMarker.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.MarkerColorGet">
            <summary>Sets the shim of CornersMarker.get_MarkerColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.MarkerColorSetColor">
            <summary>Sets the shim of CornersMarker.set_MarkerColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCornersMarker.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of CornersMarker.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCrop">
            <summary>Shim type of AForge.Imaging.Filters.Crop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.#ctor(AForge.Imaging.Filters.Crop)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimCrop.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of Crop.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.ConstructorRectangle">
            <summary>Sets the shim of Crop.Crop(Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.FormatTranslationsGet">
            <summary>Sets the shim of Crop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Crop.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.RectangleGet">
            <summary>Sets the shim of Crop.get_Rectangle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.RectangleSetRectangle">
            <summary>Sets the shim of Crop.set_Rectangle(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of Crop.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Crop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Crop.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances.RectangleGet">
            <summary>Sets the shim of Crop.get_Rectangle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimCrop.AllInstances.RectangleSetRectangle">
            <summary>Sets the shim of Crop.set_Rectangle(Rectangle value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDifference">
            <summary>Shim type of AForge.Imaging.Filters.Difference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.#ctor(AForge.Imaging.Filters.Difference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifference.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.Constructor">
            <summary>Sets the shim of Difference.Difference()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.ConstructorBitmap">
            <summary>Sets the shim of Difference.Difference(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.ConstructorUnmanagedImage">
            <summary>Sets the shim of Difference.Difference(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.FormatTranslationsGet">
            <summary>Sets the shim of Difference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.InitFormatTranslations">
            <summary>Sets the shim of Difference.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Difference.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDifference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Difference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Difference.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifference.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Difference.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector">
            <summary>Shim type of AForge.Imaging.Filters.DifferenceEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.#ctor(AForge.Imaging.Filters.DifferenceEdgeDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.Constructor">
            <summary>Sets the shim of DifferenceEdgeDetector.DifferenceEdgeDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.FormatTranslationsGet">
            <summary>Sets the shim of DifferenceEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of DifferenceEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of DifferenceEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDifferenceEdgeDetector.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of DifferenceEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDilatation">
            <summary>Shim type of AForge.Imaging.Filters.Dilatation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.#ctor(AForge.Imaging.Filters.Dilatation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.Constructor">
            <summary>Sets the shim of Dilatation.Dilatation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.ConstructorInt16MdArray2">
            <summary>Sets the shim of Dilatation.Dilatation(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.FormatTranslationsGet">
            <summary>Sets the shim of Dilatation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Dilatation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDilatation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Dilatation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Dilatation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDilatation3x3">
            <summary>Shim type of AForge.Imaging.Filters.Dilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.#ctor(AForge.Imaging.Filters.Dilatation3x3)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.Constructor">
            <summary>Sets the shim of Dilatation3x3.Dilatation3x3()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.FormatTranslationsGet">
            <summary>Sets the shim of Dilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Dilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Dilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimDilatation3x3.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Dilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimEdges">
            <summary>Shim type of AForge.Imaging.Filters.Edges</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.#ctor(AForge.Imaging.Filters.Edges)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEdges.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEdges.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEdges.Constructor">
            <summary>Sets the shim of Edges.Edges()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimEdges.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErosion">
            <summary>Shim type of AForge.Imaging.Filters.Erosion</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.#ctor(AForge.Imaging.Filters.Erosion)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.Constructor">
            <summary>Sets the shim of Erosion.Erosion()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.ConstructorInt16MdArray2">
            <summary>Sets the shim of Erosion.Erosion(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.FormatTranslationsGet">
            <summary>Sets the shim of Erosion.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Erosion.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErosion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Erosion.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Erosion.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErosion3x3">
            <summary>Shim type of AForge.Imaging.Filters.Erosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.#ctor(AForge.Imaging.Filters.Erosion3x3)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.Constructor">
            <summary>Sets the shim of Erosion3x3.Erosion3x3()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.FormatTranslationsGet">
            <summary>Sets the shim of Erosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Erosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErosion3x3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Erosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErosion3x3.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Erosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering">
            <summary>Shim type of AForge.Imaging.Filters.ErrorDiffusionDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.#ctor(AForge.Imaging.Filters.ErrorDiffusionDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.Constructor">
            <summary>Sets the shim of ErrorDiffusionDithering.ErrorDiffusionDithering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.FormatTranslationsGet">
            <summary>Sets the shim of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.ThresholdValueGet">
            <summary>Sets the shim of ErrorDiffusionDithering.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.ThresholdValueSetByte">
            <summary>Sets the shim of ErrorDiffusionDithering.set_ThresholdValue(Byte value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.AllInstances.ThresholdValueGet">
            <summary>Sets the shim of ErrorDiffusionDithering.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionDithering.AllInstances.ThresholdValueSetByte">
            <summary>Sets the shim of ErrorDiffusionDithering.set_ThresholdValue(Byte value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors">
            <summary>Shim type of AForge.Imaging.Filters.ErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.#ctor(AForge.Imaging.Filters.ErrorDiffusionToAdjacentNeighbors)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.CoefficientsGet">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.get_Coefficients()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.CoefficientsSetInt32ArrayArray">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.set_Coefficients(Int32[][] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.ConstructorInt32ArrayArray">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.ErrorDiffusionToAdjacentNeighbors(Int32[][] coefficients)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.AllInstances.CalculateCoefficientsSum">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.CalculateCoefficientsSum()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.AllInstances.CoefficientsGet">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.get_Coefficients()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimErrorDiffusionToAdjacentNeighbors.AllInstances.CoefficientsSetInt32ArrayArray">
            <summary>Sets the shim of ErrorDiffusionToAdjacentNeighbors.set_Coefficients(Int32[][] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering">
            <summary>Shim type of AForge.Imaging.Filters.EuclideanColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.#ctor(AForge.Imaging.Filters.EuclideanColorFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.CenterColorGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_CenterColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.CenterColorSetRGB">
            <summary>Sets the shim of EuclideanColorFiltering.set_CenterColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.Constructor">
            <summary>Sets the shim of EuclideanColorFiltering.EuclideanColorFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.ConstructorRGBInt16">
            <summary>Sets the shim of EuclideanColorFiltering.EuclideanColorFiltering(RGB center, Int16 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.FillColorGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.FillColorSetRGB">
            <summary>Sets the shim of EuclideanColorFiltering.set_FillColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.FillOutsideGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FillOutside()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.FillOutsideSetBoolean">
            <summary>Sets the shim of EuclideanColorFiltering.set_FillOutside(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.FormatTranslationsGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of EuclideanColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.RadiusGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_Radius()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.RadiusSetInt16">
            <summary>Sets the shim of EuclideanColorFiltering.set_Radius(Int16 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.CenterColorGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_CenterColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.CenterColorSetRGB">
            <summary>Sets the shim of EuclideanColorFiltering.set_CenterColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.FillColorGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.FillColorSetRGB">
            <summary>Sets the shim of EuclideanColorFiltering.set_FillColor(RGB value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.FillOutsideGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FillOutside()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.FillOutsideSetBoolean">
            <summary>Sets the shim of EuclideanColorFiltering.set_FillOutside(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of EuclideanColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.RadiusGet">
            <summary>Sets the shim of EuclideanColorFiltering.get_Radius()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimEuclideanColorFiltering.AllInstances.RadiusSetInt16">
            <summary>Sets the shim of EuclideanColorFiltering.set_Radius(Int16 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob">
            <summary>Shim type of AForge.Imaging.Filters.ExtractBiggestBlob</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.#ctor(AForge.Imaging.Filters.ExtractBiggestBlob)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.ApplyBitmap">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.ApplyBitmapData">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.ApplyUnmanagedImage">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.BlobPositionGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_BlobPosition()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.Constructor">
            <summary>Sets the shim of ExtractBiggestBlob.ExtractBiggestBlob()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.FormatTranslationsGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.OriginalImageGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_OriginalImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.OriginalImageSetBitmap">
            <summary>Sets the shim of ExtractBiggestBlob.set_OriginalImage(Bitmap value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.ApplyBitmap">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractBiggestBlob.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.BlobPositionGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_BlobPosition()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.OriginalImageGet">
            <summary>Sets the shim of ExtractBiggestBlob.get_OriginalImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractBiggestBlob.AllInstances.OriginalImageSetBitmap">
            <summary>Sets the shim of ExtractBiggestBlob.set_OriginalImage(Bitmap value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractChannel">
            <summary>Shim type of AForge.Imaging.Filters.ExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.#ctor(AForge.Imaging.Filters.ExtractChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractChannel.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.ChannelGet">
            <summary>Sets the shim of ExtractChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.ChannelSetInt16">
            <summary>Sets the shim of ExtractChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.Constructor">
            <summary>Sets the shim of ExtractChannel.ExtractChannel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.ConstructorInt16">
            <summary>Sets the shim of ExtractChannel.ExtractChannel(Int16 channel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.FormatTranslationsGet">
            <summary>Sets the shim of ExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.AllInstances.ChannelGet">
            <summary>Sets the shim of ExtractChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.AllInstances.ChannelSetInt16">
            <summary>Sets the shim of ExtractChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractChannel.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel">
            <summary>Shim type of AForge.Imaging.Filters.ExtractNormalizedRGBChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.#ctor(AForge.Imaging.Filters.ExtractNormalizedRGBChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.ChannelGet">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.ChannelSetInt16">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.Constructor">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.ExtractNormalizedRGBChannel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.ConstructorInt16">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.ExtractNormalizedRGBChannel(Int16 channel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.FormatTranslationsGet">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.AllInstances.ChannelGet">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.AllInstances.ChannelSetInt16">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimExtractNormalizedRGBChannel.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ExtractNormalizedRGBChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFillHoles">
            <summary>Shim type of AForge.Imaging.Filters.FillHoles</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.#ctor(AForge.Imaging.Filters.FillHoles)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFillHoles.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.Constructor">
            <summary>Sets the shim of FillHoles.FillHoles()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.CoupledSizeFilteringGet">
            <summary>Sets the shim of FillHoles.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of FillHoles.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.FormatTranslationsGet">
            <summary>Sets the shim of FillHoles.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.MaxHoleHeightGet">
            <summary>Sets the shim of FillHoles.get_MaxHoleHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.MaxHoleHeightSetInt32">
            <summary>Sets the shim of FillHoles.set_MaxHoleHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.MaxHoleWidthGet">
            <summary>Sets the shim of FillHoles.get_MaxHoleWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.MaxHoleWidthSetInt32">
            <summary>Sets the shim of FillHoles.set_MaxHoleWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of FillHoles.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.CoupledSizeFilteringGet">
            <summary>Sets the shim of FillHoles.get_CoupledSizeFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.CoupledSizeFilteringSetBoolean">
            <summary>Sets the shim of FillHoles.set_CoupledSizeFiltering(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of FillHoles.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.MaxHoleHeightGet">
            <summary>Sets the shim of FillHoles.get_MaxHoleHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.MaxHoleHeightSetInt32">
            <summary>Sets the shim of FillHoles.set_MaxHoleHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.MaxHoleWidthGet">
            <summary>Sets the shim of FillHoles.get_MaxHoleWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.MaxHoleWidthSetInt32">
            <summary>Sets the shim of FillHoles.set_MaxHoleWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFillHoles.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of FillHoles.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFilterIterator">
            <summary>Shim type of AForge.Imaging.Filters.FilterIterator</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.#ctor(AForge.Imaging.Filters.FilterIterator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFilterIterator.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ApplyBitmap">
            <summary>Sets the shim of FilterIterator.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ApplyBitmapData">
            <summary>Sets the shim of FilterIterator.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ApplyUnmanagedImage">
            <summary>Sets the shim of FilterIterator.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of FilterIterator.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.BaseFilterGet">
            <summary>Sets the shim of FilterIterator.get_BaseFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.BaseFilterSetIFilter">
            <summary>Sets the shim of FilterIterator.set_BaseFilter(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ConstructorIFilter">
            <summary>Sets the shim of FilterIterator.FilterIterator(IFilter baseFilter)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.ConstructorIFilterInt32">
            <summary>Sets the shim of FilterIterator.FilterIterator(IFilter baseFilter, Int32 iterations)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.FormatTranslationsGet">
            <summary>Sets the shim of FilterIterator.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.IterationsGet">
            <summary>Sets the shim of FilterIterator.get_Iterations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.IterationsSetInt32">
            <summary>Sets the shim of FilterIterator.set_Iterations(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.ApplyBitmap">
            <summary>Sets the shim of FilterIterator.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of FilterIterator.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of FilterIterator.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of FilterIterator.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.BaseFilterGet">
            <summary>Sets the shim of FilterIterator.get_BaseFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.BaseFilterSetIFilter">
            <summary>Sets the shim of FilterIterator.set_BaseFilter(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of FilterIterator.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.IterationsGet">
            <summary>Sets the shim of FilterIterator.get_Iterations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFilterIterator.AllInstances.IterationsSetInt32">
            <summary>Sets the shim of FilterIterator.set_Iterations(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFiltersSequence">
            <summary>Shim type of AForge.Imaging.Filters.FiltersSequence</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.#ctor(AForge.Imaging.Filters.FiltersSequence)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AddIFilter">
            <summary>Sets the shim of FiltersSequence.Add(IFilter filter)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ApplyBitmap">
            <summary>Sets the shim of FiltersSequence.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ApplyBitmapData">
            <summary>Sets the shim of FiltersSequence.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ApplyUnmanagedImage">
            <summary>Sets the shim of FiltersSequence.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of FiltersSequence.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.Constructor">
            <summary>Sets the shim of FiltersSequence.FiltersSequence()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ConstructorIFilterArray">
            <summary>Sets the shim of FiltersSequence.FiltersSequence(IFilter[] filters)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.ItemGetInt32">
            <summary>Sets the shim of FiltersSequence.get_Item(Int32 index)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.AddIFilter">
            <summary>Sets the shim of FiltersSequence.Add(IFilter filter)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.ApplyBitmap">
            <summary>Sets the shim of FiltersSequence.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of FiltersSequence.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of FiltersSequence.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of FiltersSequence.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFiltersSequence.AllInstances.ItemGetInt32">
            <summary>Sets the shim of FiltersSequence.get_Item(Int32 index)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection">
            <summary>Shim type of AForge.Imaging.Filters.FlatFieldCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.#ctor(AForge.Imaging.Filters.FlatFieldCorrection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.BackgoundImageGet">
            <summary>Sets the shim of FlatFieldCorrection.get_BackgoundImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.BackgoundImageSetBitmap">
            <summary>Sets the shim of FlatFieldCorrection.set_BackgoundImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.Constructor">
            <summary>Sets the shim of FlatFieldCorrection.FlatFieldCorrection()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.ConstructorBitmap">
            <summary>Sets the shim of FlatFieldCorrection.FlatFieldCorrection(Bitmap backgroundImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.FormatTranslationsGet">
            <summary>Sets the shim of FlatFieldCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of FlatFieldCorrection.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.UnmanagedBackgoundImageGet">
            <summary>Sets the shim of FlatFieldCorrection.get_UnmanagedBackgoundImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.UnmanagedBackgoundImageSetUnmanagedImage">
            <summary>Sets the shim of FlatFieldCorrection.set_UnmanagedBackgoundImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.BackgoundImageGet">
            <summary>Sets the shim of FlatFieldCorrection.get_BackgoundImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.BackgoundImageSetBitmap">
            <summary>Sets the shim of FlatFieldCorrection.set_BackgoundImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of FlatFieldCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of FlatFieldCorrection.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.UnmanagedBackgoundImageGet">
            <summary>Sets the shim of FlatFieldCorrection.get_UnmanagedBackgoundImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFlatFieldCorrection.AllInstances.UnmanagedBackgoundImageSetUnmanagedImage">
            <summary>Sets the shim of FlatFieldCorrection.set_UnmanagedBackgoundImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering">
            <summary>Shim type of AForge.Imaging.Filters.FloydSteinbergDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.#ctor(AForge.Imaging.Filters.FloydSteinbergDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.Constructor">
            <summary>Sets the shim of FloydSteinbergDithering.FloydSteinbergDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimFloydSteinbergDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGammaCorrection">
            <summary>Shim type of AForge.Imaging.Filters.GammaCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.#ctor(AForge.Imaging.Filters.GammaCorrection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.Constructor">
            <summary>Sets the shim of GammaCorrection.GammaCorrection()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.ConstructorDouble">
            <summary>Sets the shim of GammaCorrection.GammaCorrection(Double gamma)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.FormatTranslationsGet">
            <summary>Sets the shim of GammaCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.GammaGet">
            <summary>Sets the shim of GammaCorrection.get_Gamma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.GammaSetDouble">
            <summary>Sets the shim of GammaCorrection.set_Gamma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of GammaCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of GammaCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.AllInstances.GammaGet">
            <summary>Sets the shim of GammaCorrection.get_Gamma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.AllInstances.GammaSetDouble">
            <summary>Sets the shim of GammaCorrection.set_Gamma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGammaCorrection.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of GammaCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGaussianBlur">
            <summary>Shim type of AForge.Imaging.Filters.GaussianBlur</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.#ctor(AForge.Imaging.Filters.GaussianBlur)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.Constructor">
            <summary>Sets the shim of GaussianBlur.GaussianBlur()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.ConstructorDouble">
            <summary>Sets the shim of GaussianBlur.GaussianBlur(Double sigma)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.ConstructorDoubleInt32">
            <summary>Sets the shim of GaussianBlur.GaussianBlur(Double sigma, Int32 size)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.CreateFilter">
            <summary>Sets the shim of GaussianBlur.CreateFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.SigmaGet">
            <summary>Sets the shim of GaussianBlur.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.SigmaSetDouble">
            <summary>Sets the shim of GaussianBlur.set_Sigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.SizeGet">
            <summary>Sets the shim of GaussianBlur.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.SizeSetInt32">
            <summary>Sets the shim of GaussianBlur.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances.CreateFilter">
            <summary>Sets the shim of GaussianBlur.CreateFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances.SigmaGet">
            <summary>Sets the shim of GaussianBlur.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances.SigmaSetDouble">
            <summary>Sets the shim of GaussianBlur.set_Sigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances.SizeGet">
            <summary>Sets the shim of GaussianBlur.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianBlur.AllInstances.SizeSetInt32">
            <summary>Sets the shim of GaussianBlur.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen">
            <summary>Shim type of AForge.Imaging.Filters.GaussianSharpen</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.#ctor(AForge.Imaging.Filters.GaussianSharpen)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.Constructor">
            <summary>Sets the shim of GaussianSharpen.GaussianSharpen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.ConstructorDouble">
            <summary>Sets the shim of GaussianSharpen.GaussianSharpen(Double sigma)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.ConstructorDoubleInt32">
            <summary>Sets the shim of GaussianSharpen.GaussianSharpen(Double sigma, Int32 size)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.CreateFilter">
            <summary>Sets the shim of GaussianSharpen.CreateFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.SigmaGet">
            <summary>Sets the shim of GaussianSharpen.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.SigmaSetDouble">
            <summary>Sets the shim of GaussianSharpen.set_Sigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.SizeGet">
            <summary>Sets the shim of GaussianSharpen.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.SizeSetInt32">
            <summary>Sets the shim of GaussianSharpen.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances.CreateFilter">
            <summary>Sets the shim of GaussianSharpen.CreateFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances.SigmaGet">
            <summary>Sets the shim of GaussianSharpen.get_Sigma()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances.SigmaSetDouble">
            <summary>Sets the shim of GaussianSharpen.set_Sigma(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances.SizeGet">
            <summary>Sets the shim of GaussianSharpen.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGaussianSharpen.AllInstances.SizeSetInt32">
            <summary>Sets the shim of GaussianSharpen.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGrayscale">
            <summary>Shim type of AForge.Imaging.Filters.Grayscale</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.#ctor(AForge.Imaging.Filters.Grayscale)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.ConstructorDoubleDoubleDouble">
            <summary>Sets the shim of Grayscale.Grayscale(Double cr, Double cg, Double cb)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.FormatTranslationsGet">
            <summary>Sets the shim of Grayscale.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Grayscale.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGrayscale.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Grayscale.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Grayscale.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms">
            <summary>Shim type of AForge.Imaging.Filters.Grayscale+CommonAlgorithms</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscale.ShimCommonAlgorithms.StaticConstructor">
            <summary>Sets the shim of CommonAlgorithms.CommonAlgorithms()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB">
            <summary>Shim type of AForge.Imaging.Filters.GrayscaleToRGB</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.#ctor(AForge.Imaging.Filters.GrayscaleToRGB)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.Constructor">
            <summary>Sets the shim of GrayscaleToRGB.GrayscaleToRGB()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.FormatTranslationsGet">
            <summary>Sets the shim of GrayscaleToRGB.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of GrayscaleToRGB.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of GrayscaleToRGB.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimGrayscaleToRGB.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of GrayscaleToRGB.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHSLFiltering">
            <summary>Shim type of AForge.Imaging.Filters.HSLFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.#ctor(AForge.Imaging.Filters.HSLFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.Constructor">
            <summary>Sets the shim of HSLFiltering.HSLFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.ConstructorIntRangeRangeRange">
            <summary>Sets the shim of HSLFiltering.HSLFiltering(IntRange hue, Range saturation, Range luminance)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.FillColorGet">
            <summary>Sets the shim of HSLFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.FillColorSetHSL">
            <summary>Sets the shim of HSLFiltering.set_FillColor(HSL value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.FillOutsideRangeGet">
            <summary>Sets the shim of HSLFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.FormatTranslationsGet">
            <summary>Sets the shim of HSLFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.HueGet">
            <summary>Sets the shim of HSLFiltering.get_Hue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.HueSetIntRange">
            <summary>Sets the shim of HSLFiltering.set_Hue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.LuminanceGet">
            <summary>Sets the shim of HSLFiltering.get_Luminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.LuminanceSetRange">
            <summary>Sets the shim of HSLFiltering.set_Luminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HSLFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.SaturationGet">
            <summary>Sets the shim of HSLFiltering.get_Saturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.SaturationSetRange">
            <summary>Sets the shim of HSLFiltering.set_Saturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateHueGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateHue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateHueSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateHue(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateLuminanceGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateLuminanceSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateLuminance(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateSaturationGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.UpdateSaturationSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateSaturation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.FillColorGet">
            <summary>Sets the shim of HSLFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.FillColorSetHSL">
            <summary>Sets the shim of HSLFiltering.set_FillColor(HSL value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.FillOutsideRangeGet">
            <summary>Sets the shim of HSLFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HSLFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.HueGet">
            <summary>Sets the shim of HSLFiltering.get_Hue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.HueSetIntRange">
            <summary>Sets the shim of HSLFiltering.set_Hue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.LuminanceGet">
            <summary>Sets the shim of HSLFiltering.get_Luminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.LuminanceSetRange">
            <summary>Sets the shim of HSLFiltering.set_Luminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HSLFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.SaturationGet">
            <summary>Sets the shim of HSLFiltering.get_Saturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.SaturationSetRange">
            <summary>Sets the shim of HSLFiltering.set_Saturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateHueGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateHue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateHueSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateHue(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateLuminanceGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateLuminanceSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateLuminance(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateSaturationGet">
            <summary>Sets the shim of HSLFiltering.get_UpdateSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLFiltering.AllInstances.UpdateSaturationSetBoolean">
            <summary>Sets the shim of HSLFiltering.set_UpdateSaturation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHSLLinear">
            <summary>Shim type of AForge.Imaging.Filters.HSLLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.#ctor(AForge.Imaging.Filters.HSLLinear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.Constructor">
            <summary>Sets the shim of HSLLinear.HSLLinear()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.FormatTranslationsGet">
            <summary>Sets the shim of HSLLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.InLuminanceGet">
            <summary>Sets the shim of HSLLinear.get_InLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.InLuminanceSetRange">
            <summary>Sets the shim of HSLLinear.set_InLuminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.InSaturationGet">
            <summary>Sets the shim of HSLLinear.get_InSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.InSaturationSetRange">
            <summary>Sets the shim of HSLLinear.set_InSaturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.OutLuminanceGet">
            <summary>Sets the shim of HSLLinear.get_OutLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.OutLuminanceSetRange">
            <summary>Sets the shim of HSLLinear.set_OutLuminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.OutSaturationGet">
            <summary>Sets the shim of HSLLinear.get_OutSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.OutSaturationSetRange">
            <summary>Sets the shim of HSLLinear.set_OutSaturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HSLLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HSLLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.InLuminanceGet">
            <summary>Sets the shim of HSLLinear.get_InLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.InLuminanceSetRange">
            <summary>Sets the shim of HSLLinear.set_InLuminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.InSaturationGet">
            <summary>Sets the shim of HSLLinear.get_InSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.InSaturationSetRange">
            <summary>Sets the shim of HSLLinear.set_InSaturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.OutLuminanceGet">
            <summary>Sets the shim of HSLLinear.get_OutLuminance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.OutLuminanceSetRange">
            <summary>Sets the shim of HSLLinear.set_OutLuminance(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.OutSaturationGet">
            <summary>Sets the shim of HSLLinear.get_OutSaturation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.OutSaturationSetRange">
            <summary>Sets the shim of HSLLinear.set_OutSaturation(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHSLLinear.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HSLLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization">
            <summary>Shim type of AForge.Imaging.Filters.HistogramEqualization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.#ctor(AForge.Imaging.Filters.HistogramEqualization)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.Constructor">
            <summary>Sets the shim of HistogramEqualization.HistogramEqualization()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.EqualizeInt32ArrayInt64">
            <summary>Sets the shim of HistogramEqualization.Equalize(Int32[] histogram, Int64 numPixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.FormatTranslationsGet">
            <summary>Sets the shim of HistogramEqualization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HistogramEqualization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.AllInstances.EqualizeInt32ArrayInt64">
            <summary>Sets the shim of HistogramEqualization.Equalize(Int32[] histogram, Int64 numPixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HistogramEqualization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHistogramEqualization.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HistogramEqualization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHitAndMiss">
            <summary>Shim type of AForge.Imaging.Filters.HitAndMiss</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.#ctor(AForge.Imaging.Filters.HitAndMiss)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.ConstructorInt16MdArray2">
            <summary>Sets the shim of HitAndMiss.HitAndMiss(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.ConstructorInt16MdArray2HitAndMissModes">
            <summary>Sets the shim of HitAndMiss.HitAndMiss(Int16[,] se, Modes mode)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.FormatTranslationsGet">
            <summary>Sets the shim of HitAndMiss.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.ModeGet">
            <summary>Sets the shim of HitAndMiss.get_Mode()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.ModeSetHitAndMissModes">
            <summary>Sets the shim of HitAndMiss.set_Mode(Modes value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of HitAndMiss.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HitAndMiss.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.AllInstances.ModeGet">
            <summary>Sets the shim of HitAndMiss.get_Mode()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.AllInstances.ModeSetHitAndMissModes">
            <summary>Sets the shim of HitAndMiss.set_Mode(Modes value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHitAndMiss.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of HitAndMiss.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector">
            <summary>Shim type of AForge.Imaging.Filters.HomogenityEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.#ctor(AForge.Imaging.Filters.HomogenityEdgeDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.Constructor">
            <summary>Sets the shim of HomogenityEdgeDetector.HomogenityEdgeDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.FormatTranslationsGet">
            <summary>Sets the shim of HomogenityEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of HomogenityEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HomogenityEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHomogenityEdgeDetector.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of HomogenityEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing">
            <summary>Shim type of AForge.Imaging.Filters.HorizontalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.#ctor(AForge.Imaging.Filters.HorizontalRunLengthSmoothing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.Constructor">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.HorizontalRunLengthSmoothing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.ConstructorInt32">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.HorizontalRunLengthSmoothing(Int32 maxGapSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.FormatTranslationsGet">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.MaxGapSizeGet">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.get_MaxGapSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.MaxGapSizeSetInt32">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.set_MaxGapSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.AllInstances.MaxGapSizeGet">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.get_MaxGapSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.AllInstances.MaxGapSizeSetInt32">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.set_MaxGapSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHorizontalRunLengthSmoothing.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HorizontalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHueModifier">
            <summary>Shim type of AForge.Imaging.Filters.HueModifier</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.#ctor(AForge.Imaging.Filters.HueModifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimHueModifier.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.Constructor">
            <summary>Sets the shim of HueModifier.HueModifier()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.ConstructorInt32">
            <summary>Sets the shim of HueModifier.HueModifier(Int32 hue)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.FormatTranslationsGet">
            <summary>Sets the shim of HueModifier.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.HueGet">
            <summary>Sets the shim of HueModifier.get_Hue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.HueSetInt32">
            <summary>Sets the shim of HueModifier.set_Hue(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HueModifier.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimHueModifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of HueModifier.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.AllInstances.HueGet">
            <summary>Sets the shim of HueModifier.get_Hue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.AllInstances.HueSetInt32">
            <summary>Sets the shim of HueModifier.set_Hue(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimHueModifier.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of HueModifier.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimImageWarp">
            <summary>Shim type of AForge.Imaging.Filters.ImageWarp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.#ctor(AForge.Imaging.Filters.ImageWarp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimImageWarp.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.ConstructorIntPointMdArray2">
            <summary>Sets the shim of ImageWarp.ImageWarp(IntPoint[,] warpMap)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.FormatTranslationsGet">
            <summary>Sets the shim of ImageWarp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ImageWarp.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.WarpMapGet">
            <summary>Sets the shim of ImageWarp.get_WarpMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.WarpMapSetIntPointMdArray2">
            <summary>Sets the shim of ImageWarp.set_WarpMap(IntPoint[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimImageWarp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ImageWarp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ImageWarp.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.AllInstances.WarpMapGet">
            <summary>Sets the shim of ImageWarp.get_WarpMap()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimImageWarp.AllInstances.WarpMapSetIntPointMdArray2">
            <summary>Sets the shim of ImageWarp.set_WarpMap(IntPoint[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimIntersect">
            <summary>Shim type of AForge.Imaging.Filters.Intersect</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.#ctor(AForge.Imaging.Filters.Intersect)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIntersect.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.Constructor">
            <summary>Sets the shim of Intersect.Intersect()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.ConstructorBitmap">
            <summary>Sets the shim of Intersect.Intersect(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.ConstructorUnmanagedImage">
            <summary>Sets the shim of Intersect.Intersect(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.FormatTranslationsGet">
            <summary>Sets the shim of Intersect.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.InitFormatTranslations">
            <summary>Sets the shim of Intersect.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Intersect.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimIntersect.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Intersect.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Intersect.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIntersect.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Intersect.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimInvert">
            <summary>Shim type of AForge.Imaging.Filters.Invert</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.#ctor(AForge.Imaging.Filters.Invert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimInvert.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.Constructor">
            <summary>Sets the shim of Invert.Invert()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.FormatTranslationsGet">
            <summary>Sets the shim of Invert.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Invert.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimInvert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Invert.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimInvert.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Invert.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold">
            <summary>Shim type of AForge.Imaging.Filters.IterativeThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.#ctor(AForge.Imaging.Filters.IterativeThreshold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.Constructor">
            <summary>Sets the shim of IterativeThreshold.IterativeThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.ConstructorInt32">
            <summary>Sets the shim of IterativeThreshold.IterativeThreshold(Int32 minError)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.ConstructorInt32Int32">
            <summary>Sets the shim of IterativeThreshold.IterativeThreshold(Int32 minError, Int32 threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.MinimumErrorGet">
            <summary>Sets the shim of IterativeThreshold.get_MinimumError()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.MinimumErrorSetInt32">
            <summary>Sets the shim of IterativeThreshold.set_MinimumError(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of IterativeThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of IterativeThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.MinimumErrorGet">
            <summary>Sets the shim of IterativeThreshold.get_MinimumError()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.MinimumErrorSetInt32">
            <summary>Sets the shim of IterativeThreshold.set_MinimumError(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimIterativeThreshold.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of IterativeThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering">
            <summary>Shim type of AForge.Imaging.Filters.JarvisJudiceNinkeDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.#ctor(AForge.Imaging.Filters.JarvisJudiceNinkeDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.Constructor">
            <summary>Sets the shim of JarvisJudiceNinkeDithering.JarvisJudiceNinkeDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimJarvisJudiceNinkeDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimJitter">
            <summary>Shim type of AForge.Imaging.Filters.Jitter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.#ctor(AForge.Imaging.Filters.Jitter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimJitter.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.Constructor">
            <summary>Sets the shim of Jitter.Jitter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.ConstructorInt32">
            <summary>Sets the shim of Jitter.Jitter(Int32 radius)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.FormatTranslationsGet">
            <summary>Sets the shim of Jitter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Jitter.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.RadiusGet">
            <summary>Sets the shim of Jitter.get_Radius()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.RadiusSetInt32">
            <summary>Sets the shim of Jitter.set_Radius(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimJitter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Jitter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Jitter.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.AllInstances.RadiusGet">
            <summary>Sets the shim of Jitter.get_Radius()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimJitter.AllInstances.RadiusSetInt32">
            <summary>Sets the shim of Jitter.set_Radius(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimLevelsLinear">
            <summary>Shim type of AForge.Imaging.Filters.LevelsLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.#ctor(AForge.Imaging.Filters.LevelsLinear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.CalculateMapIntRangeIntRangeByteArray">
            <summary>Sets the shim of LevelsLinear.CalculateMap(IntRange inRange, IntRange outRange, Byte[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.Constructor">
            <summary>Sets the shim of LevelsLinear.LevelsLinear()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.FormatTranslationsGet">
            <summary>Sets the shim of LevelsLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InBlueGet">
            <summary>Sets the shim of LevelsLinear.get_InBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InGrayGet">
            <summary>Sets the shim of LevelsLinear.get_InGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InGraySetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InGreenGet">
            <summary>Sets the shim of LevelsLinear.get_InGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InRedGet">
            <summary>Sets the shim of LevelsLinear.get_InRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InRedSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.InputSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_Input(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutBlueGet">
            <summary>Sets the shim of LevelsLinear.get_OutBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutGrayGet">
            <summary>Sets the shim of LevelsLinear.get_OutGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutGraySetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutGreenGet">
            <summary>Sets the shim of LevelsLinear.get_OutGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutRedGet">
            <summary>Sets the shim of LevelsLinear.get_OutRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutRedSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.OutputSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_Output(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of LevelsLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.CalculateMapIntRangeIntRangeByteArray">
            <summary>Sets the shim of LevelsLinear.CalculateMap(IntRange inRange, IntRange outRange, Byte[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of LevelsLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InBlueGet">
            <summary>Sets the shim of LevelsLinear.get_InBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InGrayGet">
            <summary>Sets the shim of LevelsLinear.get_InGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InGraySetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InGreenGet">
            <summary>Sets the shim of LevelsLinear.get_InGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InRedGet">
            <summary>Sets the shim of LevelsLinear.get_InRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InRedSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_InRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.InputSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_Input(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutBlueGet">
            <summary>Sets the shim of LevelsLinear.get_OutBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutGrayGet">
            <summary>Sets the shim of LevelsLinear.get_OutGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutGraySetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutGreenGet">
            <summary>Sets the shim of LevelsLinear.get_OutGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutRedGet">
            <summary>Sets the shim of LevelsLinear.get_OutRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutRedSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_OutRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.OutputSetIntRange">
            <summary>Sets the shim of LevelsLinear.set_Output(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of LevelsLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp">
            <summary>Shim type of AForge.Imaging.Filters.LevelsLinear16bpp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.#ctor(AForge.Imaging.Filters.LevelsLinear16bpp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.CalculateMapIntRangeIntRangeUInt16Array">
            <summary>Sets the shim of LevelsLinear16bpp.CalculateMap(IntRange inRange, IntRange outRange, UInt16[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.Constructor">
            <summary>Sets the shim of LevelsLinear16bpp.LevelsLinear16bpp()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.FormatTranslationsGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InBlueGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InGrayGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InGraySetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InGreenGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InRedGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InRedSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.InputSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_Input(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutBlueGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutGrayGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutGraySetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutGreenGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutRedGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutRedSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.OutputSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_Output(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of LevelsLinear16bpp.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.CalculateMapIntRangeIntRangeUInt16Array">
            <summary>Sets the shim of LevelsLinear16bpp.CalculateMap(IntRange inRange, IntRange outRange, UInt16[] map)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InBlueGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InGrayGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InGraySetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InGreenGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InRedGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_InRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InRedSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_InRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.InputSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_Input(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutBlueGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutBlue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutBlueSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutBlue(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutGrayGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutGray()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutGraySetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutGray(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutGreenGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutGreen()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutGreenSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutGreen(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutRedGet">
            <summary>Sets the shim of LevelsLinear16bpp.get_OutRed()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutRedSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_OutRed(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.OutputSetIntRange">
            <summary>Sets the shim of LevelsLinear16bpp.set_Output(IntRange value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimLevelsLinear16bpp.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of LevelsLinear16bpp.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMaskedFilter">
            <summary>Shim type of AForge.Imaging.Filters.MaskedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.#ctor(AForge.Imaging.Filters.MaskedFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.BaseFilterGet">
            <summary>Sets the shim of MaskedFilter.get_BaseFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.BaseFilterSetIFilter">
            <summary>Sets the shim of MaskedFilter.set_BaseFilter(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.ConstructorIFilterBitmap">
            <summary>Sets the shim of MaskedFilter.MaskedFilter(IFilter baseFiler, Bitmap maskImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.ConstructorIFilterByteMdArray2">
            <summary>Sets the shim of MaskedFilter.MaskedFilter(IFilter baseFiler, Byte[,] mask)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.ConstructorIFilterUnmanagedImage">
            <summary>Sets the shim of MaskedFilter.MaskedFilter(IFilter baseFiler, UnmanagedImage unmanagedMaskImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.FormatTranslationsGet">
            <summary>Sets the shim of MaskedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.MaskGet">
            <summary>Sets the shim of MaskedFilter.get_Mask()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.MaskImageGet">
            <summary>Sets the shim of MaskedFilter.get_MaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.MaskImageSetBitmap">
            <summary>Sets the shim of MaskedFilter.set_MaskImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.MaskSetByteMdArray2">
            <summary>Sets the shim of MaskedFilter.set_Mask(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of MaskedFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.UnmanagedMaskImageGet">
            <summary>Sets the shim of MaskedFilter.get_UnmanagedMaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.UnmanagedMaskImageSetUnmanagedImage">
            <summary>Sets the shim of MaskedFilter.set_UnmanagedMaskImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.BaseFilterGet">
            <summary>Sets the shim of MaskedFilter.get_BaseFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.BaseFilterSetIFilter">
            <summary>Sets the shim of MaskedFilter.set_BaseFilter(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of MaskedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.MaskGet">
            <summary>Sets the shim of MaskedFilter.get_Mask()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.MaskImageGet">
            <summary>Sets the shim of MaskedFilter.get_MaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.MaskImageSetBitmap">
            <summary>Sets the shim of MaskedFilter.set_MaskImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.MaskSetByteMdArray2">
            <summary>Sets the shim of MaskedFilter.set_Mask(Byte[,] value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of MaskedFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.UnmanagedMaskImageGet">
            <summary>Sets the shim of MaskedFilter.get_UnmanagedMaskImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMaskedFilter.AllInstances.UnmanagedMaskImageSetUnmanagedImage">
            <summary>Sets the shim of MaskedFilter.set_UnmanagedMaskImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMean">
            <summary>Shim type of AForge.Imaging.Filters.Mean</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.#ctor(AForge.Imaging.Filters.Mean)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMean.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMean.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMean.Constructor">
            <summary>Sets the shim of Mean.Mean()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMean.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMedian">
            <summary>Shim type of AForge.Imaging.Filters.Median</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.#ctor(AForge.Imaging.Filters.Median)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMedian.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.Constructor">
            <summary>Sets the shim of Median.Median()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.ConstructorInt32">
            <summary>Sets the shim of Median.Median(Int32 size)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.FormatTranslationsGet">
            <summary>Sets the shim of Median.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Median.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.SizeGet">
            <summary>Sets the shim of Median.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.SizeSetInt32">
            <summary>Sets the shim of Median.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMedian.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Median.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of Median.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.AllInstances.SizeGet">
            <summary>Sets the shim of Median.get_Size()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMedian.AllInstances.SizeSetInt32">
            <summary>Sets the shim of Median.set_Size(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMerge">
            <summary>Shim type of AForge.Imaging.Filters.Merge</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.#ctor(AForge.Imaging.Filters.Merge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMerge.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.Constructor">
            <summary>Sets the shim of Merge.Merge()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.ConstructorBitmap">
            <summary>Sets the shim of Merge.Merge(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.ConstructorUnmanagedImage">
            <summary>Sets the shim of Merge.Merge(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.FormatTranslationsGet">
            <summary>Sets the shim of Merge.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.InitFormatTranslations">
            <summary>Sets the shim of Merge.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Merge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMerge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Merge.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Merge.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMerge.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Merge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMirror">
            <summary>Shim type of AForge.Imaging.Filters.Mirror</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.#ctor(AForge.Imaging.Filters.Mirror)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMirror.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.ConstructorBooleanBoolean">
            <summary>Sets the shim of Mirror.Mirror(Boolean mirrorX, Boolean mirrorY)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.FormatTranslationsGet">
            <summary>Sets the shim of Mirror.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.MirrorXGet">
            <summary>Sets the shim of Mirror.get_MirrorX()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.MirrorXSetBoolean">
            <summary>Sets the shim of Mirror.set_MirrorX(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.MirrorYGet">
            <summary>Sets the shim of Mirror.get_MirrorY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.MirrorYSetBoolean">
            <summary>Sets the shim of Mirror.set_MirrorY(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Mirror.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Mirror.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.MirrorXGet">
            <summary>Sets the shim of Mirror.get_MirrorX()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.MirrorXSetBoolean">
            <summary>Sets the shim of Mirror.set_MirrorX(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.MirrorYGet">
            <summary>Sets the shim of Mirror.get_MirrorY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.MirrorYSetBoolean">
            <summary>Sets the shim of Mirror.set_MirrorY(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMirror.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Mirror.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMorph">
            <summary>Shim type of AForge.Imaging.Filters.Morph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.#ctor(AForge.Imaging.Filters.Morph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMorph.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.Constructor">
            <summary>Sets the shim of Morph.Morph()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.ConstructorBitmap">
            <summary>Sets the shim of Morph.Morph(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.ConstructorUnmanagedImage">
            <summary>Sets the shim of Morph.Morph(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.FormatTranslationsGet">
            <summary>Sets the shim of Morph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.InitFormatTranslations">
            <summary>Sets the shim of Morph.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Morph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.SourcePercentGet">
            <summary>Sets the shim of Morph.get_SourcePercent()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.SourcePercentSetDouble">
            <summary>Sets the shim of Morph.set_SourcePercent(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Morph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Morph.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Morph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances.SourcePercentGet">
            <summary>Sets the shim of Morph.get_SourcePercent()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMorph.AllInstances.SourcePercentSetDouble">
            <summary>Sets the shim of Morph.set_SourcePercent(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMoveTowards">
            <summary>Shim type of AForge.Imaging.Filters.MoveTowards</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.#ctor(AForge.Imaging.Filters.MoveTowards)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimMoveTowards.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.Constructor">
            <summary>Sets the shim of MoveTowards.MoveTowards()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.ConstructorBitmap">
            <summary>Sets the shim of MoveTowards.MoveTowards(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.ConstructorBitmapInt32">
            <summary>Sets the shim of MoveTowards.MoveTowards(Bitmap overlayImage, Int32 stepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.ConstructorUnmanagedImage">
            <summary>Sets the shim of MoveTowards.MoveTowards(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.ConstructorUnmanagedImageInt32">
            <summary>Sets the shim of MoveTowards.MoveTowards(UnmanagedImage unmanagedOverlayImage, Int32 stepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.FormatTranslationsGet">
            <summary>Sets the shim of MoveTowards.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.InitFormatTranslations">
            <summary>Sets the shim of MoveTowards.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of MoveTowards.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.StepSizeGet">
            <summary>Sets the shim of MoveTowards.get_StepSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.StepSizeSetInt32">
            <summary>Sets the shim of MoveTowards.set_StepSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of MoveTowards.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of MoveTowards.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of MoveTowards.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances.StepSizeGet">
            <summary>Sets the shim of MoveTowards.get_StepSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimMoveTowards.AllInstances.StepSizeSetInt32">
            <summary>Sets the shim of MoveTowards.set_StepSize(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOilPainting">
            <summary>Shim type of AForge.Imaging.Filters.OilPainting</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.#ctor(AForge.Imaging.Filters.OilPainting)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOilPainting.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.BrushSizeGet">
            <summary>Sets the shim of OilPainting.get_BrushSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.BrushSizeSetInt32">
            <summary>Sets the shim of OilPainting.set_BrushSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.Constructor">
            <summary>Sets the shim of OilPainting.OilPainting()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.ConstructorInt32">
            <summary>Sets the shim of OilPainting.OilPainting(Int32 brushSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.FormatTranslationsGet">
            <summary>Sets the shim of OilPainting.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of OilPainting.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOilPainting.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.AllInstances.BrushSizeGet">
            <summary>Sets the shim of OilPainting.get_BrushSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.AllInstances.BrushSizeSetInt32">
            <summary>Sets the shim of OilPainting.set_BrushSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of OilPainting.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOilPainting.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of OilPainting.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOpening">
            <summary>Shim type of AForge.Imaging.Filters.Opening</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.#ctor(AForge.Imaging.Filters.Opening)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOpening.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyBitmap">
            <summary>Sets the shim of Opening.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyBitmapData">
            <summary>Sets the shim of Opening.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceBitmap">
            <summary>Sets the shim of Opening.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceBitmapData">
            <summary>Sets the shim of Opening.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of Opening.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyUnmanagedImage">
            <summary>Sets the shim of Opening.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Opening.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.Constructor">
            <summary>Sets the shim of Opening.Opening()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.ConstructorInt16MdArray2">
            <summary>Sets the shim of Opening.Opening(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.FormatTranslationsGet">
            <summary>Sets the shim of Opening.get_FormatTranslations()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyBitmap">
            <summary>Sets the shim of Opening.Apply(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyBitmapData">
            <summary>Sets the shim of Opening.Apply(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceBitmap">
            <summary>Sets the shim of Opening.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceBitmapData">
            <summary>Sets the shim of Opening.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceBitmapRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceUnmanagedImage">
            <summary>Sets the shim of Opening.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the shim of Opening.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyUnmanagedImage">
            <summary>Sets the shim of Opening.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Opening.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOpening.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Opening.get_FormatTranslations()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOrderedDithering">
            <summary>Shim type of AForge.Imaging.Filters.OrderedDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.#ctor(AForge.Imaging.Filters.OrderedDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.Constructor">
            <summary>Sets the shim of OrderedDithering.OrderedDithering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.ConstructorByteMdArray2">
            <summary>Sets the shim of OrderedDithering.OrderedDithering(Byte[,] matrix)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.FormatTranslationsGet">
            <summary>Sets the shim of OrderedDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of OrderedDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of OrderedDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOrderedDithering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of OrderedDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold">
            <summary>Shim type of AForge.Imaging.Filters.OtsuThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.#ctor(AForge.Imaging.Filters.OtsuThreshold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.Constructor">
            <summary>Sets the shim of OtsuThreshold.OtsuThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.FormatTranslationsGet">
            <summary>Sets the shim of OtsuThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of OtsuThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.ThresholdValueGet">
            <summary>Sets the shim of OtsuThreshold.get_ThresholdValue()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of OtsuThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of OtsuThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of OtsuThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimOtsuThreshold.AllInstances.ThresholdValueGet">
            <summary>Sets the shim of OtsuThreshold.get_ThresholdValue()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPixellate">
            <summary>Shim type of AForge.Imaging.Filters.Pixellate</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.#ctor(AForge.Imaging.Filters.Pixellate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPixellate.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.Constructor">
            <summary>Sets the shim of Pixellate.Pixellate()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.ConstructorInt32">
            <summary>Sets the shim of Pixellate.Pixellate(Int32 pixelSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.ConstructorInt32Int32">
            <summary>Sets the shim of Pixellate.Pixellate(Int32 pixelWidth, Int32 pixelHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.FormatTranslationsGet">
            <summary>Sets the shim of Pixellate.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.PixelHeightGet">
            <summary>Sets the shim of Pixellate.get_PixelHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.PixelHeightSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.PixelSizeSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.PixelWidthGet">
            <summary>Sets the shim of Pixellate.get_PixelWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.PixelWidthSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Pixellate.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Pixellate.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.PixelHeightGet">
            <summary>Sets the shim of Pixellate.get_PixelHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.PixelHeightSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.PixelSizeSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.PixelWidthGet">
            <summary>Sets the shim of Pixellate.get_PixelWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.PixelWidthSetInt32">
            <summary>Sets the shim of Pixellate.set_PixelWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPixellate.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Pixellate.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill">
            <summary>Shim type of AForge.Imaging.Filters.PointedColorFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.#ctor(AForge.Imaging.Filters.PointedColorFloodFill)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.CheckGrayPixelByte">
            <summary>Sets the shim of PointedColorFloodFill.CheckGrayPixel(Byte pixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.Constructor">
            <summary>Sets the shim of PointedColorFloodFill.PointedColorFloodFill()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.ConstructorColor">
            <summary>Sets the shim of PointedColorFloodFill.PointedColorFloodFill(Color fillColor)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.FillColorGet">
            <summary>Sets the shim of PointedColorFloodFill.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.FillColorSetColor">
            <summary>Sets the shim of PointedColorFloodFill.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.FormatTranslationsGet">
            <summary>Sets the shim of PointedColorFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.LinearFloodFill4GrayIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.LinearFloodFill4Gray(IntPoint startingPoint)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.LinearFloodFill4RGBIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.LinearFloodFill4RGB(IntPoint startPoint)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of PointedColorFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.StartingPointGet">
            <summary>Sets the shim of PointedColorFloodFill.get_StartingPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.StartingPointSetIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.set_StartingPoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.ToleranceGet">
            <summary>Sets the shim of PointedColorFloodFill.get_Tolerance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.ToleranceSetColor">
            <summary>Sets the shim of PointedColorFloodFill.set_Tolerance(Color value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.CheckGrayPixelByte">
            <summary>Sets the shim of PointedColorFloodFill.CheckGrayPixel(Byte pixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.FillColorGet">
            <summary>Sets the shim of PointedColorFloodFill.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.FillColorSetColor">
            <summary>Sets the shim of PointedColorFloodFill.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of PointedColorFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.LinearFloodFill4GrayIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.LinearFloodFill4Gray(IntPoint startingPoint)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.LinearFloodFill4RGBIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.LinearFloodFill4RGB(IntPoint startPoint)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of PointedColorFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.StartingPointGet">
            <summary>Sets the shim of PointedColorFloodFill.get_StartingPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.StartingPointSetIntPoint">
            <summary>Sets the shim of PointedColorFloodFill.set_StartingPoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.ToleranceGet">
            <summary>Sets the shim of PointedColorFloodFill.get_Tolerance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedColorFloodFill.AllInstances.ToleranceSetColor">
            <summary>Sets the shim of PointedColorFloodFill.set_Tolerance(Color value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill">
            <summary>Shim type of AForge.Imaging.Filters.PointedMeanFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.#ctor(AForge.Imaging.Filters.PointedMeanFloodFill)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.CheckGrayPixelByte">
            <summary>Sets the shim of PointedMeanFloodFill.CheckGrayPixel(Byte pixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.Constructor">
            <summary>Sets the shim of PointedMeanFloodFill.PointedMeanFloodFill()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.FormatTranslationsGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.LinearFloodFill4GrayInt32Int32">
            <summary>Sets the shim of PointedMeanFloodFill.LinearFloodFill4Gray(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.LinearFloodFill4RGBInt32Int32">
            <summary>Sets the shim of PointedMeanFloodFill.LinearFloodFill4RGB(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of PointedMeanFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.StartingPointGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_StartingPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.StartingPointSetIntPoint">
            <summary>Sets the shim of PointedMeanFloodFill.set_StartingPoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.ToleranceGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_Tolerance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.ToleranceSetColor">
            <summary>Sets the shim of PointedMeanFloodFill.set_Tolerance(Color value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.CheckGrayPixelByte">
            <summary>Sets the shim of PointedMeanFloodFill.CheckGrayPixel(Byte pixel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.LinearFloodFill4GrayInt32Int32">
            <summary>Sets the shim of PointedMeanFloodFill.LinearFloodFill4Gray(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.LinearFloodFill4RGBInt32Int32">
            <summary>Sets the shim of PointedMeanFloodFill.LinearFloodFill4RGB(Int32 x, Int32 y)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of PointedMeanFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.StartingPointGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_StartingPoint()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.StartingPointSetIntPoint">
            <summary>Sets the shim of PointedMeanFloodFill.set_StartingPoint(IntPoint value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.ToleranceGet">
            <summary>Sets the shim of PointedMeanFloodFill.get_Tolerance()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimPointedMeanFloodFill.AllInstances.ToleranceSetColor">
            <summary>Sets the shim of PointedMeanFloodFill.set_Tolerance(Color value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation">
            <summary>Shim type of AForge.Imaging.Filters.QuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.#ctor(AForge.Imaging.Filters.QuadrilateralTransformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AutomaticSizeCalculatonGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_AutomaticSizeCalculaton()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AutomaticSizeCalculatonSetBoolean">
            <summary>Sets the shim of QuadrilateralTransformation.set_AutomaticSizeCalculaton(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.CalculateDestinationSize">
            <summary>Sets the shim of QuadrilateralTransformation.CalculateDestinationSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of QuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.Constructor">
            <summary>Sets the shim of QuadrilateralTransformation.QuadrilateralTransformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.ConstructorListOfIntPoint">
            <summary>Sets the shim of QuadrilateralTransformation.QuadrilateralTransformation(List`1&lt;IntPoint&gt; sourceQuadrilateral)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.ConstructorListOfIntPointInt32Int32">
            <summary>Sets the shim of QuadrilateralTransformation.QuadrilateralTransformation(List`1&lt;IntPoint&gt; sourceQuadrilateral, Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.NewHeightGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.NewHeightSetInt32">
            <summary>Sets the shim of QuadrilateralTransformation.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.NewWidthGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.NewWidthSetInt32">
            <summary>Sets the shim of QuadrilateralTransformation.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of QuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.SourceQuadrilateralGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_SourceQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.SourceQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of QuadrilateralTransformation.set_SourceQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.UseInterpolationGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.UseInterpolationSetBoolean">
            <summary>Sets the shim of QuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.AutomaticSizeCalculatonGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_AutomaticSizeCalculaton()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.AutomaticSizeCalculatonSetBoolean">
            <summary>Sets the shim of QuadrilateralTransformation.set_AutomaticSizeCalculaton(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.CalculateDestinationSize">
            <summary>Sets the shim of QuadrilateralTransformation.CalculateDestinationSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of QuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.NewHeightGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.NewHeightSetInt32">
            <summary>Sets the shim of QuadrilateralTransformation.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.NewWidthGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.NewWidthSetInt32">
            <summary>Sets the shim of QuadrilateralTransformation.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of QuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.SourceQuadrilateralGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_SourceQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.SourceQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of QuadrilateralTransformation.set_SourceQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.UseInterpolationGet">
            <summary>Sets the shim of QuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimQuadrilateralTransformation.AllInstances.UseInterpolationSetBoolean">
            <summary>Sets the shim of QuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimReplaceChannel">
            <summary>Shim type of AForge.Imaging.Filters.ReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.#ctor(AForge.Imaging.Filters.ReplaceChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ChannelGet">
            <summary>Sets the shim of ReplaceChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ChannelImageGet">
            <summary>Sets the shim of ReplaceChannel.get_ChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ChannelImageSetBitmap">
            <summary>Sets the shim of ReplaceChannel.set_ChannelImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ChannelSetInt16">
            <summary>Sets the shim of ReplaceChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.Constructor">
            <summary>Sets the shim of ReplaceChannel.ReplaceChannel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ConstructorInt16Bitmap">
            <summary>Sets the shim of ReplaceChannel.ReplaceChannel(Int16 channel, Bitmap channelImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ConstructorInt16UnmanagedImage">
            <summary>Sets the shim of ReplaceChannel.ReplaceChannel(Int16 channel, UnmanagedImage channelImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.FormatTranslationsGet">
            <summary>Sets the shim of ReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.UnmanagedChannelImageGet">
            <summary>Sets the shim of ReplaceChannel.get_UnmanagedChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.UnmanagedChannelImageSetUnmanagedImage">
            <summary>Sets the shim of ReplaceChannel.set_UnmanagedChannelImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.ChannelGet">
            <summary>Sets the shim of ReplaceChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.ChannelImageGet">
            <summary>Sets the shim of ReplaceChannel.get_ChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.ChannelImageSetBitmap">
            <summary>Sets the shim of ReplaceChannel.set_ChannelImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.ChannelSetInt16">
            <summary>Sets the shim of ReplaceChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.UnmanagedChannelImageGet">
            <summary>Sets the shim of ReplaceChannel.get_UnmanagedChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimReplaceChannel.AllInstances.UnmanagedChannelImageSetUnmanagedImage">
            <summary>Sets the shim of ReplaceChannel.set_UnmanagedChannelImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeBicubic">
            <summary>Shim type of AForge.Imaging.Filters.ResizeBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.#ctor(AForge.Imaging.Filters.ResizeBicubic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.ConstructorInt32Int32">
            <summary>Sets the shim of ResizeBicubic.ResizeBicubic(Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.FormatTranslationsGet">
            <summary>Sets the shim of ResizeBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ResizeBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBicubic.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeBilinear">
            <summary>Shim type of AForge.Imaging.Filters.ResizeBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.#ctor(AForge.Imaging.Filters.ResizeBilinear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.ConstructorInt32Int32">
            <summary>Sets the shim of ResizeBilinear.ResizeBilinear(Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.FormatTranslationsGet">
            <summary>Sets the shim of ResizeBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ResizeBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeBilinear.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor">
            <summary>Shim type of AForge.Imaging.Filters.ResizeNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.#ctor(AForge.Imaging.Filters.ResizeNearestNeighbor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.ConstructorInt32Int32">
            <summary>Sets the shim of ResizeNearestNeighbor.ResizeNearestNeighbor(Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.FormatTranslationsGet">
            <summary>Sets the shim of ResizeNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ResizeNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimResizeNearestNeighbor.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ResizeNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateBicubic">
            <summary>Shim type of AForge.Imaging.Filters.RotateBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.#ctor(AForge.Imaging.Filters.RotateBicubic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.ConstructorDouble">
            <summary>Sets the shim of RotateBicubic.RotateBicubic(Double angle)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.ConstructorDoubleBoolean">
            <summary>Sets the shim of RotateBicubic.RotateBicubic(Double angle, Boolean keepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.FormatTranslationsGet">
            <summary>Sets the shim of RotateBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of RotateBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBicubic.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateBilinear">
            <summary>Shim type of AForge.Imaging.Filters.RotateBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.#ctor(AForge.Imaging.Filters.RotateBilinear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.ConstructorDouble">
            <summary>Sets the shim of RotateBilinear.RotateBilinear(Double angle)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.ConstructorDoubleBoolean">
            <summary>Sets the shim of RotateBilinear.RotateBilinear(Double angle, Boolean keepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.FormatTranslationsGet">
            <summary>Sets the shim of RotateBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of RotateBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateBilinear.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateChannels">
            <summary>Shim type of AForge.Imaging.Filters.RotateChannels</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.#ctor(AForge.Imaging.Filters.RotateChannels)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.Constructor">
            <summary>Sets the shim of RotateChannels.RotateChannels()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.FormatTranslationsGet">
            <summary>Sets the shim of RotateChannels.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of RotateChannels.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateChannels.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of RotateChannels.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateChannels.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of RotateChannels.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor">
            <summary>Shim type of AForge.Imaging.Filters.RotateNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.#ctor(AForge.Imaging.Filters.RotateNearestNeighbor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.ConstructorDouble">
            <summary>Sets the shim of RotateNearestNeighbor.RotateNearestNeighbor(Double angle)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.ConstructorDoubleBoolean">
            <summary>Sets the shim of RotateNearestNeighbor.RotateNearestNeighbor(Double angle, Boolean keepSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.FormatTranslationsGet">
            <summary>Sets the shim of RotateNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.ProcessFilter16bpcUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter16bpc(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.ProcessFilter8bpcUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter8bpc(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of RotateNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.AllInstances.ProcessFilter16bpcUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter16bpc(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.AllInstances.ProcessFilter8bpcUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter8bpc(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimRotateNearestNeighbor.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of RotateNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSISThreshold">
            <summary>Shim type of AForge.Imaging.Filters.SISThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.#ctor(AForge.Imaging.Filters.SISThreshold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.Constructor">
            <summary>Sets the shim of SISThreshold.SISThreshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.FormatTranslationsGet">
            <summary>Sets the shim of SISThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SISThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.ThresholdValueGet">
            <summary>Sets the shim of SISThreshold.get_ThresholdValue()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.CalculateThresholdBitmapDataRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(BitmapData image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.CalculateThresholdBitmapRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.CalculateThresholdUnmanagedImageRectangle">
            <summary>Sets the shim of SISThreshold.CalculateThreshold(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SISThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SISThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSISThreshold.AllInstances.ThresholdValueGet">
            <summary>Sets the shim of SISThreshold.get_ThresholdValue()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise">
            <summary>Shim type of AForge.Imaging.Filters.SaltAndPepperNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.#ctor(AForge.Imaging.Filters.SaltAndPepperNoise)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.Constructor">
            <summary>Sets the shim of SaltAndPepperNoise.SaltAndPepperNoise()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.ConstructorDouble">
            <summary>Sets the shim of SaltAndPepperNoise.SaltAndPepperNoise(Double noiseAmount)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.FormatTranslationsGet">
            <summary>Sets the shim of SaltAndPepperNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.NoiseAmountGet">
            <summary>Sets the shim of SaltAndPepperNoise.get_NoiseAmount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.NoiseAmountSetDouble">
            <summary>Sets the shim of SaltAndPepperNoise.set_NoiseAmount(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SaltAndPepperNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SaltAndPepperNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.AllInstances.NoiseAmountGet">
            <summary>Sets the shim of SaltAndPepperNoise.get_NoiseAmount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.AllInstances.NoiseAmountSetDouble">
            <summary>Sets the shim of SaltAndPepperNoise.set_NoiseAmount(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaltAndPepperNoise.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SaltAndPepperNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection">
            <summary>Shim type of AForge.Imaging.Filters.SaturationCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.#ctor(AForge.Imaging.Filters.SaturationCorrection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AdjustValueGet">
            <summary>Sets the shim of SaturationCorrection.get_AdjustValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AdjustValueSetSingle">
            <summary>Sets the shim of SaturationCorrection.set_AdjustValue(Single value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.Constructor">
            <summary>Sets the shim of SaturationCorrection.SaturationCorrection()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.ConstructorSingle">
            <summary>Sets the shim of SaturationCorrection.SaturationCorrection(Single adjustValue)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.FormatTranslationsGet">
            <summary>Sets the shim of SaturationCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SaturationCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AllInstances.AdjustValueGet">
            <summary>Sets the shim of SaturationCorrection.get_AdjustValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AllInstances.AdjustValueSetSingle">
            <summary>Sets the shim of SaturationCorrection.set_AdjustValue(Single value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SaturationCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSaturationCorrection.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SaturationCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSepia">
            <summary>Shim type of AForge.Imaging.Filters.Sepia</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.#ctor(AForge.Imaging.Filters.Sepia)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSepia.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.Constructor">
            <summary>Sets the shim of Sepia.Sepia()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.FormatTranslationsGet">
            <summary>Sets the shim of Sepia.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Sepia.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSepia.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Sepia.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSepia.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Sepia.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSharpen">
            <summary>Shim type of AForge.Imaging.Filters.Sharpen</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.#ctor(AForge.Imaging.Filters.Sharpen)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSharpen.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSharpen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSharpen.Constructor">
            <summary>Sets the shim of Sharpen.Sharpen()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSharpen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimShrink">
            <summary>Shim type of AForge.Imaging.Filters.Shrink</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.#ctor(AForge.Imaging.Filters.Shrink)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimShrink.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of Shrink.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.ColorToRemoveGet">
            <summary>Sets the shim of Shrink.get_ColorToRemove()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.ColorToRemoveSetColor">
            <summary>Sets the shim of Shrink.set_ColorToRemove(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.Constructor">
            <summary>Sets the shim of Shrink.Shrink()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.ConstructorColor">
            <summary>Sets the shim of Shrink.Shrink(Color colorToRemove)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.FormatTranslationsGet">
            <summary>Sets the shim of Shrink.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Shrink.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of Shrink.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances.ColorToRemoveGet">
            <summary>Sets the shim of Shrink.get_ColorToRemove()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances.ColorToRemoveSetColor">
            <summary>Sets the shim of Shrink.set_ColorToRemove(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Shrink.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimShrink.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Shrink.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSierraDithering">
            <summary>Shim type of AForge.Imaging.Filters.SierraDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.#ctor(AForge.Imaging.Filters.SierraDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSierraDithering.Constructor">
            <summary>Sets the shim of SierraDithering.SierraDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSierraDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimplePosterization">
            <summary>Shim type of AForge.Imaging.Filters.SimplePosterization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.#ctor(AForge.Imaging.Filters.SimplePosterization)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.Constructor">
            <summary>Sets the shim of SimplePosterization.SimplePosterization()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.ConstructorSimplePosterizationPosterizationFillingType">
            <summary>Sets the shim of SimplePosterization.SimplePosterization(PosterizationFillingType fillingType)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.FillingTypeGet">
            <summary>Sets the shim of SimplePosterization.get_FillingType()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.FillingTypeSetSimplePosterizationPosterizationFillingType">
            <summary>Sets the shim of SimplePosterization.set_FillingType(PosterizationFillingType value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.FormatTranslationsGet">
            <summary>Sets the shim of SimplePosterization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.PosterizationIntervalGet">
            <summary>Sets the shim of SimplePosterization.get_PosterizationInterval()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.PosterizationIntervalSetByte">
            <summary>Sets the shim of SimplePosterization.set_PosterizationInterval(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SimplePosterization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.FillingTypeGet">
            <summary>Sets the shim of SimplePosterization.get_FillingType()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.FillingTypeSetSimplePosterizationPosterizationFillingType">
            <summary>Sets the shim of SimplePosterization.set_FillingType(PosterizationFillingType value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SimplePosterization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.PosterizationIntervalGet">
            <summary>Sets the shim of SimplePosterization.get_PosterizationInterval()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.PosterizationIntervalSetByte">
            <summary>Sets the shim of SimplePosterization.set_PosterizationInterval(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimplePosterization.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of SimplePosterization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation">
            <summary>Shim type of AForge.Imaging.Filters.SimpleQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.#ctor(AForge.Imaging.Filters.SimpleQuadrilateralTransformation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AutomaticSizeCalculatonGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_AutomaticSizeCalculaton()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AutomaticSizeCalculatonSetBoolean">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_AutomaticSizeCalculaton(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.CalculateDestinationSize">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.CalculateDestinationSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.Constructor">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.SimpleQuadrilateralTransformation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.ConstructorListOfIntPoint">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.SimpleQuadrilateralTransformation(List`1&lt;IntPoint&gt; sourceQuadrilateral)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.ConstructorListOfIntPointInt32Int32">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.SimpleQuadrilateralTransformation(List`1&lt;IntPoint&gt; sourceQuadrilateral, Int32 newWidth, Int32 newHeight)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.NewHeightGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.NewHeightSetInt32">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.NewWidthGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.NewWidthSetInt32">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.SourceQuadrilateralGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_SourceQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.SourceQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_SourceQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.UseInterpolationGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.UseInterpolationSetBoolean">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.AutomaticSizeCalculatonGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_AutomaticSizeCalculaton()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.AutomaticSizeCalculatonSetBoolean">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_AutomaticSizeCalculaton(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.CalculateDestinationSize">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.CalculateDestinationSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.NewHeightGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_NewHeight()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.NewHeightSetInt32">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_NewHeight(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.NewWidthGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_NewWidth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.NewWidthSetInt32">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_NewWidth(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.SourceQuadrilateralGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_SourceQuadrilateral()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.SourceQuadrilateralSetListOfIntPoint">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_SourceQuadrilateral(List`1&lt;IntPoint&gt; value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.UseInterpolationGet">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.get_UseInterpolation()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleQuadrilateralTransformation.AllInstances.UseInterpolationSetBoolean">
            <summary>Sets the shim of SimpleQuadrilateralTransformation.set_UseInterpolation(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization">
            <summary>Shim type of AForge.Imaging.Filters.SimpleSkeletonization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.#ctor(AForge.Imaging.Filters.SimpleSkeletonization)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.BackgroundGet">
            <summary>Sets the shim of SimpleSkeletonization.get_Background()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.BackgroundSetByte">
            <summary>Sets the shim of SimpleSkeletonization.set_Background(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.Constructor">
            <summary>Sets the shim of SimpleSkeletonization.SimpleSkeletonization()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.ConstructorByteByte">
            <summary>Sets the shim of SimpleSkeletonization.SimpleSkeletonization(Byte bg, Byte fg)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.ForegroundGet">
            <summary>Sets the shim of SimpleSkeletonization.get_Foreground()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.ForegroundSetByte">
            <summary>Sets the shim of SimpleSkeletonization.set_Foreground(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.FormatTranslationsGet">
            <summary>Sets the shim of SimpleSkeletonization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of SimpleSkeletonization.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.BackgroundGet">
            <summary>Sets the shim of SimpleSkeletonization.get_Background()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.BackgroundSetByte">
            <summary>Sets the shim of SimpleSkeletonization.set_Background(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.ForegroundGet">
            <summary>Sets the shim of SimpleSkeletonization.get_Foreground()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.ForegroundSetByte">
            <summary>Sets the shim of SimpleSkeletonization.set_Foreground(Byte value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SimpleSkeletonization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSimpleSkeletonization.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of SimpleSkeletonization.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector">
            <summary>Shim type of AForge.Imaging.Filters.SobelEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.#ctor(AForge.Imaging.Filters.SobelEdgeDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.Constructor">
            <summary>Sets the shim of SobelEdgeDetector.SobelEdgeDetector()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.FormatTranslationsGet">
            <summary>Sets the shim of SobelEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of SobelEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.ScaleIntensityGet">
            <summary>Sets the shim of SobelEdgeDetector.get_ScaleIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.ScaleIntensitySetBoolean">
            <summary>Sets the shim of SobelEdgeDetector.set_ScaleIntensity(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of SobelEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the shim of SobelEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.AllInstances.ScaleIntensityGet">
            <summary>Sets the shim of SobelEdgeDetector.get_ScaleIntensity()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSobelEdgeDetector.AllInstances.ScaleIntensitySetBoolean">
            <summary>Sets the shim of SobelEdgeDetector.set_ScaleIntensity(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph">
            <summary>Shim type of AForge.Imaging.Filters.StereoAnaglyph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.#ctor(AForge.Imaging.Filters.StereoAnaglyph)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AnaglyphAlgorithmGet">
            <summary>Sets the shim of StereoAnaglyph.get_AnaglyphAlgorithm()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AnaglyphAlgorithmSetStereoAnaglyphAlgorithm">
            <summary>Sets the shim of StereoAnaglyph.set_AnaglyphAlgorithm(Algorithm value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.Constructor">
            <summary>Sets the shim of StereoAnaglyph.StereoAnaglyph()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.ConstructorStereoAnaglyphAlgorithm">
            <summary>Sets the shim of StereoAnaglyph.StereoAnaglyph(Algorithm anaglyphAlgorithm)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.FormatTranslationsGet">
            <summary>Sets the shim of StereoAnaglyph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of StereoAnaglyph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AllInstances.AnaglyphAlgorithmGet">
            <summary>Sets the shim of StereoAnaglyph.get_AnaglyphAlgorithm()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AllInstances.AnaglyphAlgorithmSetStereoAnaglyphAlgorithm">
            <summary>Sets the shim of StereoAnaglyph.set_AnaglyphAlgorithm(Algorithm value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of StereoAnaglyph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStereoAnaglyph.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of StereoAnaglyph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimStuckiDithering">
            <summary>Shim type of AForge.Imaging.Filters.StuckiDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.#ctor(AForge.Imaging.Filters.StuckiDithering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.Constructor">
            <summary>Sets the shim of StuckiDithering.StuckiDithering()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimStuckiDithering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSubtract">
            <summary>Shim type of AForge.Imaging.Filters.Subtract</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.#ctor(AForge.Imaging.Filters.Subtract)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimSubtract.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.Constructor">
            <summary>Sets the shim of Subtract.Subtract()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.ConstructorBitmap">
            <summary>Sets the shim of Subtract.Subtract(Bitmap overlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.ConstructorUnmanagedImage">
            <summary>Sets the shim of Subtract.Subtract(UnmanagedImage unmanagedOverlayImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.FormatTranslationsGet">
            <summary>Sets the shim of Subtract.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.InitFormatTranslations">
            <summary>Sets the shim of Subtract.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Subtract.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimSubtract.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Subtract.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.AllInstances.InitFormatTranslations">
            <summary>Sets the shim of Subtract.InitFormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimSubtract.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of Subtract.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturedFilter">
            <summary>Shim type of AForge.Imaging.Filters.TexturedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.#ctor(AForge.Imaging.Filters.TexturedFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Constructor">
            <summary>Sets the shim of TexturedFilter.TexturedFilter()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.ConstructorITextureGeneratorIFilter">
            <summary>Sets the shim of TexturedFilter.TexturedFilter(ITextureGenerator generator, IFilter filter1)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.ConstructorITextureGeneratorIFilterIFilter">
            <summary>Sets the shim of TexturedFilter.TexturedFilter(ITextureGenerator generator, IFilter filter1, IFilter filter2)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.ConstructorSingleMdArray2IFilter">
            <summary>Sets the shim of TexturedFilter.TexturedFilter(Single[,] texture, IFilter filter1)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.ConstructorSingleMdArray2IFilterIFilter">
            <summary>Sets the shim of TexturedFilter.TexturedFilter(Single[,] texture, IFilter filter1, IFilter filter2)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Filter1Get">
            <summary>Sets the shim of TexturedFilter.get_Filter1()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Filter1SetIFilter">
            <summary>Sets the shim of TexturedFilter.set_Filter1(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Filter2Get">
            <summary>Sets the shim of TexturedFilter.get_Filter2()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.Filter2SetIFilter">
            <summary>Sets the shim of TexturedFilter.set_Filter2(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.FilterLevelGet">
            <summary>Sets the shim of TexturedFilter.get_FilterLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.FilterLevelSetDouble">
            <summary>Sets the shim of TexturedFilter.set_FilterLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.FormatTranslationsGet">
            <summary>Sets the shim of TexturedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.PreserveLevelGet">
            <summary>Sets the shim of TexturedFilter.get_PreserveLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.PreserveLevelSetDouble">
            <summary>Sets the shim of TexturedFilter.set_PreserveLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TexturedFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.TextureGeneratorGet">
            <summary>Sets the shim of TexturedFilter.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of TexturedFilter.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.TextureGet">
            <summary>Sets the shim of TexturedFilter.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.TextureSetSingleMdArray2">
            <summary>Sets the shim of TexturedFilter.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.Filter1Get">
            <summary>Sets the shim of TexturedFilter.get_Filter1()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.Filter1SetIFilter">
            <summary>Sets the shim of TexturedFilter.set_Filter1(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.Filter2Get">
            <summary>Sets the shim of TexturedFilter.get_Filter2()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.Filter2SetIFilter">
            <summary>Sets the shim of TexturedFilter.set_Filter2(IFilter value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.FilterLevelGet">
            <summary>Sets the shim of TexturedFilter.get_FilterLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.FilterLevelSetDouble">
            <summary>Sets the shim of TexturedFilter.set_FilterLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of TexturedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.PreserveLevelGet">
            <summary>Sets the shim of TexturedFilter.get_PreserveLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.PreserveLevelSetDouble">
            <summary>Sets the shim of TexturedFilter.set_PreserveLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TexturedFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.TextureGeneratorGet">
            <summary>Sets the shim of TexturedFilter.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of TexturedFilter.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.TextureGet">
            <summary>Sets the shim of TexturedFilter.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedFilter.AllInstances.TextureSetSingleMdArray2">
            <summary>Sets the shim of TexturedFilter.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturedMerge">
            <summary>Shim type of AForge.Imaging.Filters.TexturedMerge</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.#ctor(AForge.Imaging.Filters.TexturedMerge)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.Constructor">
            <summary>Sets the shim of TexturedMerge.TexturedMerge()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.ConstructorITextureGenerator">
            <summary>Sets the shim of TexturedMerge.TexturedMerge(ITextureGenerator generator)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.ConstructorSingleMdArray2">
            <summary>Sets the shim of TexturedMerge.TexturedMerge(Single[,] texture)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.FormatTranslationsGet">
            <summary>Sets the shim of TexturedMerge.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TexturedMerge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.TextureGeneratorGet">
            <summary>Sets the shim of TexturedMerge.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of TexturedMerge.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.TextureGet">
            <summary>Sets the shim of TexturedMerge.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.TextureSetSingleMdArray2">
            <summary>Sets the shim of TexturedMerge.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of TexturedMerge.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TexturedMerge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.TextureGeneratorGet">
            <summary>Sets the shim of TexturedMerge.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of TexturedMerge.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.TextureGet">
            <summary>Sets the shim of TexturedMerge.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturedMerge.AllInstances.TextureSetSingleMdArray2">
            <summary>Sets the shim of TexturedMerge.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturer">
            <summary>Shim type of AForge.Imaging.Filters.Texturer</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.#ctor(AForge.Imaging.Filters.Texturer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTexturer.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.Constructor">
            <summary>Sets the shim of Texturer.Texturer()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.ConstructorITextureGenerator">
            <summary>Sets the shim of Texturer.Texturer(ITextureGenerator generator)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.ConstructorITextureGeneratorDoubleDouble">
            <summary>Sets the shim of Texturer.Texturer(ITextureGenerator generator, Double filterLevel, Double preserveLevel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.ConstructorSingleMdArray2">
            <summary>Sets the shim of Texturer.Texturer(Single[,] texture)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.ConstructorSingleMdArray2DoubleDouble">
            <summary>Sets the shim of Texturer.Texturer(Single[,] texture, Double filterLevel, Double preserveLevel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.FilterLevelGet">
            <summary>Sets the shim of Texturer.get_FilterLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.FilterLevelSetDouble">
            <summary>Sets the shim of Texturer.set_FilterLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.FormatTranslationsGet">
            <summary>Sets the shim of Texturer.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.PreserveLevelGet">
            <summary>Sets the shim of Texturer.get_PreserveLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.PreserveLevelSetDouble">
            <summary>Sets the shim of Texturer.set_PreserveLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Texturer.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.TextureGeneratorGet">
            <summary>Sets the shim of Texturer.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of Texturer.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.TextureGet">
            <summary>Sets the shim of Texturer.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.TextureSetSingleMdArray2">
            <summary>Sets the shim of Texturer.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.FilterLevelGet">
            <summary>Sets the shim of Texturer.get_FilterLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.FilterLevelSetDouble">
            <summary>Sets the shim of Texturer.set_FilterLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Texturer.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.PreserveLevelGet">
            <summary>Sets the shim of Texturer.get_PreserveLevel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.PreserveLevelSetDouble">
            <summary>Sets the shim of Texturer.set_PreserveLevel(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Texturer.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.TextureGeneratorGet">
            <summary>Sets the shim of Texturer.get_TextureGenerator()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.TextureGeneratorSetITextureGenerator">
            <summary>Sets the shim of Texturer.set_TextureGenerator(ITextureGenerator value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.TextureGet">
            <summary>Sets the shim of Texturer.get_Texture()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTexturer.AllInstances.TextureSetSingleMdArray2">
            <summary>Sets the shim of Texturer.set_Texture(Single[,] value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThreshold">
            <summary>Shim type of AForge.Imaging.Filters.Threshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.#ctor(AForge.Imaging.Filters.Threshold)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThreshold.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.Constructor">
            <summary>Sets the shim of Threshold.Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.ConstructorInt32">
            <summary>Sets the shim of Threshold.Threshold(Int32 threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.FormatTranslationsGet">
            <summary>Sets the shim of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Threshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.ThresholdValueGet">
            <summary>Sets the shim of Threshold.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.ThresholdValueSetInt32">
            <summary>Sets the shim of Threshold.set_ThresholdValue(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThreshold.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of Threshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.AllInstances.ThresholdValueGet">
            <summary>Sets the shim of Threshold.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThreshold.AllInstances.ThresholdValueSetInt32">
            <summary>Sets the shim of Threshold.set_ThresholdValue(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry">
            <summary>Shim type of AForge.Imaging.Filters.ThresholdWithCarry</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.#ctor(AForge.Imaging.Filters.ThresholdWithCarry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.Constructor">
            <summary>Sets the shim of ThresholdWithCarry.ThresholdWithCarry()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.ConstructorByte">
            <summary>Sets the shim of ThresholdWithCarry.ThresholdWithCarry(Byte threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdWithCarry.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ThresholdWithCarry.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.ThresholdValueGet">
            <summary>Sets the shim of ThresholdWithCarry.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.ThresholdValueSetByte">
            <summary>Sets the shim of ThresholdWithCarry.set_ThresholdValue(Byte value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdWithCarry.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of ThresholdWithCarry.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.AllInstances.ThresholdValueGet">
            <summary>Sets the shim of ThresholdWithCarry.get_ThresholdValue()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdWithCarry.AllInstances.ThresholdValueSetByte">
            <summary>Sets the shim of ThresholdWithCarry.set_ThresholdValue(Byte value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference">
            <summary>Shim type of AForge.Imaging.Filters.ThresholdedDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.#ctor(AForge.Imaging.Filters.ThresholdedDifference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.Constructor">
            <summary>Sets the shim of ThresholdedDifference.ThresholdedDifference()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.ConstructorInt32">
            <summary>Sets the shim of ThresholdedDifference.ThresholdedDifference(Int32 threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdedDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ThresholdedDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.ThresholdGet">
            <summary>Sets the shim of ThresholdedDifference.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.ThresholdSetInt32">
            <summary>Sets the shim of ThresholdedDifference.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.WhitePixelsCountGet">
            <summary>Sets the shim of ThresholdedDifference.get_WhitePixelsCount()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdedDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ThresholdedDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances.ThresholdGet">
            <summary>Sets the shim of ThresholdedDifference.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances.ThresholdSetInt32">
            <summary>Sets the shim of ThresholdedDifference.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedDifference.AllInstances.WhitePixelsCountGet">
            <summary>Sets the shim of ThresholdedDifference.get_WhitePixelsCount()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference">
            <summary>Shim type of AForge.Imaging.Filters.ThresholdedEuclideanDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.#ctor(AForge.Imaging.Filters.ThresholdedEuclideanDifference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.Constructor">
            <summary>Sets the shim of ThresholdedEuclideanDifference.ThresholdedEuclideanDifference()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.ConstructorInt32">
            <summary>Sets the shim of ThresholdedEuclideanDifference.ThresholdedEuclideanDifference(Int32 threshold)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ThresholdedEuclideanDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.ThresholdGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.ThresholdSetInt32">
            <summary>Sets the shim of ThresholdedEuclideanDifference.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.WhitePixelsCountGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_WhitePixelsCount()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of ThresholdedEuclideanDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances.ThresholdGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_Threshold()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances.ThresholdSetInt32">
            <summary>Sets the shim of ThresholdedEuclideanDifference.set_Threshold(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimThresholdedEuclideanDifference.AllInstances.WhitePixelsCountGet">
            <summary>Sets the shim of ThresholdedEuclideanDifference.get_WhitePixelsCount()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTopHat">
            <summary>Shim type of AForge.Imaging.Filters.TopHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.#ctor(AForge.Imaging.Filters.TopHat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTopHat.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.Constructor">
            <summary>Sets the shim of TopHat.TopHat()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.ConstructorInt16MdArray2">
            <summary>Sets the shim of TopHat.TopHat(Int16[,] se)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.FormatTranslationsGet">
            <summary>Sets the shim of TopHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of TopHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTopHat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of TopHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTopHat.AllInstances.ProcessFilterUnmanagedImage">
            <summary>Sets the shim of TopHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar">
            <summary>Shim type of AForge.Imaging.Filters.TransformFromPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.#ctor(AForge.Imaging.Filters.TransformFromPolar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of TransformFromPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.CirlceDepthGet">
            <summary>Sets the shim of TransformFromPolar.get_CirlceDepth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.CirlceDepthSetDouble">
            <summary>Sets the shim of TransformFromPolar.set_CirlceDepth(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.Constructor">
            <summary>Sets the shim of TransformFromPolar.TransformFromPolar()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.FormatTranslationsGet">
            <summary>Sets the shim of TransformFromPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.MapBackwardsGet">
            <summary>Sets the shim of TransformFromPolar.get_MapBackwards()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.MapBackwardsSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_MapBackwards(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.MapFromTopGet">
            <summary>Sets the shim of TransformFromPolar.get_MapFromTop()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.MapFromTopSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_MapFromTop(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.NewSizeGet">
            <summary>Sets the shim of TransformFromPolar.get_NewSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.NewSizeSetSize">
            <summary>Sets the shim of TransformFromPolar.set_NewSize(Size value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.OffsetAngleGet">
            <summary>Sets the shim of TransformFromPolar.get_OffsetAngle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.OffsetAngleSetDouble">
            <summary>Sets the shim of TransformFromPolar.set_OffsetAngle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TransformFromPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.UseOriginalImageSizeGet">
            <summary>Sets the shim of TransformFromPolar.get_UseOriginalImageSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.UseOriginalImageSizeSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_UseOriginalImageSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of TransformFromPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.CirlceDepthGet">
            <summary>Sets the shim of TransformFromPolar.get_CirlceDepth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.CirlceDepthSetDouble">
            <summary>Sets the shim of TransformFromPolar.set_CirlceDepth(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of TransformFromPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.MapBackwardsGet">
            <summary>Sets the shim of TransformFromPolar.get_MapBackwards()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.MapBackwardsSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_MapBackwards(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.MapFromTopGet">
            <summary>Sets the shim of TransformFromPolar.get_MapFromTop()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.MapFromTopSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_MapFromTop(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.NewSizeGet">
            <summary>Sets the shim of TransformFromPolar.get_NewSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.NewSizeSetSize">
            <summary>Sets the shim of TransformFromPolar.set_NewSize(Size value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.OffsetAngleGet">
            <summary>Sets the shim of TransformFromPolar.get_OffsetAngle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.OffsetAngleSetDouble">
            <summary>Sets the shim of TransformFromPolar.set_OffsetAngle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TransformFromPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.UseOriginalImageSizeGet">
            <summary>Sets the shim of TransformFromPolar.get_UseOriginalImageSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformFromPolar.AllInstances.UseOriginalImageSizeSetBoolean">
            <summary>Sets the shim of TransformFromPolar.set_UseOriginalImageSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTransformToPolar">
            <summary>Shim type of AForge.Imaging.Filters.TransformToPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.#ctor(AForge.Imaging.Filters.TransformToPolar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of TransformToPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.CirlceDepthGet">
            <summary>Sets the shim of TransformToPolar.get_CirlceDepth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.CirlceDepthSetDouble">
            <summary>Sets the shim of TransformToPolar.set_CirlceDepth(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.Constructor">
            <summary>Sets the shim of TransformToPolar.TransformToPolar()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.FillColorGet">
            <summary>Sets the shim of TransformToPolar.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.FillColorSetColor">
            <summary>Sets the shim of TransformToPolar.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.FormatTranslationsGet">
            <summary>Sets the shim of TransformToPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.MapBackwardsGet">
            <summary>Sets the shim of TransformToPolar.get_MapBackwards()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.MapBackwardsSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_MapBackwards(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.MapFromTopGet">
            <summary>Sets the shim of TransformToPolar.get_MapFromTop()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.MapFromTopSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_MapFromTop(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.NewSizeGet">
            <summary>Sets the shim of TransformToPolar.get_NewSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.NewSizeSetSize">
            <summary>Sets the shim of TransformToPolar.set_NewSize(Size value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.OffsetAngleGet">
            <summary>Sets the shim of TransformToPolar.get_OffsetAngle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.OffsetAngleSetDouble">
            <summary>Sets the shim of TransformToPolar.set_OffsetAngle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TransformToPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.UseOriginalImageSizeGet">
            <summary>Sets the shim of TransformToPolar.get_UseOriginalImageSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.UseOriginalImageSizeSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_UseOriginalImageSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the shim of TransformToPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.CirlceDepthGet">
            <summary>Sets the shim of TransformToPolar.get_CirlceDepth()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.CirlceDepthSetDouble">
            <summary>Sets the shim of TransformToPolar.set_CirlceDepth(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.FillColorGet">
            <summary>Sets the shim of TransformToPolar.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.FillColorSetColor">
            <summary>Sets the shim of TransformToPolar.set_FillColor(Color value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of TransformToPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.MapBackwardsGet">
            <summary>Sets the shim of TransformToPolar.get_MapBackwards()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.MapBackwardsSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_MapBackwards(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.MapFromTopGet">
            <summary>Sets the shim of TransformToPolar.get_MapFromTop()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.MapFromTopSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_MapFromTop(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.NewSizeGet">
            <summary>Sets the shim of TransformToPolar.get_NewSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.NewSizeSetSize">
            <summary>Sets the shim of TransformToPolar.set_NewSize(Size value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.OffsetAngleGet">
            <summary>Sets the shim of TransformToPolar.get_OffsetAngle()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.OffsetAngleSetDouble">
            <summary>Sets the shim of TransformToPolar.set_OffsetAngle(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of TransformToPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.UseOriginalImageSizeGet">
            <summary>Sets the shim of TransformToPolar.get_UseOriginalImageSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimTransformToPolar.AllInstances.UseOriginalImageSizeSetBoolean">
            <summary>Sets the shim of TransformToPolar.set_UseOriginalImageSize(Boolean value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing">
            <summary>Shim type of AForge.Imaging.Filters.VerticalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.#ctor(AForge.Imaging.Filters.VerticalRunLengthSmoothing)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.Constructor">
            <summary>Sets the shim of VerticalRunLengthSmoothing.VerticalRunLengthSmoothing()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.ConstructorInt32">
            <summary>Sets the shim of VerticalRunLengthSmoothing.VerticalRunLengthSmoothing(Int32 maxGapSize)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.FormatTranslationsGet">
            <summary>Sets the shim of VerticalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.MaxGapSizeGet">
            <summary>Sets the shim of VerticalRunLengthSmoothing.get_MaxGapSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.MaxGapSizeSetInt32">
            <summary>Sets the shim of VerticalRunLengthSmoothing.set_MaxGapSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of VerticalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of VerticalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.AllInstances.MaxGapSizeGet">
            <summary>Sets the shim of VerticalRunLengthSmoothing.get_MaxGapSize()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.AllInstances.MaxGapSizeSetInt32">
            <summary>Sets the shim of VerticalRunLengthSmoothing.set_MaxGapSize(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimVerticalRunLengthSmoothing.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of VerticalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimWaterWave">
            <summary>Shim type of AForge.Imaging.Filters.WaterWave</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.#ctor(AForge.Imaging.Filters.WaterWave)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimWaterWave.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.Constructor">
            <summary>Sets the shim of WaterWave.WaterWave()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.FormatTranslationsGet">
            <summary>Sets the shim of WaterWave.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.HorizontalWavesAmplitudeGet">
            <summary>Sets the shim of WaterWave.get_HorizontalWavesAmplitude()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.HorizontalWavesAmplitudeSetInt32">
            <summary>Sets the shim of WaterWave.set_HorizontalWavesAmplitude(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.HorizontalWavesCountGet">
            <summary>Sets the shim of WaterWave.get_HorizontalWavesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.HorizontalWavesCountSetInt32">
            <summary>Sets the shim of WaterWave.set_HorizontalWavesCount(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of WaterWave.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.VerticalWavesAmplitudeGet">
            <summary>Sets the shim of WaterWave.get_VerticalWavesAmplitude()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.VerticalWavesAmplitudeSetInt32">
            <summary>Sets the shim of WaterWave.set_VerticalWavesAmplitude(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.VerticalWavesCountGet">
            <summary>Sets the shim of WaterWave.get_VerticalWavesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.VerticalWavesCountSetInt32">
            <summary>Sets the shim of WaterWave.set_VerticalWavesCount(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of WaterWave.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.HorizontalWavesAmplitudeGet">
            <summary>Sets the shim of WaterWave.get_HorizontalWavesAmplitude()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.HorizontalWavesAmplitudeSetInt32">
            <summary>Sets the shim of WaterWave.set_HorizontalWavesAmplitude(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.HorizontalWavesCountGet">
            <summary>Sets the shim of WaterWave.get_HorizontalWavesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.HorizontalWavesCountSetInt32">
            <summary>Sets the shim of WaterWave.set_HorizontalWavesCount(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of WaterWave.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.VerticalWavesAmplitudeGet">
            <summary>Sets the shim of WaterWave.get_VerticalWavesAmplitude()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.VerticalWavesAmplitudeSetInt32">
            <summary>Sets the shim of WaterWave.set_VerticalWavesAmplitude(Int32 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.VerticalWavesCountGet">
            <summary>Sets the shim of WaterWave.get_VerticalWavesCount()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimWaterWave.AllInstances.VerticalWavesCountSetInt32">
            <summary>Sets the shim of WaterWave.set_VerticalWavesCount(Int32 value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel">
            <summary>Shim type of AForge.Imaging.Filters.YCbCrExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.#ctor(AForge.Imaging.Filters.YCbCrExtractChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.ChannelGet">
            <summary>Sets the shim of YCbCrExtractChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.ChannelSetInt16">
            <summary>Sets the shim of YCbCrExtractChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.Constructor">
            <summary>Sets the shim of YCbCrExtractChannel.YCbCrExtractChannel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.ConstructorInt16">
            <summary>Sets the shim of YCbCrExtractChannel.YCbCrExtractChannel(Int16 channel)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of YCbCrExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.AllInstances.ChannelGet">
            <summary>Sets the shim of YCbCrExtractChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.AllInstances.ChannelSetInt16">
            <summary>Sets the shim of YCbCrExtractChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrExtractChannel.AllInstances.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the shim of YCbCrExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering">
            <summary>Shim type of AForge.Imaging.Filters.YCbCrFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.#ctor(AForge.Imaging.Filters.YCbCrFiltering)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.CbGet">
            <summary>Sets the shim of YCbCrFiltering.get_Cb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.CbSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Cb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.Constructor">
            <summary>Sets the shim of YCbCrFiltering.YCbCrFiltering()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.ConstructorRangeRangeRange">
            <summary>Sets the shim of YCbCrFiltering.YCbCrFiltering(Range yRange, Range cbRange, Range crRange)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.CrGet">
            <summary>Sets the shim of YCbCrFiltering.get_Cr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.CrSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Cr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.FillColorGet">
            <summary>Sets the shim of YCbCrFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.FillColorSetYCbCr">
            <summary>Sets the shim of YCbCrFiltering.set_FillColor(YCbCr value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.FillOutsideRangeGet">
            <summary>Sets the shim of YCbCrFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateCbGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateCbSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateCb(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateCrGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateCrSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateCr(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateYGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.UpdateYSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateY(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.YGet">
            <summary>Sets the shim of YCbCrFiltering.get_Y()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.YSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Y(Range value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.CbGet">
            <summary>Sets the shim of YCbCrFiltering.get_Cb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.CbSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Cb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.CrGet">
            <summary>Sets the shim of YCbCrFiltering.get_Cr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.CrSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Cr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.FillColorGet">
            <summary>Sets the shim of YCbCrFiltering.get_FillColor()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.FillColorSetYCbCr">
            <summary>Sets the shim of YCbCrFiltering.set_FillColor(YCbCr value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.FillOutsideRangeGet">
            <summary>Sets the shim of YCbCrFiltering.get_FillOutsideRange()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.FillOutsideRangeSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_FillOutsideRange(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateCbGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateCbSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateCb(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateCrGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateCrSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateCr(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateYGet">
            <summary>Sets the shim of YCbCrFiltering.get_UpdateY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.UpdateYSetBoolean">
            <summary>Sets the shim of YCbCrFiltering.set_UpdateY(Boolean value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.YGet">
            <summary>Sets the shim of YCbCrFiltering.get_Y()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrFiltering.AllInstances.YSetRange">
            <summary>Sets the shim of YCbCrFiltering.set_Y(Range value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear">
            <summary>Shim type of AForge.Imaging.Filters.YCbCrLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.#ctor(AForge.Imaging.Filters.YCbCrLinear)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.Constructor">
            <summary>Sets the shim of YCbCrLinear.YCbCrLinear()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InCbGet">
            <summary>Sets the shim of YCbCrLinear.get_InCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InCbSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InCb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InCrGet">
            <summary>Sets the shim of YCbCrLinear.get_InCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InCrSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InCr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InYGet">
            <summary>Sets the shim of YCbCrLinear.get_InY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.InYSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InY(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutCbGet">
            <summary>Sets the shim of YCbCrLinear.get_OutCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutCbSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutCb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutCrGet">
            <summary>Sets the shim of YCbCrLinear.get_OutCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutCrSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutCr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutYGet">
            <summary>Sets the shim of YCbCrLinear.get_OutY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.OutYSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutY(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InCbGet">
            <summary>Sets the shim of YCbCrLinear.get_InCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InCbSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InCb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InCrGet">
            <summary>Sets the shim of YCbCrLinear.get_InCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InCrSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InCr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InYGet">
            <summary>Sets the shim of YCbCrLinear.get_InY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.InYSetRange">
            <summary>Sets the shim of YCbCrLinear.set_InY(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutCbGet">
            <summary>Sets the shim of YCbCrLinear.get_OutCb()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutCbSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutCb(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutCrGet">
            <summary>Sets the shim of YCbCrLinear.get_OutCr()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutCrSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutCr(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutYGet">
            <summary>Sets the shim of YCbCrLinear.get_OutY()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.OutYSetRange">
            <summary>Sets the shim of YCbCrLinear.set_OutY(Range value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrLinear.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel">
            <summary>Shim type of AForge.Imaging.Filters.YCbCrReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.#ctor(AForge.Imaging.Filters.YCbCrReplaceChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Bind(AForge.Imaging.Filters.IFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Bind(AForge.Imaging.Filters.IFilterInformation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Bind(AForge.Imaging.Filters.IInPlaceFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Bind(AForge.Imaging.Filters.IInPlacePartialFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ChannelGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ChannelImageGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_ChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ChannelImageSetBitmap">
            <summary>Sets the shim of YCbCrReplaceChannel.set_ChannelImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ChannelSetInt16">
            <summary>Sets the shim of YCbCrReplaceChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.Constructor">
            <summary>Sets the shim of YCbCrReplaceChannel.YCbCrReplaceChannel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ConstructorInt16Bitmap">
            <summary>Sets the shim of YCbCrReplaceChannel.YCbCrReplaceChannel(Int16 channel, Bitmap channelImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ConstructorInt16UnmanagedImage">
            <summary>Sets the shim of YCbCrReplaceChannel.YCbCrReplaceChannel(Int16 channel, UnmanagedImage channelImage)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.UnmanagedChannelImageGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_UnmanagedChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.UnmanagedChannelImageSetUnmanagedImage">
            <summary>Sets the shim of YCbCrReplaceChannel.set_UnmanagedChannelImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.ChannelGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_Channel()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.ChannelImageGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_ChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.ChannelImageSetBitmap">
            <summary>Sets the shim of YCbCrReplaceChannel.set_ChannelImage(Bitmap value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.ChannelSetInt16">
            <summary>Sets the shim of YCbCrReplaceChannel.set_Channel(Int16 value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.FormatTranslationsGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the shim of YCbCrReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.UnmanagedChannelImageGet">
            <summary>Sets the shim of YCbCrReplaceChannel.get_UnmanagedChannelImage()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.ShimYCbCrReplaceChannel.AllInstances.UnmanagedChannelImageSetUnmanagedImage">
            <summary>Sets the shim of YCbCrReplaceChannel.set_UnmanagedChannelImage(UnmanagedImage value)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing">
            <summary>Stub type of AForge.Imaging.Filters.AdaptiveSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.FormatTranslationsGet">
            <summary>Sets the stub of AdaptiveSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.InitializeStub">
            <summary>Initializes a new instance of type StubAdaptiveSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of AdaptiveSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of AdaptiveSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.FormatTranslations">
            <summary>Sets the stub of AdaptiveSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdaptiveSmoothing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubAdditiveNoise">
            <summary>Stub type of AForge.Imaging.Filters.AdditiveNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.#ctor(AForge.Math.Random.IRandomNumberGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.FormatTranslationsGet">
            <summary>Sets the stub of AdditiveNoise.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.InitializeStub">
            <summary>Initializes a new instance of type StubAdditiveNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of AdditiveNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of AdditiveNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.FormatTranslations">
            <summary>Sets the stub of AdditiveNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubAdditiveNoise.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubApplyMask">
            <summary>Stub type of AForge.Imaging.Filters.ApplyMask</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubApplyMask.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubApplyMask.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubApplyMask.#ctor(System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubApplyMask.FormatTranslationsGet">
            <summary>Sets the stub of ApplyMask.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubApplyMask.InitializeStub">
            <summary>Initializes a new instance of type StubApplyMask</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubApplyMask.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ApplyMask.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubApplyMask.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ApplyMask.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubApplyMask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubApplyMask.FormatTranslations">
            <summary>Sets the stub of ApplyMask.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubApplyMask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubApplyMask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation">
            <summary>Stub type of AForge.Imaging.Filters.BackwardQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.#ctor(AForge.Imaging.UnmanagedImage,System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.#ctor(System.Drawing.Bitmap,System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the stub of BackwardQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.InitializeStub">
            <summary>Initializes a new instance of type StubBackwardQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BackwardQuadrilateralTransformation.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.FormatTranslations">
            <summary>Sets the stub of BackwardQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBackwardQuadrilateralTransformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter.FormatTranslations">
            <summary>Sets the stub of BaseFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseFilter2">
            <summary>Stub type of AForge.Imaging.Filters.BaseFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseFilter2.FormatTranslationsGet">
            <summary>Sets the stub of BaseFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.InitializeStub">
            <summary>Initializes a new instance of type StubBaseFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseFilter2.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseFilter2.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseFilter2.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter2.FormatTranslations">
            <summary>Sets the stub of BaseFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseFilter2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseInPlaceFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseInPlaceFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseInPlaceFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.FormatTranslations">
            <summary>Sets the stub of BaseInPlaceFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2">
            <summary>Stub type of AForge.Imaging.Filters.BaseInPlaceFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.FormatTranslationsGet">
            <summary>Sets the stub of BaseInPlaceFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.InitializeStub">
            <summary>Initializes a new instance of type StubBaseInPlaceFilter2</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.FormatTranslations">
            <summary>Sets the stub of BaseInPlaceFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlaceFilter2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseInPlacePartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseInPlacePartialFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseInPlacePartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BaseInPlacePartialFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of BaseInPlacePartialFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.FormatTranslations">
            <summary>Sets the stub of BaseInPlacePartialFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseInPlacePartialFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseResizeFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseResizeFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.FormatTranslations">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseResizeFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseRotateFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.#ctor(System.Double,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseRotateFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.FormatTranslations">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseRotateFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseTransformationFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseTransformationFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseTransformationFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseTransformationFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseTransformationFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.FormatTranslations">
            <summary>Sets the stub of BaseTransformationFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseTransformationFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter">
            <summary>Stub type of AForge.Imaging.Filters.BaseUsingCopyPartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.FormatTranslationsGet">
            <summary>Sets the stub of BaseUsingCopyPartialFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBaseUsingCopyPartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BaseUsingCopyPartialFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of BaseUsingCopyPartialFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.FormatTranslations">
            <summary>Sets the stub of BaseUsingCopyPartialFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBaseUsingCopyPartialFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBayerFilter">
            <summary>Stub type of AForge.Imaging.Filters.BayerFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBayerFilter.FormatTranslationsGet">
            <summary>Sets the stub of BayerFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilter.InitializeStub">
            <summary>Initializes a new instance of type StubBayerFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BayerFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBayerFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BayerFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilter.FormatTranslations">
            <summary>Sets the stub of BayerFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized">
            <summary>Stub type of AForge.Imaging.Filters.BayerFilterOptimized</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.FormatTranslationsGet">
            <summary>Sets the stub of BayerFilterOptimized.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.InitializeStub">
            <summary>Initializes a new instance of type StubBayerFilterOptimized</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BayerFilterOptimized.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BayerFilterOptimized.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.FormatTranslations">
            <summary>Sets the stub of BayerFilterOptimized.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBayerFilterOptimized.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing">
            <summary>Stub type of AForge.Imaging.Filters.BilateralSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.FormatTranslationsGet">
            <summary>Sets the stub of BilateralSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.InitializeStub">
            <summary>Initializes a new instance of type StubBilateralSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BilateralSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of BilateralSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.FormatTranslations">
            <summary>Sets the stub of BilateralSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBilateralSmoothing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3">
            <summary>Stub type of AForge.Imaging.Filters.BinaryDilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.FormatTranslationsGet">
            <summary>Sets the stub of BinaryDilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryDilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BinaryDilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of BinaryDilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.FormatTranslations">
            <summary>Sets the stub of BinaryDilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryDilatation3x3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3">
            <summary>Stub type of AForge.Imaging.Filters.BinaryErosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.FormatTranslationsGet">
            <summary>Sets the stub of BinaryErosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryErosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BinaryErosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of BinaryErosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.FormatTranslations">
            <summary>Sets the stub of BinaryErosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBinaryErosion3x3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBlobsFiltering">
            <summary>Stub type of AForge.Imaging.Filters.BlobsFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.#ctor(AForge.Imaging.IBlobsFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.FormatTranslationsGet">
            <summary>Sets the stub of BlobsFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubBlobsFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BlobsFiltering.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BlobsFiltering.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.FormatTranslations">
            <summary>Sets the stub of BlobsFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBlobsFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBottomHat">
            <summary>Stub type of AForge.Imaging.Filters.BottomHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBottomHat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBottomHat.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBottomHat.FormatTranslationsGet">
            <summary>Sets the stub of BottomHat.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBottomHat.InitializeStub">
            <summary>Initializes a new instance of type StubBottomHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBottomHat.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BottomHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBottomHat.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BottomHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBottomHat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBottomHat.FormatTranslations">
            <summary>Sets the stub of BottomHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBottomHat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBottomHat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding">
            <summary>Stub type of AForge.Imaging.Filters.BradleyLocalThresholding</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.FormatTranslationsGet">
            <summary>Sets the stub of BradleyLocalThresholding.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.InitializeStub">
            <summary>Initializes a new instance of type StubBradleyLocalThresholding</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BradleyLocalThresholding.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BradleyLocalThresholding.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.FormatTranslations">
            <summary>Sets the stub of BradleyLocalThresholding.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBradleyLocalThresholding.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection">
            <summary>Stub type of AForge.Imaging.Filters.BrightnessCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.FormatTranslationsGet">
            <summary>Sets the stub of BrightnessCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.InitializeStub">
            <summary>Initializes a new instance of type StubBrightnessCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of BrightnessCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of BrightnessCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.FormatTranslations">
            <summary>Sets the stub of BrightnessCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubBrightnessCorrection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector">
            <summary>Stub type of AForge.Imaging.Filters.CannyEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.#ctor(System.Byte,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.#ctor(System.Byte,System.Byte,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.FormatTranslationsGet">
            <summary>Sets the stub of CannyEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.InitializeStub">
            <summary>Initializes a new instance of type StubCannyEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of CannyEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of CannyEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.FormatTranslations">
            <summary>Sets the stub of CannyEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCannyEdgeDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCanvasCrop">
            <summary>Stub type of AForge.Imaging.Filters.CanvasCrop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.#ctor(System.Drawing.Rectangle)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.#ctor(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.#ctor(System.Drawing.Rectangle,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasCrop.FormatTranslationsGet">
            <summary>Sets the stub of CanvasCrop.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.InitializeStub">
            <summary>Initializes a new instance of type StubCanvasCrop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasCrop.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of CanvasCrop.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasCrop.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of CanvasCrop.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasCrop.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasCrop.FormatTranslations">
            <summary>Sets the stub of CanvasCrop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasCrop.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasCrop.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCanvasFill">
            <summary>Stub type of AForge.Imaging.Filters.CanvasFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.#ctor(System.Drawing.Rectangle)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.#ctor(System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.#ctor(System.Drawing.Rectangle,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasFill.FormatTranslationsGet">
            <summary>Sets the stub of CanvasFill.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.InitializeStub">
            <summary>Initializes a new instance of type StubCanvasFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasFill.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of CanvasFill.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasFill.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of CanvasFill.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasFill.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasFill.FormatTranslations">
            <summary>Sets the stub of CanvasFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasFill.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasFill.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCanvasMove">
            <summary>Stub type of AForge.Imaging.Filters.CanvasMove</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.#ctor(AForge.IntPoint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.#ctor(AForge.IntPoint,System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.#ctor(AForge.IntPoint,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.#ctor(AForge.IntPoint,System.Drawing.Color,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasMove.FormatTranslationsGet">
            <summary>Sets the stub of CanvasMove.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.InitializeStub">
            <summary>Initializes a new instance of type StubCanvasMove</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCanvasMove.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of CanvasMove.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCanvasMove.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of CanvasMove.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasMove.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasMove.FormatTranslations">
            <summary>Sets the stub of CanvasMove.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasMove.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCanvasMove.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubChannelFiltering">
            <summary>Stub type of AForge.Imaging.Filters.ChannelFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubChannelFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubChannelFiltering.#ctor(AForge.IntRange,AForge.IntRange,AForge.IntRange)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubChannelFiltering.FormatTranslationsGet">
            <summary>Sets the stub of ChannelFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubChannelFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubChannelFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubChannelFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ChannelFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubChannelFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ChannelFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubChannelFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubChannelFiltering.FormatTranslations">
            <summary>Sets the stub of ChannelFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubChannelFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubChannelFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubClosing">
            <summary>Stub type of AForge.Imaging.Filters.Closing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubClosing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubClosing.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubClosing.InitializeStub">
            <summary>Initializes a new instance of type StubClosing</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubClosing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubClosing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubClosing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubColorFiltering">
            <summary>Stub type of AForge.Imaging.Filters.ColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorFiltering.#ctor(AForge.IntRange,AForge.IntRange,AForge.IntRange)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubColorFiltering.FormatTranslationsGet">
            <summary>Sets the stub of ColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubColorFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorFiltering.FormatTranslations">
            <summary>Sets the stub of ColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubColorRemapping">
            <summary>Stub type of AForge.Imaging.Filters.ColorRemapping</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorRemapping.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorRemapping.#ctor(System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorRemapping.#ctor(System.Byte[],System.Byte[],System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubColorRemapping.FormatTranslationsGet">
            <summary>Sets the stub of ColorRemapping.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorRemapping.InitializeStub">
            <summary>Initializes a new instance of type StubColorRemapping</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubColorRemapping.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ColorRemapping.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubColorRemapping.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ColorRemapping.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorRemapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorRemapping.FormatTranslations">
            <summary>Sets the stub of ColorRemapping.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorRemapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubColorRemapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling">
            <summary>Stub type of AForge.Imaging.Filters.ConnectedComponentsLabeling</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.FormatTranslationsGet">
            <summary>Sets the stub of ConnectedComponentsLabeling.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.InitializeStub">
            <summary>Initializes a new instance of type StubConnectedComponentsLabeling</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ConnectedComponentsLabeling.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ConnectedComponentsLabeling.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.FormatTranslations">
            <summary>Sets the stub of ConnectedComponentsLabeling.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConnectedComponentsLabeling.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing">
            <summary>Stub type of AForge.Imaging.Filters.ConservativeSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.FormatTranslationsGet">
            <summary>Sets the stub of ConservativeSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.InitializeStub">
            <summary>Initializes a new instance of type StubConservativeSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ConservativeSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of ConservativeSmoothing.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.FormatTranslations">
            <summary>Sets the stub of ConservativeSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConservativeSmoothing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubContrastCorrection">
            <summary>Stub type of AForge.Imaging.Filters.ContrastCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastCorrection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastCorrection.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubContrastCorrection.FormatTranslationsGet">
            <summary>Sets the stub of ContrastCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastCorrection.InitializeStub">
            <summary>Initializes a new instance of type StubContrastCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastCorrection.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ContrastCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubContrastCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ContrastCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastCorrection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastCorrection.FormatTranslations">
            <summary>Sets the stub of ContrastCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastCorrection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastCorrection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubContrastStretch">
            <summary>Stub type of AForge.Imaging.Filters.ContrastStretch</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastStretch.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubContrastStretch.FormatTranslationsGet">
            <summary>Sets the stub of ContrastStretch.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastStretch.InitializeStub">
            <summary>Initializes a new instance of type StubContrastStretch</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubContrastStretch.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ContrastStretch.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubContrastStretch.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ContrastStretch.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastStretch.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastStretch.FormatTranslations">
            <summary>Sets the stub of ContrastStretch.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastStretch.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubContrastStretch.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubConvolution">
            <summary>Stub type of AForge.Imaging.Filters.Convolution</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConvolution.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConvolution.#ctor(System.Int32[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConvolution.#ctor(System.Int32[0:,0:],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConvolution.FormatTranslationsGet">
            <summary>Sets the stub of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConvolution.InitializeStub">
            <summary>Initializes a new instance of type StubConvolution</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubConvolution.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubConvolution.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConvolution.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConvolution.FormatTranslations">
            <summary>Sets the stub of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConvolution.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubConvolution.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCornersMarker">
            <summary>Stub type of AForge.Imaging.Filters.CornersMarker</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCornersMarker.#ctor(AForge.Imaging.ICornersDetector)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCornersMarker.#ctor(AForge.Imaging.ICornersDetector,System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCornersMarker.FormatTranslationsGet">
            <summary>Sets the stub of CornersMarker.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCornersMarker.InitializeStub">
            <summary>Initializes a new instance of type StubCornersMarker</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCornersMarker.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of CornersMarker.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCornersMarker.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of CornersMarker.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCornersMarker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCornersMarker.FormatTranslations">
            <summary>Sets the stub of CornersMarker.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCornersMarker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCornersMarker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubCrop">
            <summary>Stub type of AForge.Imaging.Filters.Crop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCrop.#ctor(System.Drawing.Rectangle)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCrop.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Crop.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCrop.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of Crop.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCrop.FormatTranslationsGet">
            <summary>Sets the stub of Crop.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCrop.InitializeStub">
            <summary>Initializes a new instance of type StubCrop</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubCrop.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Crop.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubCrop.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of Crop.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCrop.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCrop.FormatTranslations">
            <summary>Sets the stub of Crop.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCrop.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubCrop.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector">
            <summary>Stub type of AForge.Imaging.Filters.DifferenceEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.FormatTranslationsGet">
            <summary>Sets the stub of DifferenceEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.InitializeStub">
            <summary>Initializes a new instance of type StubDifferenceEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of DifferenceEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of DifferenceEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.FormatTranslations">
            <summary>Sets the stub of DifferenceEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDifferenceEdgeDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubDilatation">
            <summary>Stub type of AForge.Imaging.Filters.Dilatation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDilatation.FormatTranslationsGet">
            <summary>Sets the stub of Dilatation.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation.InitializeStub">
            <summary>Initializes a new instance of type StubDilatation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Dilatation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDilatation.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Dilatation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation.FormatTranslations">
            <summary>Sets the stub of Dilatation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubDilatation3x3">
            <summary>Stub type of AForge.Imaging.Filters.Dilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation3x3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDilatation3x3.FormatTranslationsGet">
            <summary>Sets the stub of Dilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation3x3.InitializeStub">
            <summary>Initializes a new instance of type StubDilatation3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubDilatation3x3.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Dilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubDilatation3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Dilatation3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation3x3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation3x3.FormatTranslations">
            <summary>Sets the stub of Dilatation3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation3x3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubDilatation3x3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubErosion">
            <summary>Stub type of AForge.Imaging.Filters.Erosion</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErosion.FormatTranslationsGet">
            <summary>Sets the stub of Erosion.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion.InitializeStub">
            <summary>Initializes a new instance of type StubErosion</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Erosion.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErosion.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Erosion.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion.FormatTranslations">
            <summary>Sets the stub of Erosion.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubErosion3x3">
            <summary>Stub type of AForge.Imaging.Filters.Erosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion3x3.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErosion3x3.FormatTranslationsGet">
            <summary>Sets the stub of Erosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion3x3.InitializeStub">
            <summary>Initializes a new instance of type StubErosion3x3</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErosion3x3.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Erosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErosion3x3.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Erosion3x3.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion3x3.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion3x3.FormatTranslations">
            <summary>Sets the stub of Erosion3x3.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion3x3.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErosion3x3.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering">
            <summary>Stub type of AForge.Imaging.Filters.ErrorDiffusionDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.Diffuse(System.Int32,System.Byte*)">
            <summary>Sets the stub of ErrorDiffusionDithering.Diffuse(Int32 error, Byte* ptr)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.FormatTranslationsGet">
            <summary>Sets the stub of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.InitializeStub">
            <summary>Initializes a new instance of type StubErrorDiffusionDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.FormatTranslations">
            <summary>Sets the stub of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionDithering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors">
            <summary>Stub type of AForge.Imaging.Filters.ErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.#ctor(System.Int32[][])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.Diffuse(System.Int32,System.Byte*)">
            <summary>Sets the stub of ErrorDiffusionToAdjacentNeighbors.Diffuse(Int32 error, Byte* ptr)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.FormatTranslationsGet">
            <summary>Sets the stub of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.InitializeStub">
            <summary>Initializes a new instance of type StubErrorDiffusionToAdjacentNeighbors</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ErrorDiffusionDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.FormatTranslations">
            <summary>Sets the stub of ErrorDiffusionDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubErrorDiffusionToAdjacentNeighbors.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering">
            <summary>Stub type of AForge.Imaging.Filters.EuclideanColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.#ctor(AForge.Imaging.RGB,System.Int16)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.FormatTranslationsGet">
            <summary>Sets the stub of EuclideanColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubEuclideanColorFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of EuclideanColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of EuclideanColorFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.FormatTranslations">
            <summary>Sets the stub of EuclideanColorFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubEuclideanColorFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob">
            <summary>Stub type of AForge.Imaging.Filters.ExtractBiggestBlob</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob.InitializeStub">
            <summary>Initializes a new instance of type StubExtractBiggestBlob</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractBiggestBlob.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubExtractChannel">
            <summary>Stub type of AForge.Imaging.Filters.ExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractChannel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractChannel.#ctor(System.Int16)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubExtractChannel.FormatTranslationsGet">
            <summary>Sets the stub of ExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractChannel.InitializeStub">
            <summary>Initializes a new instance of type StubExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractChannel.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubExtractChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractChannel.FormatTranslations">
            <summary>Sets the stub of ExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel">
            <summary>Stub type of AForge.Imaging.Filters.ExtractNormalizedRGBChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.#ctor(System.Int16)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.FormatTranslationsGet">
            <summary>Sets the stub of ExtractNormalizedRGBChannel.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.InitializeStub">
            <summary>Initializes a new instance of type StubExtractNormalizedRGBChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ExtractNormalizedRGBChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ExtractNormalizedRGBChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.FormatTranslations">
            <summary>Sets the stub of ExtractNormalizedRGBChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubExtractNormalizedRGBChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubFillHoles">
            <summary>Stub type of AForge.Imaging.Filters.FillHoles</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFillHoles.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFillHoles.FormatTranslationsGet">
            <summary>Sets the stub of FillHoles.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFillHoles.InitializeStub">
            <summary>Initializes a new instance of type StubFillHoles</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFillHoles.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of FillHoles.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFillHoles.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of FillHoles.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFillHoles.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFillHoles.FormatTranslations">
            <summary>Sets the stub of FillHoles.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFillHoles.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFillHoles.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubFilterIterator">
            <summary>Stub type of AForge.Imaging.Filters.FilterIterator</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFilterIterator.#ctor(AForge.Imaging.Filters.IFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFilterIterator.#ctor(AForge.Imaging.Filters.IFilter,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFilterIterator.InitializeStub">
            <summary>Initializes a new instance of type StubFilterIterator</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFilterIterator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFilterIterator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFilterIterator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubFiltersSequence">
            <summary>Stub type of AForge.Imaging.Filters.FiltersSequence</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.#ctor(AForge.Imaging.Filters.IFilter[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.InitializeStub">
            <summary>Initializes a new instance of type StubFiltersSequence</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnClear">
            <summary>Sets the stub of CollectionBase.OnClear()</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnClear01">
            <summary>Sets the stub of CollectionBase.OnClear()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnClearComplete">
            <summary>Sets the stub of CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnClearComplete01">
            <summary>Sets the stub of CollectionBase.OnClearComplete()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnInsert(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnInsertComplete(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnInsertCompleteInt32Object">
            <summary>Sets the stub of CollectionBase.OnInsertComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnInsertInt32Object">
            <summary>Sets the stub of CollectionBase.OnInsert(Int32 index, Object value)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnRemove(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnRemoveComplete(System.Int32,System.Object)">
            <summary>Sets the stub of CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnRemoveCompleteInt32Object">
            <summary>Sets the stub of CollectionBase.OnRemoveComplete(Int32 index, Object value)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnRemoveInt32Object">
            <summary>Sets the stub of CollectionBase.OnRemove(Int32 index, Object value)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnSet(System.Int32,System.Object,System.Object)">
            <summary>Sets the stub of CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>Sets the stub of CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnSetCompleteInt32ObjectObject">
            <summary>Sets the stub of CollectionBase.OnSetComplete(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnSetInt32ObjectObject">
            <summary>Sets the stub of CollectionBase.OnSet(Int32 index, Object oldValue, Object newValue)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnValidate(System.Object)">
            <summary>Sets the stub of CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFiltersSequence.OnValidateObject">
            <summary>Sets the stub of CollectionBase.OnValidate(Object value)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFiltersSequence.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFiltersSequence.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFiltersSequence.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection">
            <summary>Stub type of AForge.Imaging.Filters.FlatFieldCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.FormatTranslationsGet">
            <summary>Sets the stub of FlatFieldCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.InitializeStub">
            <summary>Initializes a new instance of type StubFlatFieldCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of FlatFieldCorrection.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of FlatFieldCorrection.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.FormatTranslations">
            <summary>Sets the stub of FlatFieldCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubFlatFieldCorrection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubGammaCorrection">
            <summary>Stub type of AForge.Imaging.Filters.GammaCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGammaCorrection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGammaCorrection.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGammaCorrection.FormatTranslationsGet">
            <summary>Sets the stub of GammaCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGammaCorrection.InitializeStub">
            <summary>Initializes a new instance of type StubGammaCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGammaCorrection.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of GammaCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGammaCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of GammaCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGammaCorrection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGammaCorrection.FormatTranslations">
            <summary>Sets the stub of GammaCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGammaCorrection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGammaCorrection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubGaussianSharpen">
            <summary>Stub type of AForge.Imaging.Filters.GaussianSharpen</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.#ctor(System.Double,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.FormatTranslationsGet">
            <summary>Sets the stub of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.InitializeStub">
            <summary>Initializes a new instance of type StubGaussianSharpen</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Convolution.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.FormatTranslations">
            <summary>Sets the stub of Convolution.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGaussianSharpen.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubGrayscale">
            <summary>Stub type of AForge.Imaging.Filters.Grayscale</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGrayscale.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGrayscale.FormatTranslationsGet">
            <summary>Sets the stub of Grayscale.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGrayscale.InitializeStub">
            <summary>Initializes a new instance of type StubGrayscale</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubGrayscale.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Grayscale.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubGrayscale.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of Grayscale.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGrayscale.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGrayscale.FormatTranslations">
            <summary>Sets the stub of Grayscale.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGrayscale.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubGrayscale.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHSLFiltering">
            <summary>Stub type of AForge.Imaging.Filters.HSLFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLFiltering.#ctor(AForge.IntRange,AForge.Range,AForge.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHSLFiltering.FormatTranslationsGet">
            <summary>Sets the stub of HSLFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubHSLFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HSLFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHSLFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of HSLFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLFiltering.FormatTranslations">
            <summary>Sets the stub of HSLFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHSLLinear">
            <summary>Stub type of AForge.Imaging.Filters.HSLLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLLinear.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHSLLinear.FormatTranslationsGet">
            <summary>Sets the stub of HSLLinear.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLLinear.InitializeStub">
            <summary>Initializes a new instance of type StubHSLLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHSLLinear.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HSLLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHSLLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of HSLLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLLinear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLLinear.FormatTranslations">
            <summary>Sets the stub of HSLLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLLinear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHSLLinear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHistogramEqualization">
            <summary>Stub type of AForge.Imaging.Filters.HistogramEqualization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.FormatTranslationsGet">
            <summary>Sets the stub of HistogramEqualization.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.InitializeStub">
            <summary>Initializes a new instance of type StubHistogramEqualization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HistogramEqualization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of HistogramEqualization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.FormatTranslations">
            <summary>Sets the stub of HistogramEqualization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHistogramEqualization.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHitAndMiss">
            <summary>Stub type of AForge.Imaging.Filters.HitAndMiss</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHitAndMiss.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHitAndMiss.#ctor(System.Int16[0:,0:],AForge.Imaging.Filters.HitAndMiss.Modes)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHitAndMiss.FormatTranslationsGet">
            <summary>Sets the stub of HitAndMiss.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHitAndMiss.InitializeStub">
            <summary>Initializes a new instance of type StubHitAndMiss</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHitAndMiss.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HitAndMiss.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHitAndMiss.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of HitAndMiss.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHitAndMiss.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHitAndMiss.FormatTranslations">
            <summary>Sets the stub of HitAndMiss.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHitAndMiss.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHitAndMiss.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector">
            <summary>Stub type of AForge.Imaging.Filters.HomogenityEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.FormatTranslationsGet">
            <summary>Sets the stub of HomogenityEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.InitializeStub">
            <summary>Initializes a new instance of type StubHomogenityEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HomogenityEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of HomogenityEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.FormatTranslations">
            <summary>Sets the stub of HomogenityEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHomogenityEdgeDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing">
            <summary>Stub type of AForge.Imaging.Filters.HorizontalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.FormatTranslationsGet">
            <summary>Sets the stub of HorizontalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.InitializeStub">
            <summary>Initializes a new instance of type StubHorizontalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HorizontalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of HorizontalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.FormatTranslations">
            <summary>Sets the stub of HorizontalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHorizontalRunLengthSmoothing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubHueModifier">
            <summary>Stub type of AForge.Imaging.Filters.HueModifier</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHueModifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHueModifier.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHueModifier.FormatTranslationsGet">
            <summary>Sets the stub of HueModifier.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHueModifier.InitializeStub">
            <summary>Initializes a new instance of type StubHueModifier</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubHueModifier.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of HueModifier.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubHueModifier.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of HueModifier.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHueModifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHueModifier.FormatTranslations">
            <summary>Sets the stub of HueModifier.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHueModifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubHueModifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubIFilter">
            <summary>Stub type of AForge.Imaging.Filters.IFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilter.#ctor">
            <summary>Initializes a new instance of type StubIFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilter.afi::AForge#Imaging#Filters#IFilter#Apply(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of IFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilter.afi::AForge#Imaging#Filters#IFilter#Apply(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of IFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilter.afi::AForge#Imaging#Filters#IFilter#Apply(System.Drawing.Bitmap)">
            <summary>Sets the stub of IFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilter.afi::AForge#Imaging#Filters#IFilter#Apply(System.Drawing.Imaging.BitmapData)">
            <summary>Sets the stub of IFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIFilter.ApplyBitmap">
            <summary>Sets the stub of IFilter.Apply(Bitmap image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIFilter.ApplyBitmapData">
            <summary>Sets the stub of IFilter.Apply(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIFilter.ApplyUnmanagedImage">
            <summary>Sets the stub of IFilter.Apply(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIFilter.ApplyUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of IFilter.Apply(UnmanagedImage sourceImage, UnmanagedImage destinationImage)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubIFilterInformation">
            <summary>Stub type of AForge.Imaging.Filters.IFilterInformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIFilterInformation.#ctor">
            <summary>Initializes a new instance of type StubIFilterInformation</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIFilterInformation.FormatTranslationsGet">
            <summary>Sets the stub of IFilterInformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubIFilterInformation.afi::AForge#Imaging#Filters#IFilterInformation#FormatTranslations">
            <summary>Sets the stub of IFilterInformation.get_FormatTranslations()</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter">
            <summary>Stub type of AForge.Imaging.Filters.IInPlaceFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.#ctor">
            <summary>Initializes a new instance of type StubIInPlaceFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.afi::AForge#Imaging#Filters#IInPlaceFilter#ApplyInPlace(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.afi::AForge#Imaging#Filters#IInPlaceFilter#ApplyInPlace(System.Drawing.Bitmap)">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.afi::AForge#Imaging#Filters#IInPlaceFilter#ApplyInPlace(System.Drawing.Imaging.BitmapData)">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.ApplyInPlaceBitmap">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(Bitmap image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.ApplyInPlaceBitmapData">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(BitmapData imageData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlaceFilter.ApplyInPlaceUnmanagedImage">
            <summary>Sets the stub of IInPlaceFilter.ApplyInPlace(UnmanagedImage image)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter">
            <summary>Stub type of AForge.Imaging.Filters.IInPlacePartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.#ctor">
            <summary>Initializes a new instance of type StubIInPlacePartialFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.afi::AForge#Imaging#Filters#IInPlacePartialFilter#ApplyInPlace(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.afi::AForge#Imaging#Filters#IInPlacePartialFilter#ApplyInPlace(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.afi::AForge#Imaging#Filters#IInPlacePartialFilter#ApplyInPlace(System.Drawing.Imaging.BitmapData,System.Drawing.Rectangle)">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.ApplyInPlaceBitmapDataRectangle">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(BitmapData imageData, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.ApplyInPlaceBitmapRectangle">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(Bitmap image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIInPlacePartialFilter.ApplyInPlaceUnmanagedImageRectangle">
            <summary>Sets the stub of IInPlacePartialFilter.ApplyInPlace(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubImageWarp">
            <summary>Stub type of AForge.Imaging.Filters.ImageWarp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubImageWarp.#ctor(AForge.IntPoint[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubImageWarp.FormatTranslationsGet">
            <summary>Sets the stub of ImageWarp.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubImageWarp.InitializeStub">
            <summary>Initializes a new instance of type StubImageWarp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubImageWarp.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ImageWarp.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubImageWarp.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ImageWarp.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubImageWarp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubImageWarp.FormatTranslations">
            <summary>Sets the stub of ImageWarp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubImageWarp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubImageWarp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubIterativeThreshold">
            <summary>Stub type of AForge.Imaging.Filters.IterativeThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.FormatTranslationsGet">
            <summary>Sets the stub of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.InitializeStub">
            <summary>Initializes a new instance of type StubIterativeThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of IterativeThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of IterativeThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.FormatTranslations">
            <summary>Sets the stub of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubIterativeThreshold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubJitter">
            <summary>Stub type of AForge.Imaging.Filters.Jitter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubJitter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubJitter.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubJitter.FormatTranslationsGet">
            <summary>Sets the stub of Jitter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubJitter.InitializeStub">
            <summary>Initializes a new instance of type StubJitter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubJitter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Jitter.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubJitter.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Jitter.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubJitter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubJitter.FormatTranslations">
            <summary>Sets the stub of Jitter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubJitter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubJitter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubLevelsLinear">
            <summary>Stub type of AForge.Imaging.Filters.LevelsLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubLevelsLinear.FormatTranslationsGet">
            <summary>Sets the stub of LevelsLinear.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear.InitializeStub">
            <summary>Initializes a new instance of type StubLevelsLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of LevelsLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubLevelsLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of LevelsLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear.FormatTranslations">
            <summary>Sets the stub of LevelsLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp">
            <summary>Stub type of AForge.Imaging.Filters.LevelsLinear16bpp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.FormatTranslationsGet">
            <summary>Sets the stub of LevelsLinear16bpp.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.InitializeStub">
            <summary>Initializes a new instance of type StubLevelsLinear16bpp</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of LevelsLinear16bpp.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of LevelsLinear16bpp.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.FormatTranslations">
            <summary>Sets the stub of LevelsLinear16bpp.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubLevelsLinear16bpp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubMaskedFilter">
            <summary>Stub type of AForge.Imaging.Filters.MaskedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMaskedFilter.#ctor(AForge.Imaging.Filters.IFilter,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMaskedFilter.#ctor(AForge.Imaging.Filters.IFilter,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMaskedFilter.#ctor(AForge.Imaging.Filters.IFilter,System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMaskedFilter.FormatTranslationsGet">
            <summary>Sets the stub of MaskedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMaskedFilter.InitializeStub">
            <summary>Initializes a new instance of type StubMaskedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMaskedFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of MaskedFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMaskedFilter.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of MaskedFilter.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMaskedFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMaskedFilter.FormatTranslations">
            <summary>Sets the stub of MaskedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMaskedFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMaskedFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubMedian">
            <summary>Stub type of AForge.Imaging.Filters.Median</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMedian.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMedian.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMedian.FormatTranslationsGet">
            <summary>Sets the stub of Median.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMedian.InitializeStub">
            <summary>Initializes a new instance of type StubMedian</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMedian.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Median.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMedian.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of Median.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMedian.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMedian.FormatTranslations">
            <summary>Sets the stub of Median.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMedian.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMedian.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubMirror">
            <summary>Stub type of AForge.Imaging.Filters.Mirror</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMirror.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMirror.FormatTranslationsGet">
            <summary>Sets the stub of Mirror.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMirror.InitializeStub">
            <summary>Initializes a new instance of type StubMirror</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMirror.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Mirror.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMirror.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of Mirror.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMirror.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMirror.FormatTranslations">
            <summary>Sets the stub of Mirror.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMirror.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMirror.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubMorph">
            <summary>Stub type of AForge.Imaging.Filters.Morph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMorph.FormatTranslationsGet">
            <summary>Sets the stub of Morph.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.InitializeStub">
            <summary>Initializes a new instance of type StubMorph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMorph.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Morph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMorph.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMorph.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of Morph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMorph.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMorph.FormatTranslations">
            <summary>Sets the stub of Morph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMorph.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMorph.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubMoveTowards">
            <summary>Stub type of AForge.Imaging.Filters.MoveTowards</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.#ctor(AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.#ctor(System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.#ctor(AForge.Imaging.UnmanagedImage,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.#ctor(System.Drawing.Bitmap,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMoveTowards.FormatTranslationsGet">
            <summary>Sets the stub of MoveTowards.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.InitializeStub">
            <summary>Initializes a new instance of type StubMoveTowards</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubMoveTowards.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of MoveTowards.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMoveTowards.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubMoveTowards.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of MoveTowards.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMoveTowards.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMoveTowards.FormatTranslations">
            <summary>Sets the stub of MoveTowards.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMoveTowards.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubMoveTowards.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubOilPainting">
            <summary>Stub type of AForge.Imaging.Filters.OilPainting</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOilPainting.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOilPainting.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOilPainting.FormatTranslationsGet">
            <summary>Sets the stub of OilPainting.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOilPainting.InitializeStub">
            <summary>Initializes a new instance of type StubOilPainting</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOilPainting.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of OilPainting.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOilPainting.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of OilPainting.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOilPainting.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOilPainting.FormatTranslations">
            <summary>Sets the stub of OilPainting.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOilPainting.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOilPainting.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubOpening">
            <summary>Stub type of AForge.Imaging.Filters.Opening</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOpening.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOpening.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOpening.InitializeStub">
            <summary>Initializes a new instance of type StubOpening</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOpening.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOpening.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOpening.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubOrderedDithering">
            <summary>Stub type of AForge.Imaging.Filters.OrderedDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOrderedDithering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOrderedDithering.#ctor(System.Byte[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOrderedDithering.FormatTranslationsGet">
            <summary>Sets the stub of OrderedDithering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOrderedDithering.InitializeStub">
            <summary>Initializes a new instance of type StubOrderedDithering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOrderedDithering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of OrderedDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOrderedDithering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of OrderedDithering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOrderedDithering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOrderedDithering.FormatTranslations">
            <summary>Sets the stub of OrderedDithering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOrderedDithering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOrderedDithering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubOtsuThreshold">
            <summary>Stub type of AForge.Imaging.Filters.OtsuThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.FormatTranslationsGet">
            <summary>Sets the stub of OtsuThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.InitializeStub">
            <summary>Initializes a new instance of type StubOtsuThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of OtsuThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of OtsuThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.FormatTranslations">
            <summary>Sets the stub of OtsuThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubOtsuThreshold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubPixellate">
            <summary>Stub type of AForge.Imaging.Filters.Pixellate</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPixellate.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPixellate.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPixellate.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPixellate.FormatTranslationsGet">
            <summary>Sets the stub of Pixellate.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPixellate.InitializeStub">
            <summary>Initializes a new instance of type StubPixellate</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPixellate.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Pixellate.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPixellate.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of Pixellate.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPixellate.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPixellate.FormatTranslations">
            <summary>Sets the stub of Pixellate.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPixellate.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPixellate.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill">
            <summary>Stub type of AForge.Imaging.Filters.PointedColorFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.#ctor(System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.FormatTranslationsGet">
            <summary>Sets the stub of PointedColorFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.InitializeStub">
            <summary>Initializes a new instance of type StubPointedColorFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of PointedColorFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of PointedColorFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.FormatTranslations">
            <summary>Sets the stub of PointedColorFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedColorFloodFill.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill">
            <summary>Stub type of AForge.Imaging.Filters.PointedMeanFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.FormatTranslationsGet">
            <summary>Sets the stub of PointedMeanFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.InitializeStub">
            <summary>Initializes a new instance of type StubPointedMeanFloodFill</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of PointedMeanFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of PointedMeanFloodFill.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.FormatTranslations">
            <summary>Sets the stub of PointedMeanFloodFill.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubPointedMeanFloodFill.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation">
            <summary>Stub type of AForge.Imaging.Filters.QuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.#ctor(System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.#ctor(System.Collections.Generic.List{AForge.IntPoint},System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of QuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of QuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the stub of QuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.InitializeStub">
            <summary>Initializes a new instance of type StubQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of QuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of QuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.FormatTranslations">
            <summary>Sets the stub of QuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubQuadrilateralTransformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubReplaceChannel">
            <summary>Stub type of AForge.Imaging.Filters.ReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubReplaceChannel.#ctor(System.Int16,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubReplaceChannel.#ctor(System.Int16,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubReplaceChannel.FormatTranslationsGet">
            <summary>Sets the stub of ReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubReplaceChannel.InitializeStub">
            <summary>Initializes a new instance of type StubReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubReplaceChannel.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubReplaceChannel.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubReplaceChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubReplaceChannel.FormatTranslations">
            <summary>Sets the stub of ReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubReplaceChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubReplaceChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubResizeBicubic">
            <summary>Stub type of AForge.Imaging.Filters.ResizeBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBicubic.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBicubic.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBicubic.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBicubic.FormatTranslationsGet">
            <summary>Sets the stub of ResizeBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBicubic.InitializeStub">
            <summary>Initializes a new instance of type StubResizeBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBicubic.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ResizeBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBicubic.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ResizeBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBicubic.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBicubic.FormatTranslations">
            <summary>Sets the stub of ResizeBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBicubic.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBicubic.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubResizeBilinear">
            <summary>Stub type of AForge.Imaging.Filters.ResizeBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBilinear.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBilinear.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBilinear.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBilinear.FormatTranslationsGet">
            <summary>Sets the stub of ResizeBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBilinear.InitializeStub">
            <summary>Initializes a new instance of type StubResizeBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeBilinear.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ResizeBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeBilinear.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ResizeBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBilinear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBilinear.FormatTranslations">
            <summary>Sets the stub of ResizeBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBilinear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeBilinear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor">
            <summary>Stub type of AForge.Imaging.Filters.ResizeNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseResizeFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.FormatTranslationsGet">
            <summary>Sets the stub of ResizeNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.InitializeStub">
            <summary>Initializes a new instance of type StubResizeNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ResizeNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ResizeNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.FormatTranslations">
            <summary>Sets the stub of ResizeNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubResizeNearestNeighbor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubRotateBicubic">
            <summary>Stub type of AForge.Imaging.Filters.RotateBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBicubic.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBicubic.#ctor(System.Double,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBicubic.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBicubic.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBicubic.FormatTranslationsGet">
            <summary>Sets the stub of RotateBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBicubic.InitializeStub">
            <summary>Initializes a new instance of type StubRotateBicubic</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBicubic.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of RotateBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBicubic.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of RotateBicubic.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBicubic.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBicubic.FormatTranslations">
            <summary>Sets the stub of RotateBicubic.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBicubic.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBicubic.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubRotateBilinear">
            <summary>Stub type of AForge.Imaging.Filters.RotateBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBilinear.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBilinear.#ctor(System.Double,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBilinear.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBilinear.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBilinear.FormatTranslationsGet">
            <summary>Sets the stub of RotateBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBilinear.InitializeStub">
            <summary>Initializes a new instance of type StubRotateBilinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateBilinear.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of RotateBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateBilinear.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of RotateBilinear.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBilinear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBilinear.FormatTranslations">
            <summary>Sets the stub of RotateBilinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBilinear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateBilinear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor">
            <summary>Stub type of AForge.Imaging.Filters.RotateNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.#ctor(System.Double,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of BaseRotateFilter.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.FormatTranslationsGet">
            <summary>Sets the stub of RotateNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.InitializeStub">
            <summary>Initializes a new instance of type StubRotateNearestNeighbor</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of RotateNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of RotateNearestNeighbor.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.FormatTranslations">
            <summary>Sets the stub of RotateNearestNeighbor.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubRotateNearestNeighbor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSISThreshold">
            <summary>Stub type of AForge.Imaging.Filters.SISThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSISThreshold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSISThreshold.FormatTranslationsGet">
            <summary>Sets the stub of SISThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSISThreshold.InitializeStub">
            <summary>Initializes a new instance of type StubSISThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSISThreshold.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SISThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSISThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of SISThreshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSISThreshold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSISThreshold.FormatTranslations">
            <summary>Sets the stub of SISThreshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSISThreshold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSISThreshold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise">
            <summary>Stub type of AForge.Imaging.Filters.SaltAndPepperNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.FormatTranslationsGet">
            <summary>Sets the stub of SaltAndPepperNoise.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.InitializeStub">
            <summary>Initializes a new instance of type StubSaltAndPepperNoise</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SaltAndPepperNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of SaltAndPepperNoise.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.FormatTranslations">
            <summary>Sets the stub of SaltAndPepperNoise.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaltAndPepperNoise.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSaturationCorrection">
            <summary>Stub type of AForge.Imaging.Filters.SaturationCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.#ctor(System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.FormatTranslationsGet">
            <summary>Sets the stub of SaturationCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.InitializeStub">
            <summary>Initializes a new instance of type StubSaturationCorrection</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SaturationCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of SaturationCorrection.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.FormatTranslations">
            <summary>Sets the stub of SaturationCorrection.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSaturationCorrection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubShrink">
            <summary>Stub type of AForge.Imaging.Filters.Shrink</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubShrink.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubShrink.#ctor(System.Drawing.Color)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubShrink.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Shrink.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubShrink.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of Shrink.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubShrink.FormatTranslationsGet">
            <summary>Sets the stub of Shrink.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubShrink.InitializeStub">
            <summary>Initializes a new instance of type StubShrink</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubShrink.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of Shrink.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubShrink.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of Shrink.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubShrink.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubShrink.FormatTranslations">
            <summary>Sets the stub of Shrink.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubShrink.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubShrink.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSimplePosterization">
            <summary>Stub type of AForge.Imaging.Filters.SimplePosterization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimplePosterization.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimplePosterization.#ctor(AForge.Imaging.Filters.SimplePosterization.PosterizationFillingType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimplePosterization.FormatTranslationsGet">
            <summary>Sets the stub of SimplePosterization.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimplePosterization.InitializeStub">
            <summary>Initializes a new instance of type StubSimplePosterization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimplePosterization.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SimplePosterization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimplePosterization.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of SimplePosterization.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimplePosterization.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimplePosterization.FormatTranslations">
            <summary>Sets the stub of SimplePosterization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimplePosterization.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimplePosterization.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation">
            <summary>Stub type of AForge.Imaging.Filters.SimpleQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.#ctor(System.Collections.Generic.List{AForge.IntPoint})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.#ctor(System.Collections.Generic.List{AForge.IntPoint},System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.FormatTranslationsGet">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleQuadrilateralTransformation</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.FormatTranslations">
            <summary>Sets the stub of SimpleQuadrilateralTransformation.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleQuadrilateralTransformation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization">
            <summary>Stub type of AForge.Imaging.Filters.SimpleSkeletonization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.#ctor(System.Byte,System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.FormatTranslationsGet">
            <summary>Sets the stub of SimpleSkeletonization.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleSkeletonization</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SimpleSkeletonization.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of SimpleSkeletonization.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.FormatTranslations">
            <summary>Sets the stub of SimpleSkeletonization.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSimpleSkeletonization.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector">
            <summary>Stub type of AForge.Imaging.Filters.SobelEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.FormatTranslationsGet">
            <summary>Sets the stub of SobelEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.InitializeStub">
            <summary>Initializes a new instance of type StubSobelEdgeDetector</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of SobelEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.ProcessFilterUnmanagedImageUnmanagedImageRectangle">
            <summary>Sets the stub of SobelEdgeDetector.ProcessFilter(UnmanagedImage source, UnmanagedImage destination, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.FormatTranslations">
            <summary>Sets the stub of SobelEdgeDetector.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubSobelEdgeDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph">
            <summary>Stub type of AForge.Imaging.Filters.StereoAnaglyph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.#ctor(AForge.Imaging.Filters.StereoAnaglyph.Algorithm)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.FormatTranslationsGet">
            <summary>Sets the stub of StereoAnaglyph.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.InitializeStub">
            <summary>Initializes a new instance of type StubStereoAnaglyph</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of StereoAnaglyph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of StereoAnaglyph.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.FormatTranslations">
            <summary>Sets the stub of StereoAnaglyph.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubStereoAnaglyph.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTexturedFilter">
            <summary>Stub type of AForge.Imaging.Filters.TexturedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.#ctor(System.Single[0:,0:],AForge.Imaging.Filters.IFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.#ctor(AForge.Imaging.Textures.ITextureGenerator,AForge.Imaging.Filters.IFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.#ctor(System.Single[0:,0:],AForge.Imaging.Filters.IFilter,AForge.Imaging.Filters.IFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.#ctor(AForge.Imaging.Textures.ITextureGenerator,AForge.Imaging.Filters.IFilter,AForge.Imaging.Filters.IFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturedFilter.FormatTranslationsGet">
            <summary>Sets the stub of TexturedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.InitializeStub">
            <summary>Initializes a new instance of type StubTexturedFilter</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedFilter.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TexturedFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturedFilter.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of TexturedFilter.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedFilter.FormatTranslations">
            <summary>Sets the stub of TexturedFilter.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTexturedMerge">
            <summary>Stub type of AForge.Imaging.Filters.TexturedMerge</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedMerge.#ctor(System.Single[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedMerge.#ctor(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturedMerge.FormatTranslationsGet">
            <summary>Sets the stub of TexturedMerge.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedMerge.InitializeStub">
            <summary>Initializes a new instance of type StubTexturedMerge</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedMerge.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturedMerge.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TexturedMerge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturedMerge.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of BaseInPlaceFilter2.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturedMerge.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of TexturedMerge.ProcessFilter(UnmanagedImage image, UnmanagedImage overlay)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedMerge.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedMerge.FormatTranslations">
            <summary>Sets the stub of TexturedMerge.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedMerge.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturedMerge.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTexturer">
            <summary>Stub type of AForge.Imaging.Filters.Texturer</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.#ctor(System.Single[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.#ctor(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.#ctor(System.Single[0:,0:],System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.#ctor(AForge.Imaging.Textures.ITextureGenerator,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturer.FormatTranslationsGet">
            <summary>Sets the stub of Texturer.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.InitializeStub">
            <summary>Initializes a new instance of type StubTexturer</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTexturer.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Texturer.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTexturer.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of Texturer.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturer.FormatTranslations">
            <summary>Sets the stub of Texturer.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTexturer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubThreshold">
            <summary>Stub type of AForge.Imaging.Filters.Threshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThreshold.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThreshold.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThreshold.FormatTranslationsGet">
            <summary>Sets the stub of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThreshold.InitializeStub">
            <summary>Initializes a new instance of type StubThreshold</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThreshold.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of Threshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThreshold.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of Threshold.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThreshold.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThreshold.FormatTranslations">
            <summary>Sets the stub of Threshold.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThreshold.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThreshold.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry">
            <summary>Stub type of AForge.Imaging.Filters.ThresholdWithCarry</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.#ctor(System.Byte)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.FormatTranslationsGet">
            <summary>Sets the stub of ThresholdWithCarry.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.InitializeStub">
            <summary>Initializes a new instance of type StubThresholdWithCarry</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of ThresholdWithCarry.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of ThresholdWithCarry.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.FormatTranslations">
            <summary>Sets the stub of ThresholdWithCarry.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdWithCarry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubThresholdedDifference">
            <summary>Stub type of AForge.Imaging.Filters.ThresholdedDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.FormatTranslationsGet">
            <summary>Sets the stub of ThresholdedDifference.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.InitializeStub">
            <summary>Initializes a new instance of type StubThresholdedDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ThresholdedDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ThresholdedDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.FormatTranslations">
            <summary>Sets the stub of ThresholdedDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedDifference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference">
            <summary>Stub type of AForge.Imaging.Filters.ThresholdedEuclideanDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.FormatTranslationsGet">
            <summary>Sets the stub of ThresholdedEuclideanDifference.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.InitializeStub">
            <summary>Initializes a new instance of type StubThresholdedEuclideanDifference</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of ThresholdedEuclideanDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of BaseFilter2.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.ProcessFilterUnmanagedImageUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of ThresholdedEuclideanDifference.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage overlay, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.FormatTranslations">
            <summary>Sets the stub of ThresholdedEuclideanDifference.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubThresholdedEuclideanDifference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTopHat">
            <summary>Stub type of AForge.Imaging.Filters.TopHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTopHat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTopHat.#ctor(System.Int16[0:,0:])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTopHat.FormatTranslationsGet">
            <summary>Sets the stub of TopHat.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTopHat.InitializeStub">
            <summary>Initializes a new instance of type StubTopHat</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTopHat.ProcessFilter(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TopHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTopHat.ProcessFilterUnmanagedImage">
            <summary>Sets the stub of TopHat.ProcessFilter(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTopHat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTopHat.FormatTranslations">
            <summary>Sets the stub of TopHat.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTopHat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTopHat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTransformFromPolar">
            <summary>Stub type of AForge.Imaging.Filters.TransformFromPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TransformFromPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of TransformFromPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.FormatTranslationsGet">
            <summary>Sets the stub of TransformFromPolar.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.InitializeStub">
            <summary>Initializes a new instance of type StubTransformFromPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TransformFromPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of TransformFromPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.FormatTranslations">
            <summary>Sets the stub of TransformFromPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformFromPolar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubTransformToPolar">
            <summary>Stub type of AForge.Imaging.Filters.TransformToPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformToPolar.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformToPolar.CalculateNewImageSize(AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TransformToPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformToPolar.CalculateNewImageSizeUnmanagedImage">
            <summary>Sets the stub of TransformToPolar.CalculateNewImageSize(UnmanagedImage sourceData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformToPolar.FormatTranslationsGet">
            <summary>Sets the stub of TransformToPolar.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformToPolar.InitializeStub">
            <summary>Initializes a new instance of type StubTransformToPolar</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubTransformToPolar.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of TransformToPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubTransformToPolar.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of TransformToPolar.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformToPolar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformToPolar.FormatTranslations">
            <summary>Sets the stub of TransformToPolar.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformToPolar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubTransformToPolar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing">
            <summary>Stub type of AForge.Imaging.Filters.VerticalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.FormatTranslationsGet">
            <summary>Sets the stub of VerticalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.InitializeStub">
            <summary>Initializes a new instance of type StubVerticalRunLengthSmoothing</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of VerticalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of VerticalRunLengthSmoothing.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.FormatTranslations">
            <summary>Sets the stub of VerticalRunLengthSmoothing.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubVerticalRunLengthSmoothing.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubWaterWave">
            <summary>Stub type of AForge.Imaging.Filters.WaterWave</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubWaterWave.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubWaterWave.FormatTranslationsGet">
            <summary>Sets the stub of WaterWave.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubWaterWave.InitializeStub">
            <summary>Initializes a new instance of type StubWaterWave</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubWaterWave.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of WaterWave.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubWaterWave.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of WaterWave.ProcessFilter(UnmanagedImage source, UnmanagedImage destination)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubWaterWave.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubWaterWave.FormatTranslations">
            <summary>Sets the stub of WaterWave.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubWaterWave.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubWaterWave.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel">
            <summary>Stub type of AForge.Imaging.Filters.YCbCrExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.#ctor(System.Int16)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.FormatTranslationsGet">
            <summary>Sets the stub of YCbCrExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.InitializeStub">
            <summary>Initializes a new instance of type StubYCbCrExtractChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.ProcessFilter(AForge.Imaging.UnmanagedImage,AForge.Imaging.UnmanagedImage)">
            <summary>Sets the stub of YCbCrExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.ProcessFilterUnmanagedImageUnmanagedImage">
            <summary>Sets the stub of YCbCrExtractChannel.ProcessFilter(UnmanagedImage sourceData, UnmanagedImage destinationData)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.FormatTranslations">
            <summary>Sets the stub of YCbCrExtractChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrExtractChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering">
            <summary>Stub type of AForge.Imaging.Filters.YCbCrFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.#ctor(AForge.Range,AForge.Range,AForge.Range)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.FormatTranslationsGet">
            <summary>Sets the stub of YCbCrFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.InitializeStub">
            <summary>Initializes a new instance of type StubYCbCrFiltering</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of YCbCrFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of YCbCrFiltering.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.FormatTranslations">
            <summary>Sets the stub of YCbCrFiltering.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrFiltering.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubYCbCrLinear">
            <summary>Stub type of AForge.Imaging.Filters.YCbCrLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.FormatTranslationsGet">
            <summary>Sets the stub of YCbCrLinear.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.InitializeStub">
            <summary>Initializes a new instance of type StubYCbCrLinear</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of YCbCrLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of YCbCrLinear.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.FormatTranslations">
            <summary>Sets the stub of YCbCrLinear.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrLinear.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel">
            <summary>Stub type of AForge.Imaging.Filters.YCbCrReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.#ctor(System.Int16,AForge.Imaging.UnmanagedImage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.#ctor(System.Int16,System.Drawing.Bitmap)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.FormatTranslationsGet">
            <summary>Sets the stub of YCbCrReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.InitializeStub">
            <summary>Initializes a new instance of type StubYCbCrReplaceChannel</summary>
        </member>
        <member name="M:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.ProcessFilter(AForge.Imaging.UnmanagedImage,System.Drawing.Rectangle)">
            <summary>Sets the stub of YCbCrReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="F:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.ProcessFilterUnmanagedImageRectangle">
            <summary>Sets the stub of YCbCrReplaceChannel.ProcessFilter(UnmanagedImage image, Rectangle rect)</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.FormatTranslations">
            <summary>Sets the stub of YCbCrReplaceChannel.get_FormatTranslations()</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Filters.Fakes.StubYCbCrReplaceChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimCloudsTexture">
            <summary>Shim type of AForge.Imaging.Textures.CloudsTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.#ctor(AForge.Imaging.Textures.CloudsTexture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.Bind(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.Constructor">
            <summary>Sets the shim of CloudsTexture.CloudsTexture()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.GenerateInt32Int32">
            <summary>Sets the shim of CloudsTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.Reset">
            <summary>Sets the shim of CloudsTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.AllInstances.GenerateInt32Int32">
            <summary>Sets the shim of CloudsTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimCloudsTexture.AllInstances.Reset">
            <summary>Sets the shim of CloudsTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture">
            <summary>Shim type of AForge.Imaging.Textures.LabyrinthTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.#ctor(AForge.Imaging.Textures.LabyrinthTexture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.Bind(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.Constructor">
            <summary>Sets the shim of LabyrinthTexture.LabyrinthTexture()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.GenerateInt32Int32">
            <summary>Sets the shim of LabyrinthTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.Reset">
            <summary>Sets the shim of LabyrinthTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.AllInstances.GenerateInt32Int32">
            <summary>Sets the shim of LabyrinthTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimLabyrinthTexture.AllInstances.Reset">
            <summary>Sets the shim of LabyrinthTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimMarbleTexture">
            <summary>Shim type of AForge.Imaging.Textures.MarbleTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.#ctor(AForge.Imaging.Textures.MarbleTexture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.Bind(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.Constructor">
            <summary>Sets the shim of MarbleTexture.MarbleTexture()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.ConstructorDoubleDouble">
            <summary>Sets the shim of MarbleTexture.MarbleTexture(Double xPeriod, Double yPeriod)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.GenerateInt32Int32">
            <summary>Sets the shim of MarbleTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.Reset">
            <summary>Sets the shim of MarbleTexture.Reset()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.XPeriodGet">
            <summary>Sets the shim of MarbleTexture.get_XPeriod()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.XPeriodSetDouble">
            <summary>Sets the shim of MarbleTexture.set_XPeriod(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.YPeriodGet">
            <summary>Sets the shim of MarbleTexture.get_YPeriod()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.YPeriodSetDouble">
            <summary>Sets the shim of MarbleTexture.set_YPeriod(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.GenerateInt32Int32">
            <summary>Sets the shim of MarbleTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.Reset">
            <summary>Sets the shim of MarbleTexture.Reset()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.XPeriodGet">
            <summary>Sets the shim of MarbleTexture.get_XPeriod()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.XPeriodSetDouble">
            <summary>Sets the shim of MarbleTexture.set_XPeriod(Double value)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.YPeriodGet">
            <summary>Sets the shim of MarbleTexture.get_YPeriod()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimMarbleTexture.AllInstances.YPeriodSetDouble">
            <summary>Sets the shim of MarbleTexture.set_YPeriod(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimTextileTexture">
            <summary>Shim type of AForge.Imaging.Textures.TextileTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextileTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextileTexture.#ctor(AForge.Imaging.Textures.TextileTexture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextileTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextileTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextileTexture.Bind(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.Constructor">
            <summary>Sets the shim of TextileTexture.TextileTexture()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.GenerateInt32Int32">
            <summary>Sets the shim of TextileTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.Reset">
            <summary>Sets the shim of TextileTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimTextileTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.AllInstances.GenerateInt32Int32">
            <summary>Sets the shim of TextileTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextileTexture.AllInstances.Reset">
            <summary>Sets the shim of TextileTexture.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimTextureTools">
            <summary>Shim type of AForge.Imaging.Textures.TextureTools</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextureTools.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextureTools.#ctor(AForge.Imaging.Textures.TextureTools)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextureTools.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimTextureTools.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.Constructor">
            <summary>Sets the shim of TextureTools.TextureTools()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.FromBitmapBitmap">
            <summary>Sets the shim of TextureTools.FromBitmap(Bitmap image)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.FromBitmapBitmapData">
            <summary>Sets the shim of TextureTools.FromBitmap(BitmapData imageData)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.FromBitmapUnmanagedImage">
            <summary>Sets the shim of TextureTools.FromBitmap(UnmanagedImage image)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimTextureTools.ToBitmapSingleMdArray2">
            <summary>Sets the shim of TextureTools.ToBitmap(Single[,] texture)</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimTextureTools.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimWoodTexture">
            <summary>Shim type of AForge.Imaging.Textures.WoodTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimWoodTexture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimWoodTexture.#ctor(AForge.Imaging.Textures.WoodTexture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimWoodTexture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimWoodTexture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.ShimWoodTexture.Bind(AForge.Imaging.Textures.ITextureGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.Constructor">
            <summary>Sets the shim of WoodTexture.WoodTexture()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.ConstructorDouble">
            <summary>Sets the shim of WoodTexture.WoodTexture(Double rings)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.GenerateInt32Int32">
            <summary>Sets the shim of WoodTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.Reset">
            <summary>Sets the shim of WoodTexture.Reset()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.RingsGet">
            <summary>Sets the shim of WoodTexture.get_Rings()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.RingsSetDouble">
            <summary>Sets the shim of WoodTexture.set_Rings(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.ShimWoodTexture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.AllInstances.GenerateInt32Int32">
            <summary>Sets the shim of WoodTexture.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.AllInstances.Reset">
            <summary>Sets the shim of WoodTexture.Reset()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.AllInstances.RingsGet">
            <summary>Sets the shim of WoodTexture.get_Rings()</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.ShimWoodTexture.AllInstances.RingsSetDouble">
            <summary>Sets the shim of WoodTexture.set_Rings(Double value)</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubCloudsTexture">
            <summary>Stub type of AForge.Imaging.Textures.CloudsTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubCloudsTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubCloudsTexture.InitializeStub">
            <summary>Initializes a new instance of type StubCloudsTexture</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubCloudsTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubCloudsTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubCloudsTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubITextureGenerator">
            <summary>Stub type of AForge.Imaging.Textures.ITextureGenerator</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubITextureGenerator.#ctor">
            <summary>Initializes a new instance of type StubITextureGenerator</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubITextureGenerator.afi::AForge#Imaging#Textures#ITextureGenerator#Generate(System.Int32,System.Int32)">
            <summary>Sets the stub of ITextureGenerator.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubITextureGenerator.afi::AForge#Imaging#Textures#ITextureGenerator#Reset">
            <summary>Sets the stub of ITextureGenerator.Reset()</summary>
        </member>
        <member name="F:AForge.Imaging.Textures.Fakes.StubITextureGenerator.GenerateInt32Int32">
            <summary>Sets the stub of ITextureGenerator.Generate(Int32 width, Int32 height)</summary>
        </member>
        <member name="F:AForge.Imaging.Textures.Fakes.StubITextureGenerator.Reset">
            <summary>Sets the stub of ITextureGenerator.Reset()</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture">
            <summary>Stub type of AForge.Imaging.Textures.LabyrinthTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture.InitializeStub">
            <summary>Initializes a new instance of type StubLabyrinthTexture</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubLabyrinthTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubMarbleTexture">
            <summary>Stub type of AForge.Imaging.Textures.MarbleTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubMarbleTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubMarbleTexture.#ctor(System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubMarbleTexture.InitializeStub">
            <summary>Initializes a new instance of type StubMarbleTexture</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubMarbleTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubMarbleTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubMarbleTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubTextileTexture">
            <summary>Stub type of AForge.Imaging.Textures.TextileTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubTextileTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubTextileTexture.InitializeStub">
            <summary>Initializes a new instance of type StubTextileTexture</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubTextileTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubTextileTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubTextileTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AForge.Imaging.Textures.Fakes.StubWoodTexture">
            <summary>Stub type of AForge.Imaging.Textures.WoodTexture</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubWoodTexture.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubWoodTexture.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AForge.Imaging.Textures.Fakes.StubWoodTexture.InitializeStub">
            <summary>Initializes a new instance of type StubWoodTexture</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubWoodTexture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubWoodTexture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AForge.Imaging.Textures.Fakes.StubWoodTexture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
